node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "/opt/ml/input/data/training/train.tfrecords"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const"
  input: "flat_filenames/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 18003
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_9HEwbnhZQXA"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "images/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "images"
      }
    }
  }
}
node {
  name: "images"
  op: "ImageSummary"
  input: "images/tag"
  input: "IteratorGetNext"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 6
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19245009124279022
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d/kernel/Initializer/truncated_normal/mul"
  input: "conv2d/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/kernel/Assign"
  op: "Assign"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/kernel/read"
  op: "Identity"
  input: "conv2d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "initial_conv"
  op: "Identity"
  input: "conv2d/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/gamma/Assign"
  op: "Assign"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/read"
  op: "Identity"
  input: "batch_normalization/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/beta/Assign"
  op: "Assign"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/beta/read"
  op: "Identity"
  input: "batch_normalization/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/moving_mean/read"
  op: "Identity"
  input: "batch_normalization/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/moving_variance/read"
  op: "Identity"
  input: "batch_normalization/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "initial_conv"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/beta/read"
  input: "batch_normalization/Const"
  input: "batch_normalization/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg/sub/x"
  input: "batch_normalization/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization/moving_mean/read"
  input: "batch_normalization/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg/sub_1"
  input: "batch_normalization/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization/AssignMovingAvg_1/sub/x"
  input: "batch_normalization/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization/moving_variance/read"
  input: "batch_normalization/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization/AssignMovingAvg_1/sub_1"
  input: "batch_normalization/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "batch_normalization/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_1/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "Assign"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/kernel/read"
  op: "Identity"
  input: "conv2d_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/Conv2D"
  op: "Conv2D"
  input: "Relu"
  input: "conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_2/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2/kernel/Assign"
  op: "Assign"
  input: "conv2d_2/kernel"
  input: "conv2d_2/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/kernel/read"
  op: "Identity"
  input: "conv2d_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/Conv2D"
  op: "Conv2D"
  input: "Relu"
  input: "conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/read"
  op: "Identity"
  input: "batch_normalization_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/read"
  op: "Identity"
  input: "batch_normalization_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_2/Conv2D"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/beta/read"
  input: "batch_normalization_1/Const"
  input: "batch_normalization_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg/sub/x"
  input: "batch_normalization_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_1/moving_mean/read"
  input: "batch_normalization_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg/sub_1"
  input: "batch_normalization_1/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_1/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_1/moving_variance/read"
  input: "batch_normalization_1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_1/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_1/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "batch_normalization_1/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_3/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_3/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_3/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_3/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_3/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3/kernel/Assign"
  op: "Assign"
  input: "conv2d_3/kernel"
  input: "conv2d_3/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/kernel/read"
  op: "Identity"
  input: "conv2d_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_3/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/Conv2D"
  op: "Conv2D"
  input: "Relu_1"
  input: "conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "conv2d_3/Conv2D"
  input: "conv2d_1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/read"
  op: "Identity"
  input: "batch_normalization_2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/read"
  op: "Identity"
  input: "batch_normalization_2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/beta/read"
  input: "batch_normalization_2/Const"
  input: "batch_normalization_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg/sub/x"
  input: "batch_normalization_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_2/moving_mean/read"
  input: "batch_normalization_2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg/sub_1"
  input: "batch_normalization_2/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_2/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_2/moving_variance/read"
  input: "batch_normalization_2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_2/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_2/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "batch_normalization_2/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_4/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_4/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_4/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_4/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_4/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_4/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_4/kernel/Assign"
  op: "Assign"
  input: "conv2d_4/kernel"
  input: "conv2d_4/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4/kernel/read"
  op: "Identity"
  input: "conv2d_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_4/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/Conv2D"
  op: "Conv2D"
  input: "Relu_2"
  input: "conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/read"
  op: "Identity"
  input: "batch_normalization_3/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/read"
  op: "Identity"
  input: "batch_normalization_3/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_4/Conv2D"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/beta/read"
  input: "batch_normalization_3/Const"
  input: "batch_normalization_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg/sub/x"
  input: "batch_normalization_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_3/moving_mean/read"
  input: "batch_normalization_3/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg/sub_1"
  input: "batch_normalization_3/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_3/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_3/moving_variance/read"
  input: "batch_normalization_3/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_3/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_3/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_3/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "batch_normalization_3/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_5/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_5/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_5/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_5/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_5/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_5/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_5/kernel/Assign"
  op: "Assign"
  input: "conv2d_5/kernel"
  input: "conv2d_5/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5/kernel/read"
  op: "Identity"
  input: "conv2d_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_5/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/Conv2D"
  op: "Conv2D"
  input: "Relu_3"
  input: "conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "conv2d_5/Conv2D"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/read"
  op: "Identity"
  input: "batch_normalization_4/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/read"
  op: "Identity"
  input: "batch_normalization_4/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_1"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/beta/read"
  input: "batch_normalization_4/Const"
  input: "batch_normalization_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg/sub/x"
  input: "batch_normalization_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_4/moving_mean/read"
  input: "batch_normalization_4/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg/sub_1"
  input: "batch_normalization_4/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_4/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_4/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_4/moving_variance/read"
  input: "batch_normalization_4/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_4/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_4/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_4/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_4"
  op: "Relu"
  input: "batch_normalization_4/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_6/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_6/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_6/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_6/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_6/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_6/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_6/kernel/Assign"
  op: "Assign"
  input: "conv2d_6/kernel"
  input: "conv2d_6/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6/kernel/read"
  op: "Identity"
  input: "conv2d_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_6/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/Conv2D"
  op: "Conv2D"
  input: "Relu_4"
  input: "conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/gamma/read"
  op: "Identity"
  input: "batch_normalization_5/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/beta/Assign"
  op: "Assign"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/beta/read"
  op: "Identity"
  input: "batch_normalization_5/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_6/Conv2D"
  input: "batch_normalization_5/gamma/read"
  input: "batch_normalization_5/beta/read"
  input: "batch_normalization_5/Const"
  input: "batch_normalization_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg/sub/x"
  input: "batch_normalization_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_5/moving_mean/read"
  input: "batch_normalization_5/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg/sub_1"
  input: "batch_normalization_5/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_5/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_5/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_5/moving_variance/read"
  input: "batch_normalization_5/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_5/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_5/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_5/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_5"
  op: "Relu"
  input: "batch_normalization_5/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_7/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_7/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_7/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_7/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_7/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_7/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_7/kernel/Assign"
  op: "Assign"
  input: "conv2d_7/kernel"
  input: "conv2d_7/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7/kernel/read"
  op: "Identity"
  input: "conv2d_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_7/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/Conv2D"
  op: "Conv2D"
  input: "Relu_5"
  input: "conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "conv2d_7/Conv2D"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/gamma/read"
  op: "Identity"
  input: "batch_normalization_6/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/beta/Assign"
  op: "Assign"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/beta/read"
  op: "Identity"
  input: "batch_normalization_6/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_2"
  input: "batch_normalization_6/gamma/read"
  input: "batch_normalization_6/beta/read"
  input: "batch_normalization_6/Const"
  input: "batch_normalization_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg/sub/x"
  input: "batch_normalization_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_6/moving_mean/read"
  input: "batch_normalization_6/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg/sub_1"
  input: "batch_normalization_6/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_6/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_6/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_6/moving_variance/read"
  input: "batch_normalization_6/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_6/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_6/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_6/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_6"
  op: "Relu"
  input: "batch_normalization_6/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_8/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_8/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_8/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_8/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_8/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_8/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_8/kernel/Assign"
  op: "Assign"
  input: "conv2d_8/kernel"
  input: "conv2d_8/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8/kernel/read"
  op: "Identity"
  input: "conv2d_8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_8/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/Conv2D"
  op: "Conv2D"
  input: "Relu_6"
  input: "conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/gamma/read"
  op: "Identity"
  input: "batch_normalization_7/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/beta/Assign"
  op: "Assign"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/beta/read"
  op: "Identity"
  input: "batch_normalization_7/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_8/Conv2D"
  input: "batch_normalization_7/gamma/read"
  input: "batch_normalization_7/beta/read"
  input: "batch_normalization_7/Const"
  input: "batch_normalization_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg/sub/x"
  input: "batch_normalization_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_7/moving_mean/read"
  input: "batch_normalization_7/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg/sub_1"
  input: "batch_normalization_7/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_7/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_7/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_7/moving_variance/read"
  input: "batch_normalization_7/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_7/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_7/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_7/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_7"
  op: "Relu"
  input: "batch_normalization_7/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_9/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_9/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_9/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_9/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_9/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_9/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_9/kernel/Assign"
  op: "Assign"
  input: "conv2d_9/kernel"
  input: "conv2d_9/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9/kernel/read"
  op: "Identity"
  input: "conv2d_9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_9/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/Conv2D"
  op: "Conv2D"
  input: "Relu_7"
  input: "conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "conv2d_9/Conv2D"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/gamma/read"
  op: "Identity"
  input: "batch_normalization_8/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/beta/Assign"
  op: "Assign"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/beta/read"
  op: "Identity"
  input: "batch_normalization_8/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_3"
  input: "batch_normalization_8/gamma/read"
  input: "batch_normalization_8/beta/read"
  input: "batch_normalization_8/Const"
  input: "batch_normalization_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg/sub/x"
  input: "batch_normalization_8/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_8/moving_mean/read"
  input: "batch_normalization_8/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg/sub_1"
  input: "batch_normalization_8/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_8/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_8/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_8/moving_variance/read"
  input: "batch_normalization_8/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_8/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_8/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_8/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_8"
  op: "Relu"
  input: "batch_normalization_8/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_10/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_10/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_10/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_10/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_10/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_10/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_10/kernel/Assign"
  op: "Assign"
  input: "conv2d_10/kernel"
  input: "conv2d_10/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10/kernel/read"
  op: "Identity"
  input: "conv2d_10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_10/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/Conv2D"
  op: "Conv2D"
  input: "Relu_8"
  input: "conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/gamma/read"
  op: "Identity"
  input: "batch_normalization_9/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/beta/Assign"
  op: "Assign"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/beta/read"
  op: "Identity"
  input: "batch_normalization_9/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_10/Conv2D"
  input: "batch_normalization_9/gamma/read"
  input: "batch_normalization_9/beta/read"
  input: "batch_normalization_9/Const"
  input: "batch_normalization_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg/sub/x"
  input: "batch_normalization_9/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_9/moving_mean/read"
  input: "batch_normalization_9/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg/sub_1"
  input: "batch_normalization_9/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_9/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_9/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_9/moving_variance/read"
  input: "batch_normalization_9/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_9/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_9/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_9/moving_variance"
  input: "batch_normalization_9/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_9"
  op: "Relu"
  input: "batch_normalization_9/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_11/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_11/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_11/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_11/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_11/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_11/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_11/kernel/Assign"
  op: "Assign"
  input: "conv2d_11/kernel"
  input: "conv2d_11/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11/kernel/read"
  op: "Identity"
  input: "conv2d_11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_11/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/Conv2D"
  op: "Conv2D"
  input: "Relu_9"
  input: "conv2d_11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "conv2d_11/Conv2D"
  input: "add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "block_layer1"
  op: "Identity"
  input: "add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/gamma/read"
  op: "Identity"
  input: "batch_normalization_10/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/beta/Assign"
  op: "Assign"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/beta/read"
  op: "Identity"
  input: "batch_normalization_10/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block_layer1"
  input: "batch_normalization_10/gamma/read"
  input: "batch_normalization_10/beta/read"
  input: "batch_normalization_10/Const"
  input: "batch_normalization_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg/sub/x"
  input: "batch_normalization_10/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_10/moving_mean/read"
  input: "batch_normalization_10/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg/sub_1"
  input: "batch_normalization_10/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_10/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_10/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_10/moving_variance/read"
  input: "batch_normalization_10/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_10/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_10/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_10/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_10"
  op: "Relu"
  input: "batch_normalization_10/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "Pad/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Relu_10"
  input: "Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_12/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_12/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_12/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_12/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_12/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_12/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_12/kernel/Assign"
  op: "Assign"
  input: "conv2d_12/kernel"
  input: "conv2d_12/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12/kernel/read"
  op: "Identity"
  input: "conv2d_12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_12/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/Conv2D"
  op: "Conv2D"
  input: "Pad"
  input: "conv2d_12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Pad_1/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_1"
  op: "Pad"
  input: "Relu_10"
  input: "Pad_1/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_13/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_13/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_13/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_13/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_13/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_13/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_13/kernel/Assign"
  op: "Assign"
  input: "conv2d_13/kernel"
  input: "conv2d_13/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13/kernel/read"
  op: "Identity"
  input: "conv2d_13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_13/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/Conv2D"
  op: "Conv2D"
  input: "Pad_1"
  input: "conv2d_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/gamma/read"
  op: "Identity"
  input: "batch_normalization_11/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/beta/Assign"
  op: "Assign"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/beta/read"
  op: "Identity"
  input: "batch_normalization_11/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_13/Conv2D"
  input: "batch_normalization_11/gamma/read"
  input: "batch_normalization_11/beta/read"
  input: "batch_normalization_11/Const"
  input: "batch_normalization_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg/sub/x"
  input: "batch_normalization_11/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_11/moving_mean/read"
  input: "batch_normalization_11/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg/sub_1"
  input: "batch_normalization_11/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_11/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_11/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_11/moving_variance/read"
  input: "batch_normalization_11/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_11/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_11/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_11/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_11"
  op: "Relu"
  input: "batch_normalization_11/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_14/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_14/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_14/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_14/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_14/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_14/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_14/kernel/Assign"
  op: "Assign"
  input: "conv2d_14/kernel"
  input: "conv2d_14/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14/kernel/read"
  op: "Identity"
  input: "conv2d_14/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_14/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/Conv2D"
  op: "Conv2D"
  input: "Relu_11"
  input: "conv2d_14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "conv2d_14/Conv2D"
  input: "conv2d_12/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/gamma/read"
  op: "Identity"
  input: "batch_normalization_12/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/beta/Assign"
  op: "Assign"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/beta/read"
  op: "Identity"
  input: "batch_normalization_12/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_5"
  input: "batch_normalization_12/gamma/read"
  input: "batch_normalization_12/beta/read"
  input: "batch_normalization_12/Const"
  input: "batch_normalization_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg/sub/x"
  input: "batch_normalization_12/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_12/moving_mean/read"
  input: "batch_normalization_12/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg/sub_1"
  input: "batch_normalization_12/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_12/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_12/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_12/moving_variance/read"
  input: "batch_normalization_12/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_12/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_12/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_12/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_12"
  op: "Relu"
  input: "batch_normalization_12/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_15/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_15/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_15/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_15/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_15/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_15/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_15/kernel/Assign"
  op: "Assign"
  input: "conv2d_15/kernel"
  input: "conv2d_15/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15/kernel/read"
  op: "Identity"
  input: "conv2d_15/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_15/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/Conv2D"
  op: "Conv2D"
  input: "Relu_12"
  input: "conv2d_15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/gamma/read"
  op: "Identity"
  input: "batch_normalization_13/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/beta/Assign"
  op: "Assign"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/beta/read"
  op: "Identity"
  input: "batch_normalization_13/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_15/Conv2D"
  input: "batch_normalization_13/gamma/read"
  input: "batch_normalization_13/beta/read"
  input: "batch_normalization_13/Const"
  input: "batch_normalization_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg/sub/x"
  input: "batch_normalization_13/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_13/moving_mean/read"
  input: "batch_normalization_13/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg/sub_1"
  input: "batch_normalization_13/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_13/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_13/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_13/moving_variance/read"
  input: "batch_normalization_13/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_13/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_13/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_13/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_13"
  op: "Relu"
  input: "batch_normalization_13/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_16/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_16/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_16/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_16/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_16/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_16/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_16/kernel/Assign"
  op: "Assign"
  input: "conv2d_16/kernel"
  input: "conv2d_16/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16/kernel/read"
  op: "Identity"
  input: "conv2d_16/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_16/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/Conv2D"
  op: "Conv2D"
  input: "Relu_13"
  input: "conv2d_16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "conv2d_16/Conv2D"
  input: "add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/gamma/read"
  op: "Identity"
  input: "batch_normalization_14/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/beta/Assign"
  op: "Assign"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/beta/read"
  op: "Identity"
  input: "batch_normalization_14/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_6"
  input: "batch_normalization_14/gamma/read"
  input: "batch_normalization_14/beta/read"
  input: "batch_normalization_14/Const"
  input: "batch_normalization_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg/sub/x"
  input: "batch_normalization_14/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_14/moving_mean/read"
  input: "batch_normalization_14/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg/sub_1"
  input: "batch_normalization_14/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_14/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_14/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_14/moving_variance/read"
  input: "batch_normalization_14/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_14/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_14/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_14/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_14"
  op: "Relu"
  input: "batch_normalization_14/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_17/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_17/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_17/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_17/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_17/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_17/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_17/kernel/Assign"
  op: "Assign"
  input: "conv2d_17/kernel"
  input: "conv2d_17/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17/kernel/read"
  op: "Identity"
  input: "conv2d_17/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_17/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/Conv2D"
  op: "Conv2D"
  input: "Relu_14"
  input: "conv2d_17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/gamma/read"
  op: "Identity"
  input: "batch_normalization_15/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/beta/Assign"
  op: "Assign"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/beta/read"
  op: "Identity"
  input: "batch_normalization_15/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_17/Conv2D"
  input: "batch_normalization_15/gamma/read"
  input: "batch_normalization_15/beta/read"
  input: "batch_normalization_15/Const"
  input: "batch_normalization_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg/sub/x"
  input: "batch_normalization_15/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_15/moving_mean/read"
  input: "batch_normalization_15/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg/sub_1"
  input: "batch_normalization_15/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_15/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_15/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_15/moving_variance/read"
  input: "batch_normalization_15/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_15/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_15/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_15/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_15"
  op: "Relu"
  input: "batch_normalization_15/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_18/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_18/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_18/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_18/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_18/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_18/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_18/kernel/Assign"
  op: "Assign"
  input: "conv2d_18/kernel"
  input: "conv2d_18/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18/kernel/read"
  op: "Identity"
  input: "conv2d_18/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_18/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/Conv2D"
  op: "Conv2D"
  input: "Relu_15"
  input: "conv2d_18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "conv2d_18/Conv2D"
  input: "add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/gamma/read"
  op: "Identity"
  input: "batch_normalization_16/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/beta/Assign"
  op: "Assign"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/beta/read"
  op: "Identity"
  input: "batch_normalization_16/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_7"
  input: "batch_normalization_16/gamma/read"
  input: "batch_normalization_16/beta/read"
  input: "batch_normalization_16/Const"
  input: "batch_normalization_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg/sub/x"
  input: "batch_normalization_16/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_16/moving_mean/read"
  input: "batch_normalization_16/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg/sub_1"
  input: "batch_normalization_16/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_16/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_16/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_16/moving_variance/read"
  input: "batch_normalization_16/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_16/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_16/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_16/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_16"
  op: "Relu"
  input: "batch_normalization_16/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_19/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_19/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_19/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_19/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_19/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_19/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_19/kernel/Assign"
  op: "Assign"
  input: "conv2d_19/kernel"
  input: "conv2d_19/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19/kernel/read"
  op: "Identity"
  input: "conv2d_19/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_19/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/Conv2D"
  op: "Conv2D"
  input: "Relu_16"
  input: "conv2d_19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/gamma/read"
  op: "Identity"
  input: "batch_normalization_17/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/beta/Assign"
  op: "Assign"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/beta/read"
  op: "Identity"
  input: "batch_normalization_17/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_19/Conv2D"
  input: "batch_normalization_17/gamma/read"
  input: "batch_normalization_17/beta/read"
  input: "batch_normalization_17/Const"
  input: "batch_normalization_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg/sub/x"
  input: "batch_normalization_17/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_17/moving_mean/read"
  input: "batch_normalization_17/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg/sub_1"
  input: "batch_normalization_17/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_17/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_17/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_17/moving_variance/read"
  input: "batch_normalization_17/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_17/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_17/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_17/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_17"
  op: "Relu"
  input: "batch_normalization_17/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_20/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_20/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_20/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_20/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_20/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_20/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_20/kernel/Assign"
  op: "Assign"
  input: "conv2d_20/kernel"
  input: "conv2d_20/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20/kernel/read"
  op: "Identity"
  input: "conv2d_20/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_20/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/Conv2D"
  op: "Conv2D"
  input: "Relu_17"
  input: "conv2d_20/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "conv2d_20/Conv2D"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/gamma/read"
  op: "Identity"
  input: "batch_normalization_18/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/beta/Assign"
  op: "Assign"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/beta/read"
  op: "Identity"
  input: "batch_normalization_18/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_8"
  input: "batch_normalization_18/gamma/read"
  input: "batch_normalization_18/beta/read"
  input: "batch_normalization_18/Const"
  input: "batch_normalization_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg/sub/x"
  input: "batch_normalization_18/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_18/moving_mean/read"
  input: "batch_normalization_18/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg/sub_1"
  input: "batch_normalization_18/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_18/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_18/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_18/moving_variance/read"
  input: "batch_normalization_18/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_18/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_18/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_18/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_18"
  op: "Relu"
  input: "batch_normalization_18/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_21/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_21/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_21/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_21/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_21/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_21/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_21/kernel/Assign"
  op: "Assign"
  input: "conv2d_21/kernel"
  input: "conv2d_21/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_21/kernel/read"
  op: "Identity"
  input: "conv2d_21/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_21/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_21/Conv2D"
  op: "Conv2D"
  input: "Relu_18"
  input: "conv2d_21/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/gamma/read"
  op: "Identity"
  input: "batch_normalization_19/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/beta/Assign"
  op: "Assign"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/beta/read"
  op: "Identity"
  input: "batch_normalization_19/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_21/Conv2D"
  input: "batch_normalization_19/gamma/read"
  input: "batch_normalization_19/beta/read"
  input: "batch_normalization_19/Const"
  input: "batch_normalization_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg/sub/x"
  input: "batch_normalization_19/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_19/moving_mean/read"
  input: "batch_normalization_19/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg/sub_1"
  input: "batch_normalization_19/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_19/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_19/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_19/moving_variance/read"
  input: "batch_normalization_19/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_19/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_19/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_19/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_19"
  op: "Relu"
  input: "batch_normalization_19/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_22/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_22/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_22/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_22/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_22/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_22/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_22/kernel/Assign"
  op: "Assign"
  input: "conv2d_22/kernel"
  input: "conv2d_22/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_22/kernel/read"
  op: "Identity"
  input: "conv2d_22/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_22/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_22/Conv2D"
  op: "Conv2D"
  input: "Relu_19"
  input: "conv2d_22/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_9"
  op: "Add"
  input: "conv2d_22/Conv2D"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "block_layer2"
  op: "Identity"
  input: "add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/gamma/read"
  op: "Identity"
  input: "batch_normalization_20/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/beta/Assign"
  op: "Assign"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/beta/read"
  op: "Identity"
  input: "batch_normalization_20/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block_layer2"
  input: "batch_normalization_20/gamma/read"
  input: "batch_normalization_20/beta/read"
  input: "batch_normalization_20/Const"
  input: "batch_normalization_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg/sub/x"
  input: "batch_normalization_20/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_20/moving_mean/read"
  input: "batch_normalization_20/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg/sub_1"
  input: "batch_normalization_20/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_20/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_20/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_20/moving_variance/read"
  input: "batch_normalization_20/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_20/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_20/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_20/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_20"
  op: "Relu"
  input: "batch_normalization_20/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Pad_2/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_2"
  op: "Pad"
  input: "Relu_20"
  input: "Pad_2/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_23/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_23/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_23/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_23/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_23/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_23/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_23/kernel/Assign"
  op: "Assign"
  input: "conv2d_23/kernel"
  input: "conv2d_23/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_23/kernel/read"
  op: "Identity"
  input: "conv2d_23/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_23/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_23/Conv2D"
  op: "Conv2D"
  input: "Pad_2"
  input: "conv2d_23/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Pad_3/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Pad_3"
  op: "Pad"
  input: "Relu_20"
  input: "Pad_3/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_24/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_24/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_24/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_24/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_24/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_24/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_24/kernel/Assign"
  op: "Assign"
  input: "conv2d_24/kernel"
  input: "conv2d_24/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_24/kernel/read"
  op: "Identity"
  input: "conv2d_24/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_24/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_24/Conv2D"
  op: "Conv2D"
  input: "Pad_3"
  input: "conv2d_24/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/gamma/read"
  op: "Identity"
  input: "batch_normalization_21/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/beta/Assign"
  op: "Assign"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/beta/read"
  op: "Identity"
  input: "batch_normalization_21/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_24/Conv2D"
  input: "batch_normalization_21/gamma/read"
  input: "batch_normalization_21/beta/read"
  input: "batch_normalization_21/Const"
  input: "batch_normalization_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg/sub/x"
  input: "batch_normalization_21/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_21/moving_mean/read"
  input: "batch_normalization_21/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg/sub_1"
  input: "batch_normalization_21/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_21/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_21/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_21/moving_variance/read"
  input: "batch_normalization_21/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_21/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_21/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_21/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_21"
  op: "Relu"
  input: "batch_normalization_21/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_25/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_25/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_25/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_25/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_25/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_25/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_25/kernel/Assign"
  op: "Assign"
  input: "conv2d_25/kernel"
  input: "conv2d_25/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_25/kernel/read"
  op: "Identity"
  input: "conv2d_25/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_25/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_25/Conv2D"
  op: "Conv2D"
  input: "Relu_21"
  input: "conv2d_25/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_10"
  op: "Add"
  input: "conv2d_25/Conv2D"
  input: "conv2d_23/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/gamma/read"
  op: "Identity"
  input: "batch_normalization_22/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/beta/Assign"
  op: "Assign"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/beta/read"
  op: "Identity"
  input: "batch_normalization_22/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_10"
  input: "batch_normalization_22/gamma/read"
  input: "batch_normalization_22/beta/read"
  input: "batch_normalization_22/Const"
  input: "batch_normalization_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg/sub/x"
  input: "batch_normalization_22/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_22/moving_mean/read"
  input: "batch_normalization_22/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg/sub_1"
  input: "batch_normalization_22/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_22/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_22/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_22/moving_variance/read"
  input: "batch_normalization_22/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_22/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_22/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_22/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_22"
  op: "Relu"
  input: "batch_normalization_22/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_26/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_26/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_26/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_26/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_26/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_26/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_26/kernel/Assign"
  op: "Assign"
  input: "conv2d_26/kernel"
  input: "conv2d_26/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_26/kernel/read"
  op: "Identity"
  input: "conv2d_26/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_26/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_26/Conv2D"
  op: "Conv2D"
  input: "Relu_22"
  input: "conv2d_26/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/gamma/read"
  op: "Identity"
  input: "batch_normalization_23/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/beta/Assign"
  op: "Assign"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/beta/read"
  op: "Identity"
  input: "batch_normalization_23/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_26/Conv2D"
  input: "batch_normalization_23/gamma/read"
  input: "batch_normalization_23/beta/read"
  input: "batch_normalization_23/Const"
  input: "batch_normalization_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg/sub/x"
  input: "batch_normalization_23/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_23/moving_mean/read"
  input: "batch_normalization_23/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg/sub_1"
  input: "batch_normalization_23/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_23/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_23/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_23/moving_variance/read"
  input: "batch_normalization_23/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_23/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_23/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_23/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_23"
  op: "Relu"
  input: "batch_normalization_23/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_27/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_27/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_27/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_27/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_27/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_27/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_27/kernel/Assign"
  op: "Assign"
  input: "conv2d_27/kernel"
  input: "conv2d_27/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_27/kernel/read"
  op: "Identity"
  input: "conv2d_27/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_27/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_27/Conv2D"
  op: "Conv2D"
  input: "Relu_23"
  input: "conv2d_27/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_11"
  op: "Add"
  input: "conv2d_27/Conv2D"
  input: "add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_24/gamma"
  input: "batch_normalization_24/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/gamma/read"
  op: "Identity"
  input: "batch_normalization_24/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/beta/Assign"
  op: "Assign"
  input: "batch_normalization_24/beta"
  input: "batch_normalization_24/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/beta/read"
  op: "Identity"
  input: "batch_normalization_24/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_24/moving_mean"
  input: "batch_normalization_24/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_24/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_24/moving_variance"
  input: "batch_normalization_24/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_24/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_11"
  input: "batch_normalization_24/gamma/read"
  input: "batch_normalization_24/beta/read"
  input: "batch_normalization_24/Const"
  input: "batch_normalization_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_24/AssignMovingAvg/sub/x"
  input: "batch_normalization_24/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_24/moving_mean/read"
  input: "batch_normalization_24/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_24/AssignMovingAvg/sub_1"
  input: "batch_normalization_24/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_24/moving_mean"
  input: "batch_normalization_24/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_24/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_24/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_24/moving_variance/read"
  input: "batch_normalization_24/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_24/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_24/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_24/moving_variance"
  input: "batch_normalization_24/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_24"
  op: "Relu"
  input: "batch_normalization_24/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_28/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_28/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_28/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_28/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_28/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_28/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_28/kernel/Assign"
  op: "Assign"
  input: "conv2d_28/kernel"
  input: "conv2d_28/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_28/kernel/read"
  op: "Identity"
  input: "conv2d_28/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_28/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_28/Conv2D"
  op: "Conv2D"
  input: "Relu_24"
  input: "conv2d_28/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_25/gamma"
  input: "batch_normalization_25/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/gamma/read"
  op: "Identity"
  input: "batch_normalization_25/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/beta/Assign"
  op: "Assign"
  input: "batch_normalization_25/beta"
  input: "batch_normalization_25/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/beta/read"
  op: "Identity"
  input: "batch_normalization_25/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_25/moving_mean"
  input: "batch_normalization_25/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_25/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_25/moving_variance"
  input: "batch_normalization_25/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_25/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_28/Conv2D"
  input: "batch_normalization_25/gamma/read"
  input: "batch_normalization_25/beta/read"
  input: "batch_normalization_25/Const"
  input: "batch_normalization_25/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_25/AssignMovingAvg/sub/x"
  input: "batch_normalization_25/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_25/moving_mean/read"
  input: "batch_normalization_25/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_25/AssignMovingAvg/sub_1"
  input: "batch_normalization_25/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_25/moving_mean"
  input: "batch_normalization_25/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_25/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_25/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_25/moving_variance/read"
  input: "batch_normalization_25/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_25/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_25/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_25/moving_variance"
  input: "batch_normalization_25/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_25"
  op: "Relu"
  input: "batch_normalization_25/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_29/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_29/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_29/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_29/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_29/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_29/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_29/kernel/Assign"
  op: "Assign"
  input: "conv2d_29/kernel"
  input: "conv2d_29/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_29/kernel/read"
  op: "Identity"
  input: "conv2d_29/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_29/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_29/Conv2D"
  op: "Conv2D"
  input: "Relu_25"
  input: "conv2d_29/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_12"
  op: "Add"
  input: "conv2d_29/Conv2D"
  input: "add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_26/gamma"
  input: "batch_normalization_26/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/gamma/read"
  op: "Identity"
  input: "batch_normalization_26/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/beta/Assign"
  op: "Assign"
  input: "batch_normalization_26/beta"
  input: "batch_normalization_26/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/beta/read"
  op: "Identity"
  input: "batch_normalization_26/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_26/moving_mean"
  input: "batch_normalization_26/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_26/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_26/moving_variance"
  input: "batch_normalization_26/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_26/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_12"
  input: "batch_normalization_26/gamma/read"
  input: "batch_normalization_26/beta/read"
  input: "batch_normalization_26/Const"
  input: "batch_normalization_26/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_26/AssignMovingAvg/sub/x"
  input: "batch_normalization_26/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_26/moving_mean/read"
  input: "batch_normalization_26/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_26/AssignMovingAvg/sub_1"
  input: "batch_normalization_26/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_26/moving_mean"
  input: "batch_normalization_26/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_26/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_26/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_26/moving_variance/read"
  input: "batch_normalization_26/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_26/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_26/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_26/moving_variance"
  input: "batch_normalization_26/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_26"
  op: "Relu"
  input: "batch_normalization_26/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_30/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_30/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_30/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_30/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_30/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_30/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_30/kernel/Assign"
  op: "Assign"
  input: "conv2d_30/kernel"
  input: "conv2d_30/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_30/kernel/read"
  op: "Identity"
  input: "conv2d_30/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_30/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_30/Conv2D"
  op: "Conv2D"
  input: "Relu_26"
  input: "conv2d_30/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_27/gamma"
  input: "batch_normalization_27/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/gamma/read"
  op: "Identity"
  input: "batch_normalization_27/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/beta/Assign"
  op: "Assign"
  input: "batch_normalization_27/beta"
  input: "batch_normalization_27/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/beta/read"
  op: "Identity"
  input: "batch_normalization_27/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_27/moving_mean"
  input: "batch_normalization_27/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_27/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_27/moving_variance"
  input: "batch_normalization_27/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_27/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_30/Conv2D"
  input: "batch_normalization_27/gamma/read"
  input: "batch_normalization_27/beta/read"
  input: "batch_normalization_27/Const"
  input: "batch_normalization_27/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_27/AssignMovingAvg/sub/x"
  input: "batch_normalization_27/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_27/moving_mean/read"
  input: "batch_normalization_27/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_27/AssignMovingAvg/sub_1"
  input: "batch_normalization_27/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_27/moving_mean"
  input: "batch_normalization_27/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_27/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_27/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_27/moving_variance/read"
  input: "batch_normalization_27/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_27/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_27/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_27/moving_variance"
  input: "batch_normalization_27/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_27"
  op: "Relu"
  input: "batch_normalization_27/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_31/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_31/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_31/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_31/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_31/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_31/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_31/kernel/Assign"
  op: "Assign"
  input: "conv2d_31/kernel"
  input: "conv2d_31/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_31/kernel/read"
  op: "Identity"
  input: "conv2d_31/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_31/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_31/Conv2D"
  op: "Conv2D"
  input: "Relu_27"
  input: "conv2d_31/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_13"
  op: "Add"
  input: "conv2d_31/Conv2D"
  input: "add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_28/gamma"
  input: "batch_normalization_28/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/gamma/read"
  op: "Identity"
  input: "batch_normalization_28/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/beta/Assign"
  op: "Assign"
  input: "batch_normalization_28/beta"
  input: "batch_normalization_28/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/beta/read"
  op: "Identity"
  input: "batch_normalization_28/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_28/moving_mean"
  input: "batch_normalization_28/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_28/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_28/moving_variance"
  input: "batch_normalization_28/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_28/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "add_13"
  input: "batch_normalization_28/gamma/read"
  input: "batch_normalization_28/beta/read"
  input: "batch_normalization_28/Const"
  input: "batch_normalization_28/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_28/AssignMovingAvg/sub/x"
  input: "batch_normalization_28/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_28/moving_mean/read"
  input: "batch_normalization_28/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_28/AssignMovingAvg/sub_1"
  input: "batch_normalization_28/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_28/moving_mean"
  input: "batch_normalization_28/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_28/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_28/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_28/moving_variance/read"
  input: "batch_normalization_28/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_28/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_28/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_28/moving_variance"
  input: "batch_normalization_28/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_28"
  op: "Relu"
  input: "batch_normalization_28/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_32/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_32/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_32/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_32/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_32/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_32/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_32/kernel/Assign"
  op: "Assign"
  input: "conv2d_32/kernel"
  input: "conv2d_32/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_32/kernel/read"
  op: "Identity"
  input: "conv2d_32/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_32/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_32/Conv2D"
  op: "Conv2D"
  input: "Relu_28"
  input: "conv2d_32/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_29/gamma"
  input: "batch_normalization_29/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/gamma/read"
  op: "Identity"
  input: "batch_normalization_29/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/beta/Assign"
  op: "Assign"
  input: "batch_normalization_29/beta"
  input: "batch_normalization_29/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/beta/read"
  op: "Identity"
  input: "batch_normalization_29/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_29/moving_mean"
  input: "batch_normalization_29/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_29/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_29/moving_variance"
  input: "batch_normalization_29/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_29/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2d_32/Conv2D"
  input: "batch_normalization_29/gamma/read"
  input: "batch_normalization_29/beta/read"
  input: "batch_normalization_29/Const"
  input: "batch_normalization_29/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_29/AssignMovingAvg/sub/x"
  input: "batch_normalization_29/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_29/moving_mean/read"
  input: "batch_normalization_29/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_29/AssignMovingAvg/sub_1"
  input: "batch_normalization_29/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_29/moving_mean"
  input: "batch_normalization_29/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_29/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_29/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_29/moving_variance/read"
  input: "batch_normalization_29/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_29/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_29/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_29/moving_variance"
  input: "batch_normalization_29/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_29"
  op: "Relu"
  input: "batch_normalization_29/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084301
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv2d_33/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "conv2d_33/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "conv2d_33/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "conv2d_33/kernel/Initializer/truncated_normal/mul"
  input: "conv2d_33/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_33/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_33/kernel/Assign"
  op: "Assign"
  input: "conv2d_33/kernel"
  input: "conv2d_33/kernel/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_33/kernel/read"
  op: "Identity"
  input: "conv2d_33/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_33/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_33/Conv2D"
  op: "Conv2D"
  input: "Relu_29"
  input: "conv2d_33/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_14"
  op: "Add"
  input: "conv2d_33/Conv2D"
  input: "add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "block_layer3"
  op: "Identity"
  input: "add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Assign"
  op: "Assign"
  input: "batch_normalization_30/gamma"
  input: "batch_normalization_30/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/gamma/read"
  op: "Identity"
  input: "batch_normalization_30/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/beta/Assign"
  op: "Assign"
  input: "batch_normalization_30/beta"
  input: "batch_normalization_30/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/beta/read"
  op: "Identity"
  input: "batch_normalization_30/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean/Assign"
  op: "Assign"
  input: "batch_normalization_30/moving_mean"
  input: "batch_normalization_30/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moving_mean/read"
  op: "Identity"
  input: "batch_normalization_30/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance/Assign"
  op: "Assign"
  input: "batch_normalization_30/moving_variance"
  input: "batch_normalization_30/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/moving_variance/read"
  op: "Identity"
  input: "batch_normalization_30/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "block_layer3"
  input: "batch_normalization_30/gamma/read"
  input: "batch_normalization_30/beta/read"
  input: "batch_normalization_30/Const"
  input: "batch_normalization_30/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/sub"
  op: "Sub"
  input: "batch_normalization_30/AssignMovingAvg/sub/x"
  input: "batch_normalization_30/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "batch_normalization_30/moving_mean/read"
  input: "batch_normalization_30/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg/mul"
  op: "Mul"
  input: "batch_normalization_30/AssignMovingAvg/sub_1"
  input: "batch_normalization_30/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg"
  op: "AssignSub"
  input: "batch_normalization_30/moving_mean"
  input: "batch_normalization_30/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "batch_normalization_30/AssignMovingAvg_1/sub/x"
  input: "batch_normalization_30/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "batch_normalization_30/moving_variance/read"
  input: "batch_normalization_30/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "batch_normalization_30/AssignMovingAvg_1/sub_1"
  input: "batch_normalization_30/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/AssignMovingAvg_1"
  op: "AssignSub"
  input: "batch_normalization_30/moving_variance"
  input: "batch_normalization_30/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Relu_30"
  op: "Relu"
  input: "batch_normalization_30/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "Relu_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 8
        i: 8
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "final_avg_pool"
  op: "Identity"
  input: "average_pooling2d/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377@\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "final_avg_pool"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2847473919391632
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2847473919391632
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Assign"
  op: "Assign"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/read"
  op: "Identity"
  input: "dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "Reshape_1"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "final_dense"
  op: "Identity"
  input: "dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "final_dense"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "softmax_tensor"
  op: "Softmax"
  input: "final_dense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "one_hot"
  op: "OneHot"
  input: "IteratorGetNext:1"
  input: "one_hot/depth"
  input: "one_hot/on_value"
  input: "one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "final_dense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Shape"
  input: "final_dense"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "final_dense"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/ones_like/Shape"
  input: "softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "softmax_cross_entropy_loss/ones_like"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "softmax_cross_entropy_loss/div"
  input: "softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cross_entropy"
  op: "Identity"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss"
  op: "L2Loss"
  input: "conv2d/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_1"
  op: "L2Loss"
  input: "batch_normalization/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_2"
  op: "L2Loss"
  input: "batch_normalization/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_3"
  op: "L2Loss"
  input: "conv2d_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_4"
  op: "L2Loss"
  input: "conv2d_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_5"
  op: "L2Loss"
  input: "batch_normalization_1/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_6"
  op: "L2Loss"
  input: "batch_normalization_1/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_7"
  op: "L2Loss"
  input: "conv2d_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_8"
  op: "L2Loss"
  input: "batch_normalization_2/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_9"
  op: "L2Loss"
  input: "batch_normalization_2/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_10"
  op: "L2Loss"
  input: "conv2d_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_11"
  op: "L2Loss"
  input: "batch_normalization_3/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_12"
  op: "L2Loss"
  input: "batch_normalization_3/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_13"
  op: "L2Loss"
  input: "conv2d_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_14"
  op: "L2Loss"
  input: "batch_normalization_4/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_15"
  op: "L2Loss"
  input: "batch_normalization_4/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_16"
  op: "L2Loss"
  input: "conv2d_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_17"
  op: "L2Loss"
  input: "batch_normalization_5/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_18"
  op: "L2Loss"
  input: "batch_normalization_5/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_19"
  op: "L2Loss"
  input: "conv2d_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_20"
  op: "L2Loss"
  input: "batch_normalization_6/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_21"
  op: "L2Loss"
  input: "batch_normalization_6/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_22"
  op: "L2Loss"
  input: "conv2d_8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_23"
  op: "L2Loss"
  input: "batch_normalization_7/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_24"
  op: "L2Loss"
  input: "batch_normalization_7/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_25"
  op: "L2Loss"
  input: "conv2d_9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_26"
  op: "L2Loss"
  input: "batch_normalization_8/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_27"
  op: "L2Loss"
  input: "batch_normalization_8/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_28"
  op: "L2Loss"
  input: "conv2d_10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_29"
  op: "L2Loss"
  input: "batch_normalization_9/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_30"
  op: "L2Loss"
  input: "batch_normalization_9/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_31"
  op: "L2Loss"
  input: "conv2d_11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_32"
  op: "L2Loss"
  input: "batch_normalization_10/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_33"
  op: "L2Loss"
  input: "batch_normalization_10/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_34"
  op: "L2Loss"
  input: "conv2d_12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_35"
  op: "L2Loss"
  input: "conv2d_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_36"
  op: "L2Loss"
  input: "batch_normalization_11/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_37"
  op: "L2Loss"
  input: "batch_normalization_11/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_38"
  op: "L2Loss"
  input: "conv2d_14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_39"
  op: "L2Loss"
  input: "batch_normalization_12/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_40"
  op: "L2Loss"
  input: "batch_normalization_12/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_41"
  op: "L2Loss"
  input: "conv2d_15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_42"
  op: "L2Loss"
  input: "batch_normalization_13/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_43"
  op: "L2Loss"
  input: "batch_normalization_13/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_44"
  op: "L2Loss"
  input: "conv2d_16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_45"
  op: "L2Loss"
  input: "batch_normalization_14/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_46"
  op: "L2Loss"
  input: "batch_normalization_14/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_47"
  op: "L2Loss"
  input: "conv2d_17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_48"
  op: "L2Loss"
  input: "batch_normalization_15/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_49"
  op: "L2Loss"
  input: "batch_normalization_15/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_50"
  op: "L2Loss"
  input: "conv2d_18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_51"
  op: "L2Loss"
  input: "batch_normalization_16/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_52"
  op: "L2Loss"
  input: "batch_normalization_16/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_53"
  op: "L2Loss"
  input: "conv2d_19/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_54"
  op: "L2Loss"
  input: "batch_normalization_17/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_55"
  op: "L2Loss"
  input: "batch_normalization_17/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_56"
  op: "L2Loss"
  input: "conv2d_20/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_57"
  op: "L2Loss"
  input: "batch_normalization_18/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_58"
  op: "L2Loss"
  input: "batch_normalization_18/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_59"
  op: "L2Loss"
  input: "conv2d_21/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_60"
  op: "L2Loss"
  input: "batch_normalization_19/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_61"
  op: "L2Loss"
  input: "batch_normalization_19/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_62"
  op: "L2Loss"
  input: "conv2d_22/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_63"
  op: "L2Loss"
  input: "batch_normalization_20/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_64"
  op: "L2Loss"
  input: "batch_normalization_20/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_65"
  op: "L2Loss"
  input: "conv2d_23/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_66"
  op: "L2Loss"
  input: "conv2d_24/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_67"
  op: "L2Loss"
  input: "batch_normalization_21/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_68"
  op: "L2Loss"
  input: "batch_normalization_21/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_69"
  op: "L2Loss"
  input: "conv2d_25/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_70"
  op: "L2Loss"
  input: "batch_normalization_22/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_71"
  op: "L2Loss"
  input: "batch_normalization_22/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_72"
  op: "L2Loss"
  input: "conv2d_26/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_73"
  op: "L2Loss"
  input: "batch_normalization_23/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_74"
  op: "L2Loss"
  input: "batch_normalization_23/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_75"
  op: "L2Loss"
  input: "conv2d_27/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_76"
  op: "L2Loss"
  input: "batch_normalization_24/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_77"
  op: "L2Loss"
  input: "batch_normalization_24/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_78"
  op: "L2Loss"
  input: "conv2d_28/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_79"
  op: "L2Loss"
  input: "batch_normalization_25/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_80"
  op: "L2Loss"
  input: "batch_normalization_25/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_81"
  op: "L2Loss"
  input: "conv2d_29/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_82"
  op: "L2Loss"
  input: "batch_normalization_26/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_83"
  op: "L2Loss"
  input: "batch_normalization_26/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_84"
  op: "L2Loss"
  input: "conv2d_30/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_85"
  op: "L2Loss"
  input: "batch_normalization_27/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_86"
  op: "L2Loss"
  input: "batch_normalization_27/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_87"
  op: "L2Loss"
  input: "conv2d_31/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_88"
  op: "L2Loss"
  input: "batch_normalization_28/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_89"
  op: "L2Loss"
  input: "batch_normalization_28/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_90"
  op: "L2Loss"
  input: "conv2d_32/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_91"
  op: "L2Loss"
  input: "batch_normalization_29/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_92"
  op: "L2Loss"
  input: "batch_normalization_29/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_93"
  op: "L2Loss"
  input: "conv2d_33/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_94"
  op: "L2Loss"
  input: "batch_normalization_30/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_95"
  op: "L2Loss"
  input: "batch_normalization_30/beta/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_96"
  op: "L2Loss"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "L2Loss_97"
  op: "L2Loss"
  input: "dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "AddN"
  op: "AddN"
  input: "L2Loss"
  input: "L2Loss_1"
  input: "L2Loss_2"
  input: "L2Loss_3"
  input: "L2Loss_4"
  input: "L2Loss_5"
  input: "L2Loss_6"
  input: "L2Loss_7"
  input: "L2Loss_8"
  input: "L2Loss_9"
  input: "L2Loss_10"
  input: "L2Loss_11"
  input: "L2Loss_12"
  input: "L2Loss_13"
  input: "L2Loss_14"
  input: "L2Loss_15"
  input: "L2Loss_16"
  input: "L2Loss_17"
  input: "L2Loss_18"
  input: "L2Loss_19"
  input: "L2Loss_20"
  input: "L2Loss_21"
  input: "L2Loss_22"
  input: "L2Loss_23"
  input: "L2Loss_24"
  input: "L2Loss_25"
  input: "L2Loss_26"
  input: "L2Loss_27"
  input: "L2Loss_28"
  input: "L2Loss_29"
  input: "L2Loss_30"
  input: "L2Loss_31"
  input: "L2Loss_32"
  input: "L2Loss_33"
  input: "L2Loss_34"
  input: "L2Loss_35"
  input: "L2Loss_36"
  input: "L2Loss_37"
  input: "L2Loss_38"
  input: "L2Loss_39"
  input: "L2Loss_40"
  input: "L2Loss_41"
  input: "L2Loss_42"
  input: "L2Loss_43"
  input: "L2Loss_44"
  input: "L2Loss_45"
  input: "L2Loss_46"
  input: "L2Loss_47"
  input: "L2Loss_48"
  input: "L2Loss_49"
  input: "L2Loss_50"
  input: "L2Loss_51"
  input: "L2Loss_52"
  input: "L2Loss_53"
  input: "L2Loss_54"
  input: "L2Loss_55"
  input: "L2Loss_56"
  input: "L2Loss_57"
  input: "L2Loss_58"
  input: "L2Loss_59"
  input: "L2Loss_60"
  input: "L2Loss_61"
  input: "L2Loss_62"
  input: "L2Loss_63"
  input: "L2Loss_64"
  input: "L2Loss_65"
  input: "L2Loss_66"
  input: "L2Loss_67"
  input: "L2Loss_68"
  input: "L2Loss_69"
  input: "L2Loss_70"
  input: "L2Loss_71"
  input: "L2Loss_72"
  input: "L2Loss_73"
  input: "L2Loss_74"
  input: "L2Loss_75"
  input: "L2Loss_76"
  input: "L2Loss_77"
  input: "L2Loss_78"
  input: "L2Loss_79"
  input: "L2Loss_80"
  input: "L2Loss_81"
  input: "L2Loss_82"
  input: "L2Loss_83"
  input: "L2Loss_84"
  input: "L2Loss_85"
  input: "L2Loss_86"
  input: "L2Loss_87"
  input: "L2Loss_88"
  input: "L2Loss_89"
  input: "L2Loss_90"
  input: "L2Loss_91"
  input: "L2Loss_92"
  input: "L2Loss_93"
  input: "L2Loss_94"
  input: "L2Loss_95"
  input: "L2Loss_96"
  input: "L2Loss_97"
  attr {
    key: "N"
    value {
      i: 98
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add_15"
  op: "Add"
  input: "softmax_cross_entropy_loss/value"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "global_step/read"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5000000
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7500000
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10000000
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0003906250058207661
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9062499126885086e-05
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.906250185536919e-06
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.906249901319825e-07
      }
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual"
  op: "LessEqual"
  input: "Cast"
  input: "PiecewiseConstant/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Greater"
  op: "Greater"
  input: "Cast"
  input: "PiecewiseConstant/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Greater_1"
  op: "Greater"
  input: "Cast"
  input: "PiecewiseConstant/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual_1"
  op: "LessEqual"
  input: "Cast"
  input: "PiecewiseConstant/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/and"
  op: "LogicalAnd"
  input: "PiecewiseConstant/Greater_1"
  input: "PiecewiseConstant/LessEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/Greater_2"
  op: "Greater"
  input: "Cast"
  input: "PiecewiseConstant/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/LessEqual_2"
  op: "LessEqual"
  input: "Cast"
  input: "PiecewiseConstant/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/and_1"
  op: "LogicalAnd"
  input: "PiecewiseConstant/Greater_2"
  input: "PiecewiseConstant/LessEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/preds_c"
  op: "Pack"
  input: "PiecewiseConstant/LessEqual"
  input: "PiecewiseConstant/Greater"
  input: "PiecewiseConstant/and"
  input: "PiecewiseConstant/and_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "PiecewiseConstant/case/Cast"
  op: "Cast"
  input: "PiecewiseConstant/case/preds_c"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/num_true_conds"
  op: "Sum"
  input: "PiecewiseConstant/case/Cast"
  input: "PiecewiseConstant/case/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "PiecewiseConstant/case/n_true_conds"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/LessEqual"
  op: "LessEqual"
  input: "PiecewiseConstant/case/num_true_conds"
  input: "PiecewiseConstant/case/n_true_conds"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0, PiecewiseConstant/and:0, PiecewiseConstant/and_1:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/LessEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/switch_t"
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/switch_t"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Input error: exclusive=True: more than 1 conditions (PiecewiseConstant/LessEqual:0, PiecewiseConstant/Greater:0, PiecewiseConstant/and:0, PiecewiseConstant/and_1:0) evaluated as True:"
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/data_0"
  input: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_BOOL
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 4
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/LessEqual"
  input: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/LessEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/case/preds_c"
  input: "PiecewiseConstant/case/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/preds_c"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "PiecewiseConstant/case/Assert/AssertGuard/switch_f"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/case/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency_1"
  input: "PiecewiseConstant/case/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/LessEqual"
  input: "PiecewiseConstant/LessEqual"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/LessEqual"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/Const_3"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  op: "Switch"
  input: "PiecewiseConstant/Greater"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Greater"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/Switch/Switch"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/Const_6"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch"
  op: "Switch"
  input: "PiecewiseConstant/and"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch/Switch_1"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/Const_4"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Switch_3"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_2"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_2"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_2"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch"
  op: "Switch"
  input: "PiecewiseConstant/and_1"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/and_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/switch_t"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/switch_f"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/pred_id"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch/Switch_2"
  input: "^PiecewiseConstant/case/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_1"
  op: "Switch"
  input: "PiecewiseConstant/Const_5"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_2"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_1"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_3"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_2"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_4"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_3"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_5"
  op: "Switch"
  input: "PiecewiseConstant/Const_3"
  input: "PiecewiseConstant/case/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_6"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_5"
  input: "PiecewiseConstant/case/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_7"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_6"
  input: "PiecewiseConstant/case/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_8"
  op: "Switch"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_7"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@PiecewiseConstant/Const_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_8"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Switch_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/cond/Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/Switch_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/cond/Merge"
  input: "PiecewiseConstant/case/cond/cond/Switch_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "PiecewiseConstant/case/cond/Merge"
  op: "Merge"
  input: "PiecewiseConstant/case/cond/cond/Merge"
  input: "PiecewiseConstant/case/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Identity"
  input: "PiecewiseConstant/case/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate_1"
      }
    }
  }
}
node {
  name: "learning_rate_1"
  op: "ScalarSummary"
  input: "learning_rate_1/tags"
  input: "PiecewiseConstant/case/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/add_15_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/add_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_15_grad/tuple/control_dependency_1"
  input: "AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_15_grad/tuple/control_dependency_1"
  input: "mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/Mul_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Mul_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/mul_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_7"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_8"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_9"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_10"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_11"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_12"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_13"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_14"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_15"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_16"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_17"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_18"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_19"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_20"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_21"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_22"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_23"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_24"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_25"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_26"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_27"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_28"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_29"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_30"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_31"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_32"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_33"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_34"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_35"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_36"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_37"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_38"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_39"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_40"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_41"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_42"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_43"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_44"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_45"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_46"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_47"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_48"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_49"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_50"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_51"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_52"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_53"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_54"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_55"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_56"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_57"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_58"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_59"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_60"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_61"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_62"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_63"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_64"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_65"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_66"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_67"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_68"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_69"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_70"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_71"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_72"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_73"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_74"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_75"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_76"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_77"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_78"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_79"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_80"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_81"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_82"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_83"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_84"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_85"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_86"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_87"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_88"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_89"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_90"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_91"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_92"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_93"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_94"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_95"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_96"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_97"
  op: "Identity"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/zeros_like"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "gradients/softmax_cross_entropy_loss/Select_grad/zeros_like"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/Select_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Select_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Select_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_grad/mul"
  op: "Mul"
  input: "conv2d/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_1_grad/mul"
  op: "Mul"
  input: "batch_normalization/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_2_grad/mul"
  op: "Mul"
  input: "batch_normalization/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_3_grad/mul"
  op: "Mul"
  input: "conv2d_1/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_4_grad/mul"
  op: "Mul"
  input: "conv2d_2/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_5_grad/mul"
  op: "Mul"
  input: "batch_normalization_1/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_6_grad/mul"
  op: "Mul"
  input: "batch_normalization_1/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_7_grad/mul"
  op: "Mul"
  input: "conv2d_3/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_8_grad/mul"
  op: "Mul"
  input: "batch_normalization_2/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_9_grad/mul"
  op: "Mul"
  input: "batch_normalization_2/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_10_grad/mul"
  op: "Mul"
  input: "conv2d_4/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_11_grad/mul"
  op: "Mul"
  input: "batch_normalization_3/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_12_grad/mul"
  op: "Mul"
  input: "batch_normalization_3/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_13_grad/mul"
  op: "Mul"
  input: "conv2d_5/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_14_grad/mul"
  op: "Mul"
  input: "batch_normalization_4/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_15_grad/mul"
  op: "Mul"
  input: "batch_normalization_4/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_16_grad/mul"
  op: "Mul"
  input: "conv2d_6/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_17_grad/mul"
  op: "Mul"
  input: "batch_normalization_5/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_18_grad/mul"
  op: "Mul"
  input: "batch_normalization_5/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_19_grad/mul"
  op: "Mul"
  input: "conv2d_7/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_20_grad/mul"
  op: "Mul"
  input: "batch_normalization_6/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_21_grad/mul"
  op: "Mul"
  input: "batch_normalization_6/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_22_grad/mul"
  op: "Mul"
  input: "conv2d_8/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_23_grad/mul"
  op: "Mul"
  input: "batch_normalization_7/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_24_grad/mul"
  op: "Mul"
  input: "batch_normalization_7/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_25_grad/mul"
  op: "Mul"
  input: "conv2d_9/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_26_grad/mul"
  op: "Mul"
  input: "batch_normalization_8/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_27_grad/mul"
  op: "Mul"
  input: "batch_normalization_8/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_28_grad/mul"
  op: "Mul"
  input: "conv2d_10/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_29_grad/mul"
  op: "Mul"
  input: "batch_normalization_9/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_30_grad/mul"
  op: "Mul"
  input: "batch_normalization_9/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_31_grad/mul"
  op: "Mul"
  input: "conv2d_11/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_32_grad/mul"
  op: "Mul"
  input: "batch_normalization_10/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_33_grad/mul"
  op: "Mul"
  input: "batch_normalization_10/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_34_grad/mul"
  op: "Mul"
  input: "conv2d_12/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_35_grad/mul"
  op: "Mul"
  input: "conv2d_13/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_36_grad/mul"
  op: "Mul"
  input: "batch_normalization_11/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_37_grad/mul"
  op: "Mul"
  input: "batch_normalization_11/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_38_grad/mul"
  op: "Mul"
  input: "conv2d_14/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_39_grad/mul"
  op: "Mul"
  input: "batch_normalization_12/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_40_grad/mul"
  op: "Mul"
  input: "batch_normalization_12/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_41_grad/mul"
  op: "Mul"
  input: "conv2d_15/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_42_grad/mul"
  op: "Mul"
  input: "batch_normalization_13/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_43_grad/mul"
  op: "Mul"
  input: "batch_normalization_13/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_44_grad/mul"
  op: "Mul"
  input: "conv2d_16/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_45_grad/mul"
  op: "Mul"
  input: "batch_normalization_14/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_46_grad/mul"
  op: "Mul"
  input: "batch_normalization_14/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_47_grad/mul"
  op: "Mul"
  input: "conv2d_17/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_48_grad/mul"
  op: "Mul"
  input: "batch_normalization_15/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_49_grad/mul"
  op: "Mul"
  input: "batch_normalization_15/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_50_grad/mul"
  op: "Mul"
  input: "conv2d_18/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_51_grad/mul"
  op: "Mul"
  input: "batch_normalization_16/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_52_grad/mul"
  op: "Mul"
  input: "batch_normalization_16/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_53_grad/mul"
  op: "Mul"
  input: "conv2d_19/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_54_grad/mul"
  op: "Mul"
  input: "batch_normalization_17/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_55_grad/mul"
  op: "Mul"
  input: "batch_normalization_17/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_56_grad/mul"
  op: "Mul"
  input: "conv2d_20/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_57_grad/mul"
  op: "Mul"
  input: "batch_normalization_18/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_58_grad/mul"
  op: "Mul"
  input: "batch_normalization_18/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_59_grad/mul"
  op: "Mul"
  input: "conv2d_21/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_60_grad/mul"
  op: "Mul"
  input: "batch_normalization_19/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_61_grad/mul"
  op: "Mul"
  input: "batch_normalization_19/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_62_grad/mul"
  op: "Mul"
  input: "conv2d_22/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_63_grad/mul"
  op: "Mul"
  input: "batch_normalization_20/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_64_grad/mul"
  op: "Mul"
  input: "batch_normalization_20/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_65_grad/mul"
  op: "Mul"
  input: "conv2d_23/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_66_grad/mul"
  op: "Mul"
  input: "conv2d_24/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_67_grad/mul"
  op: "Mul"
  input: "batch_normalization_21/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_68_grad/mul"
  op: "Mul"
  input: "batch_normalization_21/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_69_grad/mul"
  op: "Mul"
  input: "conv2d_25/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_70_grad/mul"
  op: "Mul"
  input: "batch_normalization_22/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_71_grad/mul"
  op: "Mul"
  input: "batch_normalization_22/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_72_grad/mul"
  op: "Mul"
  input: "conv2d_26/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_73_grad/mul"
  op: "Mul"
  input: "batch_normalization_23/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_74_grad/mul"
  op: "Mul"
  input: "batch_normalization_23/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_75_grad/mul"
  op: "Mul"
  input: "conv2d_27/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_76_grad/mul"
  op: "Mul"
  input: "batch_normalization_24/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_77_grad/mul"
  op: "Mul"
  input: "batch_normalization_24/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_78_grad/mul"
  op: "Mul"
  input: "conv2d_28/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_79_grad/mul"
  op: "Mul"
  input: "batch_normalization_25/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_80_grad/mul"
  op: "Mul"
  input: "batch_normalization_25/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_81_grad/mul"
  op: "Mul"
  input: "conv2d_29/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_82_grad/mul"
  op: "Mul"
  input: "batch_normalization_26/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_83_grad/mul"
  op: "Mul"
  input: "batch_normalization_26/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_84_grad/mul"
  op: "Mul"
  input: "conv2d_30/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_85_grad/mul"
  op: "Mul"
  input: "batch_normalization_27/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_86_grad/mul"
  op: "Mul"
  input: "batch_normalization_27/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_87_grad/mul"
  op: "Mul"
  input: "conv2d_31/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_88_grad/mul"
  op: "Mul"
  input: "batch_normalization_28/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_89_grad/mul"
  op: "Mul"
  input: "batch_normalization_28/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_90_grad/mul"
  op: "Mul"
  input: "conv2d_32/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_91_grad/mul"
  op: "Mul"
  input: "batch_normalization_29/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_92_grad/mul"
  op: "Mul"
  input: "batch_normalization_29/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_93_grad/mul"
  op: "Mul"
  input: "conv2d_33/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_94_grad/mul"
  op: "Mul"
  input: "batch_normalization_30/gamma/read"
  input: "gradients/AddN_grad/tuple/control_dependency_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_95_grad/mul"
  op: "Mul"
  input: "batch_normalization_30/beta/read"
  input: "gradients/AddN_grad/tuple/control_dependency_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_96_grad/mul"
  op: "Mul"
  input: "dense/kernel/read"
  input: "gradients/AddN_grad/tuple/control_dependency_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/L2Loss_97_grad/mul"
  op: "Mul"
  input: "dense/bias/read"
  input: "gradients/AddN_grad/tuple/control_dependency_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/Mul"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/num_present_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/num_present_grad/Tile"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "gradients/softmax_cross_entropy_loss/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul_1"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "gradients/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Shape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Shape"
  input: "final_dense"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  input: "dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/MatMul_grad/MatMul_1"
  input: "^gradients/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/L2Loss_97_grad/mul"
  input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_97_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "final_avg_pool"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/L2Loss_96_grad/mul"
  input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_96_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/average_pooling2d/AvgPool_grad/Shape"
  op: "Shape"
  input: "Relu_30"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "gradients/average_pooling2d/AvgPool_grad/Shape"
  input: "gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 8
        i: 8
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/Relu_30_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/average_pooling2d/AvgPool_grad/AvgPoolGrad"
  input: "Relu_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "batch_normalization_30/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "batch_normalization_30/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "batch_normalization_30/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "batch_normalization_30/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_30_grad/ReluGrad"
  input: "block_layer3"
  input: "batch_normalization_30/gamma/read"
  input: "batch_normalization_30/FusedBatchNorm:3"
  input: "batch_normalization_30/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_30/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/L2Loss_94_grad/mul"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_94_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/L2Loss_95_grad/mul"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_95_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Shape"
  op: "Shape"
  input: "conv2d_33/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/Shape_1"
  op: "Shape"
  input: "add_13"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_14_grad/Shape"
  input: "gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum"
  op: "Sum"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_14_grad/Sum"
  input: "gradients/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/Sum_1"
  op: "Sum"
  input: "gradients/batch_normalization_30/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_14_grad/Sum_1"
  input: "gradients/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_14_grad/Reshape"
  input: "^gradients/add_14_grad/Reshape_1"
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_14_grad/Reshape"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_14_grad/Reshape_1"
  input: "^gradients/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_29"
  input: "conv2d_33/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_33/Conv2D_grad/ShapeN"
  input: "conv2d_33/kernel/read"
  input: "gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_29"
  input: "gradients/conv2d_33/Conv2D_grad/Const"
  input: "gradients/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_33/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_33/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_33/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_33/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_33/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_33/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_33/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_33/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_33/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_29_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_33/Conv2D_grad/tuple/control_dependency"
  input: "Relu_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/L2Loss_93_grad/mul"
  input: "gradients/conv2d_33/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_93_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "batch_normalization_29/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "batch_normalization_29/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "batch_normalization_29/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "batch_normalization_29/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_29_grad/ReluGrad"
  input: "conv2d_32/Conv2D"
  input: "batch_normalization_29/gamma/read"
  input: "batch_normalization_29/FusedBatchNorm:3"
  input: "batch_normalization_29/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_29/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_28"
  input: "conv2d_32/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_32/Conv2D_grad/ShapeN"
  input: "conv2d_32/kernel/read"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_28"
  input: "gradients/conv2d_32/Conv2D_grad/Const"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_32/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_32/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_32/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_32/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_32/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_32/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_32/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_32/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_32/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/L2Loss_91_grad/mul"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_91_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/L2Loss_92_grad/mul"
  input: "gradients/batch_normalization_29/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_92_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_28_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_32/Conv2D_grad/tuple/control_dependency"
  input: "Relu_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/L2Loss_90_grad/mul"
  input: "gradients/conv2d_32/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_90_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "batch_normalization_28/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "batch_normalization_28/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "batch_normalization_28/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "batch_normalization_28/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_28_grad/ReluGrad"
  input: "add_13"
  input: "batch_normalization_28/gamma/read"
  input: "batch_normalization_28/FusedBatchNorm:3"
  input: "batch_normalization_28/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_28/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/add_14_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_14_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/Shape"
  op: "Shape"
  input: "conv2d_31/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/Shape_1"
  op: "Shape"
  input: "add_12"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_13_grad/Shape"
  input: "gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_13_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_13_grad/Sum"
  input: "gradients/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_13_grad/Sum_1"
  input: "gradients/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_13_grad/Reshape"
  input: "^gradients/add_13_grad/Reshape_1"
}
node {
  name: "gradients/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_13_grad/Reshape"
  input: "^gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_13_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_13_grad/Reshape_1"
  input: "^gradients/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/L2Loss_88_grad/mul"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_88_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/L2Loss_89_grad/mul"
  input: "gradients/batch_normalization_28/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_89_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_27"
  input: "conv2d_31/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_31/Conv2D_grad/ShapeN"
  input: "conv2d_31/kernel/read"
  input: "gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_27"
  input: "gradients/conv2d_31/Conv2D_grad/Const"
  input: "gradients/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_31/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_31/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_31/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_31/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_31/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_31/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_31/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_31/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_31/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_27_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_31/Conv2D_grad/tuple/control_dependency"
  input: "Relu_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/L2Loss_87_grad/mul"
  input: "gradients/conv2d_31/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_87_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "batch_normalization_27/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "batch_normalization_27/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "batch_normalization_27/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "batch_normalization_27/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_27_grad/ReluGrad"
  input: "conv2d_30/Conv2D"
  input: "batch_normalization_27/gamma/read"
  input: "batch_normalization_27/FusedBatchNorm:3"
  input: "batch_normalization_27/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_27/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_26"
  input: "conv2d_30/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_30/Conv2D_grad/ShapeN"
  input: "conv2d_30/kernel/read"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_26"
  input: "gradients/conv2d_30/Conv2D_grad/Const"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_30/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_30/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_30/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_30/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_30/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_30/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_30/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_30/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_30/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/L2Loss_85_grad/mul"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_85_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/L2Loss_86_grad/mul"
  input: "gradients/batch_normalization_27/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_86_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_26_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_30/Conv2D_grad/tuple/control_dependency"
  input: "Relu_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/L2Loss_84_grad/mul"
  input: "gradients/conv2d_30/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_84_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "batch_normalization_26/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "batch_normalization_26/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "batch_normalization_26/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "batch_normalization_26/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_26_grad/ReluGrad"
  input: "add_12"
  input: "batch_normalization_26/gamma/read"
  input: "batch_normalization_26/FusedBatchNorm:3"
  input: "batch_normalization_26/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_26/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/add_13_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_13_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Shape"
  op: "Shape"
  input: "conv2d_29/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/Shape_1"
  op: "Shape"
  input: "add_11"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_12_grad/Shape"
  input: "gradients/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_12_grad/Sum"
  input: "gradients/add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_15"
  input: "gradients/add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_12_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_12_grad/Sum_1"
  input: "gradients/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_12_grad/Reshape"
  input: "^gradients/add_12_grad/Reshape_1"
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_12_grad/Reshape"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_12_grad/Reshape_1"
  input: "^gradients/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/L2Loss_82_grad/mul"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_82_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/L2Loss_83_grad/mul"
  input: "gradients/batch_normalization_26/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_83_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_25"
  input: "conv2d_29/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_29/Conv2D_grad/ShapeN"
  input: "conv2d_29/kernel/read"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_25"
  input: "gradients/conv2d_29/Conv2D_grad/Const"
  input: "gradients/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_29/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_29/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_29/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_29/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_29/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_29/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_29/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_29/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_29/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_25_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_29/Conv2D_grad/tuple/control_dependency"
  input: "Relu_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/L2Loss_81_grad/mul"
  input: "gradients/conv2d_29/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_81_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "batch_normalization_25/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "batch_normalization_25/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "batch_normalization_25/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "batch_normalization_25/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_25_grad/ReluGrad"
  input: "conv2d_28/Conv2D"
  input: "batch_normalization_25/gamma/read"
  input: "batch_normalization_25/FusedBatchNorm:3"
  input: "batch_normalization_25/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_25/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_24"
  input: "conv2d_28/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_28/Conv2D_grad/ShapeN"
  input: "conv2d_28/kernel/read"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_24"
  input: "gradients/conv2d_28/Conv2D_grad/Const"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_28/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_28/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_28/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_28/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_28/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_28/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_28/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_28/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_28/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/L2Loss_79_grad/mul"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_79_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_20"
  op: "AddN"
  input: "gradients/L2Loss_80_grad/mul"
  input: "gradients/batch_normalization_25/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_80_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_24_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_28/Conv2D_grad/tuple/control_dependency"
  input: "Relu_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_21"
  op: "AddN"
  input: "gradients/L2Loss_78_grad/mul"
  input: "gradients/conv2d_28/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_78_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "batch_normalization_24/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "batch_normalization_24/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "batch_normalization_24/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "batch_normalization_24/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_24_grad/ReluGrad"
  input: "add_11"
  input: "batch_normalization_24/gamma/read"
  input: "batch_normalization_24/FusedBatchNorm:3"
  input: "batch_normalization_24/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_24/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_22"
  op: "AddN"
  input: "gradients/add_12_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_12_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Shape"
  op: "Shape"
  input: "conv2d_27/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/Shape_1"
  op: "Shape"
  input: "add_10"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_11_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_11_grad/Shape"
  input: "gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_22"
  input: "gradients/add_11_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_11_grad/Sum"
  input: "gradients/add_11_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_22"
  input: "gradients/add_11_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_11_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_11_grad/Sum_1"
  input: "gradients/add_11_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_11_grad/Reshape"
  input: "^gradients/add_11_grad/Reshape_1"
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_11_grad/Reshape"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_11_grad/Reshape_1"
  input: "^gradients/add_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_23"
  op: "AddN"
  input: "gradients/L2Loss_76_grad/mul"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_76_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_24"
  op: "AddN"
  input: "gradients/L2Loss_77_grad/mul"
  input: "gradients/batch_normalization_24/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_77_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_23"
  input: "conv2d_27/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_27/Conv2D_grad/ShapeN"
  input: "conv2d_27/kernel/read"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_23"
  input: "gradients/conv2d_27/Conv2D_grad/Const"
  input: "gradients/add_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_27/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_27/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_27/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_27/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_27/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_27/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_27/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_27/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_27/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_23_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_27/Conv2D_grad/tuple/control_dependency"
  input: "Relu_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_25"
  op: "AddN"
  input: "gradients/L2Loss_75_grad/mul"
  input: "gradients/conv2d_27/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_75_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "batch_normalization_23/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "batch_normalization_23/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "batch_normalization_23/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "batch_normalization_23/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_23_grad/ReluGrad"
  input: "conv2d_26/Conv2D"
  input: "batch_normalization_23/gamma/read"
  input: "batch_normalization_23/FusedBatchNorm:3"
  input: "batch_normalization_23/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_23/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_22"
  input: "conv2d_26/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_26/Conv2D_grad/ShapeN"
  input: "conv2d_26/kernel/read"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_22"
  input: "gradients/conv2d_26/Conv2D_grad/Const"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_26/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_26/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_26/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_26/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_26/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_26/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_26/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_26/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_26/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_26"
  op: "AddN"
  input: "gradients/L2Loss_73_grad/mul"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_73_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_27"
  op: "AddN"
  input: "gradients/L2Loss_74_grad/mul"
  input: "gradients/batch_normalization_23/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_74_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_22_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_26/Conv2D_grad/tuple/control_dependency"
  input: "Relu_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_28"
  op: "AddN"
  input: "gradients/L2Loss_72_grad/mul"
  input: "gradients/conv2d_26/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_72_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "batch_normalization_22/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "batch_normalization_22/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "batch_normalization_22/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "batch_normalization_22/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_22_grad/ReluGrad"
  input: "add_10"
  input: "batch_normalization_22/gamma/read"
  input: "batch_normalization_22/FusedBatchNorm:3"
  input: "batch_normalization_22/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_22/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_29"
  op: "AddN"
  input: "gradients/add_11_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_11_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Shape"
  op: "Shape"
  input: "conv2d_25/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/Shape_1"
  op: "Shape"
  input: "conv2d_23/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_10_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_10_grad/Shape"
  input: "gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_29"
  input: "gradients/add_10_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_10_grad/Sum"
  input: "gradients/add_10_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_29"
  input: "gradients/add_10_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_10_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_10_grad/Sum_1"
  input: "gradients/add_10_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_10_grad/Reshape"
  input: "^gradients/add_10_grad/Reshape_1"
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_10_grad/Reshape"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_10_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_10_grad/Reshape_1"
  input: "^gradients/add_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_10_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_30"
  op: "AddN"
  input: "gradients/L2Loss_70_grad/mul"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_70_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_31"
  op: "AddN"
  input: "gradients/L2Loss_71_grad/mul"
  input: "gradients/batch_normalization_22/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_71_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_21"
  input: "conv2d_25/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_25/Conv2D_grad/ShapeN"
  input: "conv2d_25/kernel/read"
  input: "gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_21"
  input: "gradients/conv2d_25/Conv2D_grad/Const"
  input: "gradients/add_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_25/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_25/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_25/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_25/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_25/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_25/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_25/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_25/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_25/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Pad_2"
  input: "conv2d_23/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_23/Conv2D_grad/ShapeN"
  input: "conv2d_23/kernel/read"
  input: "gradients/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Pad_2"
  input: "gradients/conv2d_23/Conv2D_grad/Const"
  input: "gradients/add_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_23/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_23/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_23/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_23/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_23/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_23/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_23/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_23/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_23/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_21_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_25/Conv2D_grad/tuple/control_dependency"
  input: "Relu_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_32"
  op: "AddN"
  input: "gradients/L2Loss_69_grad/mul"
  input: "gradients/conv2d_25/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_69_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Rank"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/stack/1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/stack"
  op: "Pack"
  input: "gradients/Pad_2_grad/Rank"
  input: "gradients/Pad_2_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice/begin"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice"
  op: "Slice"
  input: "Pad_2/paddings"
  input: "gradients/Pad_2_grad/Slice/begin"
  input: "gradients/Pad_2_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_2_grad/Slice"
  input: "gradients/Pad_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Shape"
  op: "Shape"
  input: "Relu_20"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv2d_23/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Pad_2_grad/Reshape"
  input: "gradients/Pad_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_33"
  op: "AddN"
  input: "gradients/L2Loss_65_grad/mul"
  input: "gradients/conv2d_23/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_65_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "batch_normalization_21/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "batch_normalization_21/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "batch_normalization_21/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "batch_normalization_21/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_21_grad/ReluGrad"
  input: "conv2d_24/Conv2D"
  input: "batch_normalization_21/gamma/read"
  input: "batch_normalization_21/FusedBatchNorm:3"
  input: "batch_normalization_21/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_21/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Pad_3"
  input: "conv2d_24/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_24/Conv2D_grad/ShapeN"
  input: "conv2d_24/kernel/read"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Pad_3"
  input: "gradients/conv2d_24/Conv2D_grad/Const"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_24/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_24/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_24/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_24/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_24/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_24/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_24/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_24/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_24/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_34"
  op: "AddN"
  input: "gradients/L2Loss_67_grad/mul"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_67_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_35"
  op: "AddN"
  input: "gradients/L2Loss_68_grad/mul"
  input: "gradients/batch_normalization_21/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_68_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Rank"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/stack/1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/stack"
  op: "Pack"
  input: "gradients/Pad_3_grad/Rank"
  input: "gradients/Pad_3_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice/begin"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice"
  op: "Slice"
  input: "Pad_3/paddings"
  input: "gradients/Pad_3_grad/Slice/begin"
  input: "gradients/Pad_3_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_3_grad/Slice"
  input: "gradients/Pad_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Shape"
  op: "Shape"
  input: "Relu_20"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_3_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv2d_24/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Pad_3_grad/Reshape"
  input: "gradients/Pad_3_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_36"
  op: "AddN"
  input: "gradients/L2Loss_66_grad/mul"
  input: "gradients/conv2d_24/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_66_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_37"
  op: "AddN"
  input: "gradients/Pad_2_grad/Slice_1"
  input: "gradients/Pad_3_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Pad_2_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_20_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_37"
  input: "Relu_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "batch_normalization_20/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "batch_normalization_20/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "batch_normalization_20/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "batch_normalization_20/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_20_grad/ReluGrad"
  input: "block_layer2"
  input: "batch_normalization_20/gamma/read"
  input: "batch_normalization_20/FusedBatchNorm:3"
  input: "batch_normalization_20/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_20/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_38"
  op: "AddN"
  input: "gradients/L2Loss_63_grad/mul"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_63_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_39"
  op: "AddN"
  input: "gradients/L2Loss_64_grad/mul"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_64_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/Shape"
  op: "Shape"
  input: "conv2d_22/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/Shape_1"
  op: "Shape"
  input: "add_8"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_9_grad/Shape"
  input: "gradients/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/Sum"
  op: "Sum"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_9_grad/Sum"
  input: "gradients/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/batch_normalization_20/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_9_grad/Sum_1"
  input: "gradients/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_9_grad/Reshape"
  input: "^gradients/add_9_grad/Reshape_1"
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_9_grad/Reshape"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_9_grad/Reshape_1"
  input: "^gradients/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_19"
  input: "conv2d_22/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_22/Conv2D_grad/ShapeN"
  input: "conv2d_22/kernel/read"
  input: "gradients/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_19"
  input: "gradients/conv2d_22/Conv2D_grad/Const"
  input: "gradients/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_22/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_22/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_22/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_22/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_22/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_22/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_22/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_22/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_22/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_19_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_22/Conv2D_grad/tuple/control_dependency"
  input: "Relu_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_40"
  op: "AddN"
  input: "gradients/L2Loss_62_grad/mul"
  input: "gradients/conv2d_22/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_62_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "batch_normalization_19/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "batch_normalization_19/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "batch_normalization_19/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "batch_normalization_19/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_19_grad/ReluGrad"
  input: "conv2d_21/Conv2D"
  input: "batch_normalization_19/gamma/read"
  input: "batch_normalization_19/FusedBatchNorm:3"
  input: "batch_normalization_19/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_19/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_18"
  input: "conv2d_21/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_21/Conv2D_grad/ShapeN"
  input: "conv2d_21/kernel/read"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_18"
  input: "gradients/conv2d_21/Conv2D_grad/Const"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_21/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_21/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_21/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_21/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_21/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_21/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_21/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_21/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_21/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_41"
  op: "AddN"
  input: "gradients/L2Loss_60_grad/mul"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_60_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_42"
  op: "AddN"
  input: "gradients/L2Loss_61_grad/mul"
  input: "gradients/batch_normalization_19/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_61_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_18_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_21/Conv2D_grad/tuple/control_dependency"
  input: "Relu_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_43"
  op: "AddN"
  input: "gradients/L2Loss_59_grad/mul"
  input: "gradients/conv2d_21/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_59_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "batch_normalization_18/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "batch_normalization_18/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "batch_normalization_18/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "batch_normalization_18/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_18_grad/ReluGrad"
  input: "add_8"
  input: "batch_normalization_18/gamma/read"
  input: "batch_normalization_18/FusedBatchNorm:3"
  input: "batch_normalization_18/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_18/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_44"
  op: "AddN"
  input: "gradients/add_9_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Shape"
  op: "Shape"
  input: "conv2d_20/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/Shape_1"
  op: "Shape"
  input: "add_7"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_8_grad/Shape"
  input: "gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_44"
  input: "gradients/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_8_grad/Sum"
  input: "gradients/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_44"
  input: "gradients/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_8_grad/Sum_1"
  input: "gradients/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_8_grad/Reshape"
  input: "^gradients/add_8_grad/Reshape_1"
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_8_grad/Reshape"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_8_grad/Reshape_1"
  input: "^gradients/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_45"
  op: "AddN"
  input: "gradients/L2Loss_57_grad/mul"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_57_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_46"
  op: "AddN"
  input: "gradients/L2Loss_58_grad/mul"
  input: "gradients/batch_normalization_18/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_58_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_17"
  input: "conv2d_20/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_20/Conv2D_grad/ShapeN"
  input: "conv2d_20/kernel/read"
  input: "gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_17"
  input: "gradients/conv2d_20/Conv2D_grad/Const"
  input: "gradients/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_20/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_20/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_20/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_20/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_20/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_17_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_20/Conv2D_grad/tuple/control_dependency"
  input: "Relu_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_47"
  op: "AddN"
  input: "gradients/L2Loss_56_grad/mul"
  input: "gradients/conv2d_20/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_56_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "batch_normalization_17/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "batch_normalization_17/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "batch_normalization_17/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "batch_normalization_17/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_17_grad/ReluGrad"
  input: "conv2d_19/Conv2D"
  input: "batch_normalization_17/gamma/read"
  input: "batch_normalization_17/FusedBatchNorm:3"
  input: "batch_normalization_17/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_17/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_16"
  input: "conv2d_19/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_19/Conv2D_grad/ShapeN"
  input: "conv2d_19/kernel/read"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_16"
  input: "gradients/conv2d_19/Conv2D_grad/Const"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_19/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_19/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_19/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_19/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_19/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_48"
  op: "AddN"
  input: "gradients/L2Loss_54_grad/mul"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_54_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_49"
  op: "AddN"
  input: "gradients/L2Loss_55_grad/mul"
  input: "gradients/batch_normalization_17/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_55_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_16_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_19/Conv2D_grad/tuple/control_dependency"
  input: "Relu_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_50"
  op: "AddN"
  input: "gradients/L2Loss_53_grad/mul"
  input: "gradients/conv2d_19/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_53_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "batch_normalization_16/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "batch_normalization_16/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "batch_normalization_16/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "batch_normalization_16/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_16_grad/ReluGrad"
  input: "add_7"
  input: "batch_normalization_16/gamma/read"
  input: "batch_normalization_16/FusedBatchNorm:3"
  input: "batch_normalization_16/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_16/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_51"
  op: "AddN"
  input: "gradients/add_8_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape"
  op: "Shape"
  input: "conv2d_18/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/Shape_1"
  op: "Shape"
  input: "add_6"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_7_grad/Shape"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_51"
  input: "gradients/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum"
  input: "gradients/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_51"
  input: "gradients/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_7_grad/Sum_1"
  input: "gradients/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_7_grad/Reshape"
  input: "^gradients/add_7_grad/Reshape_1"
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_7_grad/Reshape"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_7_grad/Reshape_1"
  input: "^gradients/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_52"
  op: "AddN"
  input: "gradients/L2Loss_51_grad/mul"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_51_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_53"
  op: "AddN"
  input: "gradients/L2Loss_52_grad/mul"
  input: "gradients/batch_normalization_16/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_52_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_15"
  input: "conv2d_18/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_18/Conv2D_grad/ShapeN"
  input: "conv2d_18/kernel/read"
  input: "gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_15"
  input: "gradients/conv2d_18/Conv2D_grad/Const"
  input: "gradients/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_18/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_18/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_18/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_18/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_18/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_15_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_18/Conv2D_grad/tuple/control_dependency"
  input: "Relu_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_54"
  op: "AddN"
  input: "gradients/L2Loss_50_grad/mul"
  input: "gradients/conv2d_18/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_50_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "batch_normalization_15/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "batch_normalization_15/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "batch_normalization_15/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "batch_normalization_15/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_15_grad/ReluGrad"
  input: "conv2d_17/Conv2D"
  input: "batch_normalization_15/gamma/read"
  input: "batch_normalization_15/FusedBatchNorm:3"
  input: "batch_normalization_15/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_15/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_14"
  input: "conv2d_17/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_17/Conv2D_grad/ShapeN"
  input: "conv2d_17/kernel/read"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_14"
  input: "gradients/conv2d_17/Conv2D_grad/Const"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_17/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_17/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_55"
  op: "AddN"
  input: "gradients/L2Loss_48_grad/mul"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_48_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_56"
  op: "AddN"
  input: "gradients/L2Loss_49_grad/mul"
  input: "gradients/batch_normalization_15/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_49_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_14_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_17/Conv2D_grad/tuple/control_dependency"
  input: "Relu_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_57"
  op: "AddN"
  input: "gradients/L2Loss_47_grad/mul"
  input: "gradients/conv2d_17/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_47_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "batch_normalization_14/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "batch_normalization_14/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "batch_normalization_14/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "batch_normalization_14/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_14_grad/ReluGrad"
  input: "add_6"
  input: "batch_normalization_14/gamma/read"
  input: "batch_normalization_14/FusedBatchNorm:3"
  input: "batch_normalization_14/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_14/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_58"
  op: "AddN"
  input: "gradients/add_7_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape"
  op: "Shape"
  input: "conv2d_16/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/Shape_1"
  op: "Shape"
  input: "add_5"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_6_grad/Shape"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_58"
  input: "gradients/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum"
  input: "gradients/add_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_58"
  input: "gradients/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_6_grad/Sum_1"
  input: "gradients/add_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_6_grad/Reshape"
  input: "^gradients/add_6_grad/Reshape_1"
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_6_grad/Reshape"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_6_grad/Reshape_1"
  input: "^gradients/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_59"
  op: "AddN"
  input: "gradients/L2Loss_45_grad/mul"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_45_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_60"
  op: "AddN"
  input: "gradients/L2Loss_46_grad/mul"
  input: "gradients/batch_normalization_14/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_46_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_13"
  input: "conv2d_16/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_16/Conv2D_grad/ShapeN"
  input: "conv2d_16/kernel/read"
  input: "gradients/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_13"
  input: "gradients/conv2d_16/Conv2D_grad/Const"
  input: "gradients/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_16/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_16/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_13_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_16/Conv2D_grad/tuple/control_dependency"
  input: "Relu_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_61"
  op: "AddN"
  input: "gradients/L2Loss_44_grad/mul"
  input: "gradients/conv2d_16/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_44_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "batch_normalization_13/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "batch_normalization_13/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "batch_normalization_13/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "batch_normalization_13/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_13_grad/ReluGrad"
  input: "conv2d_15/Conv2D"
  input: "batch_normalization_13/gamma/read"
  input: "batch_normalization_13/FusedBatchNorm:3"
  input: "batch_normalization_13/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_13/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_12"
  input: "conv2d_15/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_15/Conv2D_grad/ShapeN"
  input: "conv2d_15/kernel/read"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_12"
  input: "gradients/conv2d_15/Conv2D_grad/Const"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_15/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_15/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_62"
  op: "AddN"
  input: "gradients/L2Loss_42_grad/mul"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_42_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_63"
  op: "AddN"
  input: "gradients/L2Loss_43_grad/mul"
  input: "gradients/batch_normalization_13/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_43_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_12_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_15/Conv2D_grad/tuple/control_dependency"
  input: "Relu_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_64"
  op: "AddN"
  input: "gradients/L2Loss_41_grad/mul"
  input: "gradients/conv2d_15/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_41_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "batch_normalization_12/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "batch_normalization_12/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "batch_normalization_12/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "batch_normalization_12/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_12_grad/ReluGrad"
  input: "add_5"
  input: "batch_normalization_12/gamma/read"
  input: "batch_normalization_12/FusedBatchNorm:3"
  input: "batch_normalization_12/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_12/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_65"
  op: "AddN"
  input: "gradients/add_6_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/Shape"
  op: "Shape"
  input: "conv2d_14/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/Shape_1"
  op: "Shape"
  input: "conv2d_12/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_5_grad/Shape"
  input: "gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_65"
  input: "gradients/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_5_grad/Sum"
  input: "gradients/add_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_65"
  input: "gradients/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_5_grad/Sum_1"
  input: "gradients/add_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_5_grad/Reshape"
  input: "^gradients/add_5_grad/Reshape_1"
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_5_grad/Reshape"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_5_grad/Reshape_1"
  input: "^gradients/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_66"
  op: "AddN"
  input: "gradients/L2Loss_39_grad/mul"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_39_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_67"
  op: "AddN"
  input: "gradients/L2Loss_40_grad/mul"
  input: "gradients/batch_normalization_12/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_40_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_11"
  input: "conv2d_14/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_14/Conv2D_grad/ShapeN"
  input: "conv2d_14/kernel/read"
  input: "gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_11"
  input: "gradients/conv2d_14/Conv2D_grad/Const"
  input: "gradients/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_14/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_14/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Pad"
  input: "conv2d_12/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_12/Conv2D_grad/ShapeN"
  input: "conv2d_12/kernel/read"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Pad"
  input: "gradients/conv2d_12/Conv2D_grad/Const"
  input: "gradients/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_12/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_12/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_11_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_14/Conv2D_grad/tuple/control_dependency"
  input: "Relu_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_68"
  op: "AddN"
  input: "gradients/L2Loss_38_grad/mul"
  input: "gradients/conv2d_14/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_38_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/Rank"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/stack/1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/stack"
  op: "Pack"
  input: "gradients/Pad_grad/Rank"
  input: "gradients/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_grad/Slice/begin"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/Slice"
  op: "Slice"
  input: "Pad/paddings"
  input: "gradients/Pad_grad/Slice/begin"
  input: "gradients/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_grad/Slice"
  input: "gradients/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_grad/Shape"
  op: "Shape"
  input: "Relu_10"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv2d_12/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Pad_grad/Reshape"
  input: "gradients/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_69"
  op: "AddN"
  input: "gradients/L2Loss_34_grad/mul"
  input: "gradients/conv2d_12/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_34_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "batch_normalization_11/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "batch_normalization_11/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "batch_normalization_11/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "batch_normalization_11/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_11_grad/ReluGrad"
  input: "conv2d_13/Conv2D"
  input: "batch_normalization_11/gamma/read"
  input: "batch_normalization_11/FusedBatchNorm:3"
  input: "batch_normalization_11/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_11/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Pad_1"
  input: "conv2d_13/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_13/Conv2D_grad/ShapeN"
  input: "conv2d_13/kernel/read"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Pad_1"
  input: "gradients/conv2d_13/Conv2D_grad/Const"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_13/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_13/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_70"
  op: "AddN"
  input: "gradients/L2Loss_36_grad/mul"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_36_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_71"
  op: "AddN"
  input: "gradients/L2Loss_37_grad/mul"
  input: "gradients/batch_normalization_11/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_37_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Rank"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/stack/1"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/stack"
  op: "Pack"
  input: "gradients/Pad_1_grad/Rank"
  input: "gradients/Pad_1_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice/begin"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice"
  op: "Slice"
  input: "Pad_1/paddings"
  input: "gradients/Pad_1_grad/Slice/begin"
  input: "gradients/Pad_1_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Reshape/shape"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Pad_1_grad/Slice"
  input: "gradients/Pad_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Shape"
  op: "Shape"
  input: "Relu_10"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Pad_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv2d_13/Conv2D_grad/tuple/control_dependency"
  input: "gradients/Pad_1_grad/Reshape"
  input: "gradients/Pad_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_72"
  op: "AddN"
  input: "gradients/L2Loss_35_grad/mul"
  input: "gradients/conv2d_13/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_35_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_73"
  op: "AddN"
  input: "gradients/Pad_grad/Slice_1"
  input: "gradients/Pad_1_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Pad_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_10_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_73"
  input: "Relu_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "batch_normalization_10/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "batch_normalization_10/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "batch_normalization_10/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "batch_normalization_10/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_10_grad/ReluGrad"
  input: "block_layer1"
  input: "batch_normalization_10/gamma/read"
  input: "batch_normalization_10/FusedBatchNorm:3"
  input: "batch_normalization_10/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_10/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_74"
  op: "AddN"
  input: "gradients/L2Loss_32_grad/mul"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_32_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_75"
  op: "AddN"
  input: "gradients/L2Loss_33_grad/mul"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_33_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape"
  op: "Shape"
  input: "conv2d_11/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/Shape_1"
  op: "Shape"
  input: "add_3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_4_grad/Shape"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum"
  input: "gradients/add_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/batch_normalization_10/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_4_grad/Sum_1"
  input: "gradients/add_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_4_grad/Reshape"
  input: "^gradients/add_4_grad/Reshape_1"
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_4_grad/Reshape"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_4_grad/Reshape_1"
  input: "^gradients/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_9"
  input: "conv2d_11/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_11/Conv2D_grad/ShapeN"
  input: "conv2d_11/kernel/read"
  input: "gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_9"
  input: "gradients/conv2d_11/Conv2D_grad/Const"
  input: "gradients/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_11/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_11/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_11/Conv2D_grad/tuple/control_dependency"
  input: "Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_76"
  op: "AddN"
  input: "gradients/L2Loss_31_grad/mul"
  input: "gradients/conv2d_11/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_31_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "batch_normalization_9/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "batch_normalization_9/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "batch_normalization_9/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "batch_normalization_9/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_9_grad/ReluGrad"
  input: "conv2d_10/Conv2D"
  input: "batch_normalization_9/gamma/read"
  input: "batch_normalization_9/FusedBatchNorm:3"
  input: "batch_normalization_9/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_9/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_8"
  input: "conv2d_10/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_10/Conv2D_grad/ShapeN"
  input: "conv2d_10/kernel/read"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_8"
  input: "gradients/conv2d_10/Conv2D_grad/Const"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_10/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_10/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_77"
  op: "AddN"
  input: "gradients/L2Loss_29_grad/mul"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_29_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_78"
  op: "AddN"
  input: "gradients/L2Loss_30_grad/mul"
  input: "gradients/batch_normalization_9/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_30_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_10/Conv2D_grad/tuple/control_dependency"
  input: "Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_79"
  op: "AddN"
  input: "gradients/L2Loss_28_grad/mul"
  input: "gradients/conv2d_10/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_28_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "batch_normalization_8/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "batch_normalization_8/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "batch_normalization_8/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "batch_normalization_8/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_8_grad/ReluGrad"
  input: "add_3"
  input: "batch_normalization_8/gamma/read"
  input: "batch_normalization_8/FusedBatchNorm:3"
  input: "batch_normalization_8/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_8/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_80"
  op: "AddN"
  input: "gradients/add_4_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape"
  op: "Shape"
  input: "conv2d_9/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape_1"
  op: "Shape"
  input: "add_2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_3_grad/Shape"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_80"
  input: "gradients/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum"
  input: "gradients/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_80"
  input: "gradients/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum_1"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/Reshape_1"
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape_1"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_81"
  op: "AddN"
  input: "gradients/L2Loss_26_grad/mul"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_26_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_82"
  op: "AddN"
  input: "gradients/L2Loss_27_grad/mul"
  input: "gradients/batch_normalization_8/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_27_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_7"
  input: "conv2d_9/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_9/Conv2D_grad/ShapeN"
  input: "conv2d_9/kernel/read"
  input: "gradients/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_7"
  input: "gradients/conv2d_9/Conv2D_grad/Const"
  input: "gradients/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_9/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_9/Conv2D_grad/tuple/control_dependency"
  input: "Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_83"
  op: "AddN"
  input: "gradients/L2Loss_25_grad/mul"
  input: "gradients/conv2d_9/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_25_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "batch_normalization_7/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "batch_normalization_7/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "batch_normalization_7/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "batch_normalization_7/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_7_grad/ReluGrad"
  input: "conv2d_8/Conv2D"
  input: "batch_normalization_7/gamma/read"
  input: "batch_normalization_7/FusedBatchNorm:3"
  input: "batch_normalization_7/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_7/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_6"
  input: "conv2d_8/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_8/Conv2D_grad/ShapeN"
  input: "conv2d_8/kernel/read"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_6"
  input: "gradients/conv2d_8/Conv2D_grad/Const"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_8/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_84"
  op: "AddN"
  input: "gradients/L2Loss_23_grad/mul"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_23_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_85"
  op: "AddN"
  input: "gradients/L2Loss_24_grad/mul"
  input: "gradients/batch_normalization_7/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_24_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_8/Conv2D_grad/tuple/control_dependency"
  input: "Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_86"
  op: "AddN"
  input: "gradients/L2Loss_22_grad/mul"
  input: "gradients/conv2d_8/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_22_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "batch_normalization_6/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "batch_normalization_6/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "batch_normalization_6/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "batch_normalization_6/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_6_grad/ReluGrad"
  input: "add_2"
  input: "batch_normalization_6/gamma/read"
  input: "batch_normalization_6/FusedBatchNorm:3"
  input: "batch_normalization_6/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_6/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_87"
  op: "AddN"
  input: "gradients/add_3_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape"
  op: "Shape"
  input: "conv2d_7/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape_1"
  op: "Shape"
  input: "add_1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_2_grad/Shape"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_87"
  input: "gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum"
  input: "gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_87"
  input: "gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum_1"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/Reshape_1"
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape_1"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_88"
  op: "AddN"
  input: "gradients/L2Loss_20_grad/mul"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_20_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_89"
  op: "AddN"
  input: "gradients/L2Loss_21_grad/mul"
  input: "gradients/batch_normalization_6/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_21_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_5"
  input: "conv2d_7/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_7/Conv2D_grad/ShapeN"
  input: "conv2d_7/kernel/read"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_5"
  input: "gradients/conv2d_7/Conv2D_grad/Const"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_7/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_7/Conv2D_grad/tuple/control_dependency"
  input: "Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_90"
  op: "AddN"
  input: "gradients/L2Loss_19_grad/mul"
  input: "gradients/conv2d_7/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_19_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "batch_normalization_5/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "batch_normalization_5/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "batch_normalization_5/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "batch_normalization_5/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_5_grad/ReluGrad"
  input: "conv2d_6/Conv2D"
  input: "batch_normalization_5/gamma/read"
  input: "batch_normalization_5/FusedBatchNorm:3"
  input: "batch_normalization_5/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_5/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_4"
  input: "conv2d_6/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_6/Conv2D_grad/ShapeN"
  input: "conv2d_6/kernel/read"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_4"
  input: "gradients/conv2d_6/Conv2D_grad/Const"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_6/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_91"
  op: "AddN"
  input: "gradients/L2Loss_17_grad/mul"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_17_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_92"
  op: "AddN"
  input: "gradients/L2Loss_18_grad/mul"
  input: "gradients/batch_normalization_5/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_18_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_4_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_6/Conv2D_grad/tuple/control_dependency"
  input: "Relu_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_93"
  op: "AddN"
  input: "gradients/L2Loss_16_grad/mul"
  input: "gradients/conv2d_6/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_16_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "batch_normalization_4/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_4_grad/ReluGrad"
  input: "add_1"
  input: "batch_normalization_4/gamma/read"
  input: "batch_normalization_4/FusedBatchNorm:3"
  input: "batch_normalization_4/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_4/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_94"
  op: "AddN"
  input: "gradients/add_2_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape"
  op: "Shape"
  input: "conv2d_5/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape_1"
  op: "Shape"
  input: "add"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_1_grad/Shape"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_94"
  input: "gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum"
  input: "gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_94"
  input: "gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum_1"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/Reshape_1"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape_1"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_95"
  op: "AddN"
  input: "gradients/L2Loss_14_grad/mul"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_14_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_96"
  op: "AddN"
  input: "gradients/L2Loss_15_grad/mul"
  input: "gradients/batch_normalization_4/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_15_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_3"
  input: "conv2d_5/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_5/Conv2D_grad/ShapeN"
  input: "conv2d_5/kernel/read"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_3"
  input: "gradients/conv2d_5/Conv2D_grad/Const"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_5/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_5/Conv2D_grad/tuple/control_dependency"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_97"
  op: "AddN"
  input: "gradients/L2Loss_13_grad/mul"
  input: "gradients/conv2d_5/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_13_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_109"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_110"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_111"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_112"
  op: "ZerosLike"
  input: "batch_normalization_3/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_3_grad/ReluGrad"
  input: "conv2d_4/Conv2D"
  input: "batch_normalization_3/gamma/read"
  input: "batch_normalization_3/FusedBatchNorm:3"
  input: "batch_normalization_3/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_3/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_2"
  input: "conv2d_4/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_4/Conv2D_grad/ShapeN"
  input: "conv2d_4/kernel/read"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_2"
  input: "gradients/conv2d_4/Conv2D_grad/Const"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_4/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_98"
  op: "AddN"
  input: "gradients/L2Loss_11_grad/mul"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_11_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_99"
  op: "AddN"
  input: "gradients/L2Loss_12_grad/mul"
  input: "gradients/batch_normalization_3/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_12_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_4/Conv2D_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_100"
  op: "AddN"
  input: "gradients/L2Loss_10_grad/mul"
  input: "gradients/conv2d_4/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_10_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_113"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_114"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_115"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_116"
  op: "ZerosLike"
  input: "batch_normalization_2/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "add"
  input: "batch_normalization_2/gamma/read"
  input: "batch_normalization_2/FusedBatchNorm:3"
  input: "batch_normalization_2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_101"
  op: "AddN"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "conv2d_3/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "conv2d_1/Conv2D"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_101"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_101"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_102"
  op: "AddN"
  input: "gradients/L2Loss_8_grad/mul"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_8_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_103"
  op: "AddN"
  input: "gradients/L2Loss_9_grad/mul"
  input: "gradients/batch_normalization_2/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_9_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu_1"
  input: "conv2d_3/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_3/Conv2D_grad/ShapeN"
  input: "conv2d_3/kernel/read"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu_1"
  input: "gradients/conv2d_3/Conv2D_grad/Const"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu"
  input: "conv2d_1/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_1/Conv2D_grad/ShapeN"
  input: "conv2d_1/kernel/read"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu"
  input: "gradients/conv2d_1/Conv2D_grad/Const"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv2d_3/Conv2D_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_104"
  op: "AddN"
  input: "gradients/L2Loss_7_grad/mul"
  input: "gradients/conv2d_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_7_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_105"
  op: "AddN"
  input: "gradients/L2Loss_3_grad/mul"
  input: "gradients/conv2d_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_3_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_117"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_118"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_119"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_120"
  op: "ZerosLike"
  input: "batch_normalization_1/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "conv2d_2/Conv2D"
  input: "batch_normalization_1/gamma/read"
  input: "batch_normalization_1/FusedBatchNorm:3"
  input: "batch_normalization_1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization_1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Relu"
  input: "conv2d_2/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d_2/Conv2D_grad/ShapeN"
  input: "conv2d_2/kernel/read"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Relu"
  input: "gradients/conv2d_2/Conv2D_grad/Const"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_106"
  op: "AddN"
  input: "gradients/L2Loss_5_grad/mul"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_5_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_107"
  op: "AddN"
  input: "gradients/L2Loss_6_grad/mul"
  input: "gradients/batch_normalization_1/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_6_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_108"
  op: "AddN"
  input: "gradients/conv2d_1/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv2d_2/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_108"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_109"
  op: "AddN"
  input: "gradients/L2Loss_4_grad/mul"
  input: "gradients/conv2d_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_4_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_121"
  op: "ZerosLike"
  input: "batch_normalization/FusedBatchNorm:1"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_122"
  op: "ZerosLike"
  input: "batch_normalization/FusedBatchNorm:2"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_123"
  op: "ZerosLike"
  input: "batch_normalization/FusedBatchNorm:3"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_124"
  op: "ZerosLike"
  input: "batch_normalization/FusedBatchNorm:4"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Relu_grad/ReluGrad"
  input: "initial_conv"
  input: "batch_normalization/gamma/read"
  input: "batch_normalization/FusedBatchNorm:3"
  input: "batch_normalization/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/batch_normalization/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/batch_normalization/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_110"
  op: "AddN"
  input: "gradients/L2Loss_1_grad/mul"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_1_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_111"
  op: "AddN"
  input: "gradients/L2Loss_2_grad/mul"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_2_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "conv2d/kernel/read"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/Const"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv2d/Conv2D_grad/ShapeN"
  input: "conv2d/kernel/read"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients/conv2d/Conv2D_grad/Const"
  input: "gradients/batch_normalization/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  input: "^gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/conv2d/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv2d/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv2d/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_112"
  op: "AddN"
  input: "gradients/L2Loss_grad/mul"
  input: "gradients/conv2d/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d/kernel/Momentum"
  input: "conv2d/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization/gamma/Momentum"
  input: "batch_normalization/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization/beta/Momentum"
  input: "batch_normalization/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_1/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_1/kernel/Momentum"
  input: "conv2d_1/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_1/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_2/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_2/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_2/kernel/Momentum"
  input: "conv2d_2/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_2/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_1/gamma/Momentum"
  input: "batch_normalization_1/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_1/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_1/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_1/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_1/beta/Momentum"
  input: "batch_normalization_1/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_1/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_1/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_3/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_3/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_3/kernel/Momentum"
  input: "conv2d_3/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_3/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_2/gamma/Momentum"
  input: "batch_normalization_2/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_2/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_2/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_2/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_2/beta/Momentum"
  input: "batch_normalization_2/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_2/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_2/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_4/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_4/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_4/kernel/Momentum"
  input: "conv2d_4/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_4/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_3/gamma/Momentum"
  input: "batch_normalization_3/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_3/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_3/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_3/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_3/beta/Momentum"
  input: "batch_normalization_3/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_3/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_3/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_5/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_5/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_5/kernel/Momentum"
  input: "conv2d_5/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_5/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_4/gamma/Momentum"
  input: "batch_normalization_4/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_4/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_4/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_4/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_4/beta/Momentum"
  input: "batch_normalization_4/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_4/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_4/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_6/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_6/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_6/kernel/Momentum"
  input: "conv2d_6/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_6/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_5/gamma/Momentum"
  input: "batch_normalization_5/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_5/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_5/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_5/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_5/beta/Momentum"
  input: "batch_normalization_5/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_5/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_5/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_7/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_7/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_7/kernel/Momentum"
  input: "conv2d_7/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_7/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_6/gamma/Momentum"
  input: "batch_normalization_6/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_6/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_6/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_6/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_6/beta/Momentum"
  input: "batch_normalization_6/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_6/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_6/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_8/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_8/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_8/kernel/Momentum"
  input: "conv2d_8/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_8/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_7/gamma/Momentum"
  input: "batch_normalization_7/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_7/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_7/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_7/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_7/beta/Momentum"
  input: "batch_normalization_7/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_7/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_7/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_9/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_9/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_9/kernel/Momentum"
  input: "conv2d_9/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_9/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_8/gamma/Momentum"
  input: "batch_normalization_8/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_8/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_8/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_8/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_8/beta/Momentum"
  input: "batch_normalization_8/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_8/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_8/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_10/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_10/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_10/kernel/Momentum"
  input: "conv2d_10/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_10/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_9/gamma/Momentum"
  input: "batch_normalization_9/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_9/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_9/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_9/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_9/beta/Momentum"
  input: "batch_normalization_9/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_9/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_9/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_11/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_11/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_11/kernel/Momentum"
  input: "conv2d_11/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_11/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_10/gamma/Momentum"
  input: "batch_normalization_10/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_10/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_10/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_10/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_10/beta/Momentum"
  input: "batch_normalization_10/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_10/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_10/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_12/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_12/kernel/Momentum"
  input: "conv2d_12/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_12/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_13/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_13/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_13/kernel/Momentum"
  input: "conv2d_13/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_13/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_11/gamma/Momentum"
  input: "batch_normalization_11/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_11/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_11/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_11/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_11/beta/Momentum"
  input: "batch_normalization_11/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_11/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_11/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_14/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_14/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_14/kernel/Momentum"
  input: "conv2d_14/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_14/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_12/gamma/Momentum"
  input: "batch_normalization_12/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_12/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_12/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_12/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_12/beta/Momentum"
  input: "batch_normalization_12/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_12/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_12/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_15/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_15/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_15/kernel/Momentum"
  input: "conv2d_15/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_15/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_13/gamma/Momentum"
  input: "batch_normalization_13/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_13/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_13/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_13/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_13/beta/Momentum"
  input: "batch_normalization_13/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_13/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_13/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_16/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_16/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_16/kernel/Momentum"
  input: "conv2d_16/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_16/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_14/gamma/Momentum"
  input: "batch_normalization_14/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_14/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_14/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_14/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_14/beta/Momentum"
  input: "batch_normalization_14/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_14/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_14/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_17/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_17/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_17/kernel/Momentum"
  input: "conv2d_17/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_17/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_15/gamma/Momentum"
  input: "batch_normalization_15/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_15/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_15/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_15/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_15/beta/Momentum"
  input: "batch_normalization_15/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_15/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_15/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_18/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_18/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_18/kernel/Momentum"
  input: "conv2d_18/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_18/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_16/gamma/Momentum"
  input: "batch_normalization_16/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_16/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_16/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_16/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_16/beta/Momentum"
  input: "batch_normalization_16/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_16/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_16/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_19/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_19/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_19/kernel/Momentum"
  input: "conv2d_19/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_19/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_17/gamma/Momentum"
  input: "batch_normalization_17/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_17/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_17/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_17/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_17/beta/Momentum"
  input: "batch_normalization_17/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_17/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_17/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_20/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_20/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_20/kernel/Momentum"
  input: "conv2d_20/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_20/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_18/gamma/Momentum"
  input: "batch_normalization_18/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_18/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_18/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_18/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_18/beta/Momentum"
  input: "batch_normalization_18/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_18/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_18/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_21/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_21/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_21/kernel/Momentum"
  input: "conv2d_21/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_21/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_21/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_19/gamma/Momentum"
  input: "batch_normalization_19/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_19/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_19/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_19/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_19/beta/Momentum"
  input: "batch_normalization_19/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_19/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_19/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_22/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_22/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_22/kernel/Momentum"
  input: "conv2d_22/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_22/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_22/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_20/gamma/Momentum"
  input: "batch_normalization_20/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_20/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_20/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_20/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_20/beta/Momentum"
  input: "batch_normalization_20/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_20/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_20/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_23/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_23/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_23/kernel/Momentum"
  input: "conv2d_23/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_23/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_23/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_24/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_24/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_24/kernel/Momentum"
  input: "conv2d_24/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_24/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_24/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_21/gamma/Momentum"
  input: "batch_normalization_21/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_21/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_21/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_21/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_21/beta/Momentum"
  input: "batch_normalization_21/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_21/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_21/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_25/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_25/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_25/kernel/Momentum"
  input: "conv2d_25/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_25/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_25/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_22/gamma/Momentum"
  input: "batch_normalization_22/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_22/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_22/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_22/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_22/beta/Momentum"
  input: "batch_normalization_22/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_22/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_22/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_26/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_26/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_26/kernel/Momentum"
  input: "conv2d_26/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_26/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_26/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_23/gamma/Momentum"
  input: "batch_normalization_23/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_23/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_23/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_23/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_23/beta/Momentum"
  input: "batch_normalization_23/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_23/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_23/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_27/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_27/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_27/kernel/Momentum"
  input: "conv2d_27/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_27/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_27/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_24/gamma/Momentum"
  input: "batch_normalization_24/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_24/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_24/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_24/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_24/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_24/beta/Momentum"
  input: "batch_normalization_24/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_24/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_24/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_28/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_28/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_28/kernel/Momentum"
  input: "conv2d_28/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_28/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_28/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_25/gamma/Momentum"
  input: "batch_normalization_25/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_25/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_25/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_25/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_25/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_25/beta/Momentum"
  input: "batch_normalization_25/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_25/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_25/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_29/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_29/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_29/kernel/Momentum"
  input: "conv2d_29/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_29/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_29/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_26/gamma/Momentum"
  input: "batch_normalization_26/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_26/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_26/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_26/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_26/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_26/beta/Momentum"
  input: "batch_normalization_26/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_26/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_26/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_30/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_30/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_30/kernel/Momentum"
  input: "conv2d_30/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_30/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_30/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_27/gamma/Momentum"
  input: "batch_normalization_27/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_27/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_27/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_27/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_27/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_27/beta/Momentum"
  input: "batch_normalization_27/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_27/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_27/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_31/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_31/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_31/kernel/Momentum"
  input: "conv2d_31/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_31/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_31/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_28/gamma/Momentum"
  input: "batch_normalization_28/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_28/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_28/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_28/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_28/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_28/beta/Momentum"
  input: "batch_normalization_28/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_28/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_28/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_32/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_32/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_32/kernel/Momentum"
  input: "conv2d_32/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_32/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_32/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_29/gamma/Momentum"
  input: "batch_normalization_29/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_29/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_29/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_29/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_29/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_29/beta/Momentum"
  input: "batch_normalization_29/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_29/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_29/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum/Initializer/zeros"
  op: "Fill"
  input: "conv2d_33/kernel/Momentum/Initializer/zeros/shape_as_tensor"
  input: "conv2d_33/kernel/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum/Assign"
  op: "Assign"
  input: "conv2d_33/kernel/Momentum"
  input: "conv2d_33/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_33/kernel/Momentum/read"
  op: "Identity"
  input: "conv2d_33/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_30/gamma/Momentum"
  input: "batch_normalization_30/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/gamma/Momentum/read"
  op: "Identity"
  input: "batch_normalization_30/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "batch_normalization_30/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "batch_normalization_30/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch_normalization_30/beta/Momentum/Assign"
  op: "Assign"
  input: "batch_normalization_30/beta/Momentum"
  input: "batch_normalization_30/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "batch_normalization_30/beta/Momentum/read"
  op: "Identity"
  input: "batch_normalization_30/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Momentum/Assign"
  op: "Assign"
  input: "dense/kernel/Momentum"
  input: "dense/kernel/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Momentum/read"
  op: "Identity"
  input: "dense/kernel/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "dense/bias/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/bias/Momentum/Assign"
  op: "Assign"
  input: "dense/bias/Momentum"
  input: "dense/bias/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/bias/Momentum/read"
  op: "Identity"
  input: "dense/bias/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Momentum/momentum"
  op: "Const"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Momentum/update_conv2d/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_112"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_110"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_111"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_1/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_105"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_2/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_2/kernel"
  input: "conv2d_2/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_109"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_1/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_106"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_1/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_107"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_3/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_3/kernel"
  input: "conv2d_3/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_104"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_2/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_102"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_2/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_103"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_4/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_4/kernel"
  input: "conv2d_4/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_100"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_3/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_98"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_3/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_99"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_5/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_5/kernel"
  input: "conv2d_5/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_97"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_4/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_95"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_4/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_96"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_6/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_6/kernel"
  input: "conv2d_6/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_93"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_5/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_91"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_5/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_92"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_7/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_7/kernel"
  input: "conv2d_7/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_90"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_6/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_88"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_6/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_89"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_8/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_8/kernel"
  input: "conv2d_8/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_86"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_7/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_84"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_7/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_85"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_9/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_9/kernel"
  input: "conv2d_9/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_83"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_8/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_81"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_8/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_82"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_10/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_10/kernel"
  input: "conv2d_10/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_79"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_9/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_77"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_9/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_78"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_11/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_11/kernel"
  input: "conv2d_11/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_76"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_10/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_74"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_10/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_75"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_12/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_12/kernel"
  input: "conv2d_12/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_69"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_13/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_13/kernel"
  input: "conv2d_13/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_72"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_11/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_70"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_11/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_71"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_14/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_14/kernel"
  input: "conv2d_14/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_68"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_12/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_66"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_12/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_67"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_15/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_15/kernel"
  input: "conv2d_15/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_64"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_13/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_62"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_13/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_63"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_16/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_16/kernel"
  input: "conv2d_16/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_61"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_14/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_59"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_14/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_60"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_17/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_17/kernel"
  input: "conv2d_17/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_57"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_15/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_55"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_15/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_56"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_18/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_18/kernel"
  input: "conv2d_18/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_54"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_16/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_52"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_16/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_53"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_19/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_19/kernel"
  input: "conv2d_19/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_50"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_17/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_48"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_17/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_49"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_20/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_20/kernel"
  input: "conv2d_20/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_47"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_18/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_45"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_18/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_46"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_21/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_21/kernel"
  input: "conv2d_21/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_43"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_19/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_41"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_19/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_42"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_22/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_22/kernel"
  input: "conv2d_22/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_40"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_20/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_38"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_20/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_39"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_23/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_23/kernel"
  input: "conv2d_23/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_33"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_24/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_24/kernel"
  input: "conv2d_24/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_36"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_21/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_34"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_21/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_35"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_25/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_25/kernel"
  input: "conv2d_25/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_32"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_22/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_30"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_22/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_31"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_26/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_26/kernel"
  input: "conv2d_26/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_28"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_23/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_26"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_23/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_27"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_27/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_27/kernel"
  input: "conv2d_27/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_25"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_24/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_24/gamma"
  input: "batch_normalization_24/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_23"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_24/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_24/beta"
  input: "batch_normalization_24/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_24"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_28/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_28/kernel"
  input: "conv2d_28/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_21"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_25/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_25/gamma"
  input: "batch_normalization_25/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_19"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_25/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_25/beta"
  input: "batch_normalization_25/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_20"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_29/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_29/kernel"
  input: "conv2d_29/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_18"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_26/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_26/gamma"
  input: "batch_normalization_26/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_16"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_26/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_26/beta"
  input: "batch_normalization_26/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_17"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_30/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_30/kernel"
  input: "conv2d_30/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_14"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_27/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_27/gamma"
  input: "batch_normalization_27/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_12"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_27/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_27/beta"
  input: "batch_normalization_27/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_13"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_31/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_31/kernel"
  input: "conv2d_31/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_11"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_28/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_28/gamma"
  input: "batch_normalization_28/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_9"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_28/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_28/beta"
  input: "batch_normalization_28/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_10"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_32/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_32/kernel"
  input: "conv2d_32/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_7"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_29/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_29/gamma"
  input: "batch_normalization_29/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_5"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_29/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_29/beta"
  input: "batch_normalization_29/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_6"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_conv2d_33/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "conv2d_33/kernel"
  input: "conv2d_33/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_4"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_30/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_30/gamma"
  input: "batch_normalization_30/gamma/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_batch_normalization_30/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "batch_normalization_30/beta"
  input: "batch_normalization_30/beta/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_3"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_dense/kernel/ApplyMomentum"
  op: "ApplyMomentum"
  input: "dense/kernel"
  input: "dense/kernel/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_dense/bias/ApplyMomentum"
  op: "ApplyMomentum"
  input: "dense/bias"
  input: "dense/bias/Momentum"
  input: "PiecewiseConstant/case/cond/Merge"
  input: "gradients/AddN"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update"
  op: "NoOp"
  input: "^Momentum/update_batch_normalization/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_1/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_1/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_10/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_10/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_11/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_11/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_12/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_12/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_13/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_13/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_14/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_14/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_15/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_15/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_16/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_16/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_17/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_17/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_18/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_18/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_19/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_19/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_2/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_2/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_20/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_20/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_21/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_21/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_22/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_22/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_23/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_23/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_24/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_24/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_25/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_25/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_26/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_26/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_27/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_27/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_28/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_28/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_29/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_29/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_3/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_3/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_30/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_30/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_4/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_4/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_5/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_5/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_6/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_6/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_7/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_7/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_8/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_8/gamma/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_9/beta/ApplyMomentum"
  input: "^Momentum/update_batch_normalization_9/gamma/ApplyMomentum"
  input: "^Momentum/update_conv2d/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_1/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_10/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_11/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_12/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_13/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_14/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_15/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_16/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_17/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_18/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_19/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_2/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_20/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_21/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_22/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_23/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_24/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_25/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_26/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_27/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_28/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_29/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_3/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_30/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_31/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_32/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_33/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_4/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_5/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_6/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_7/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_8/kernel/ApplyMomentum"
  input: "^Momentum/update_conv2d_9/kernel/ApplyMomentum"
  input: "^Momentum/update_dense/bias/ApplyMomentum"
  input: "^Momentum/update_dense/kernel/ApplyMomentum"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
}
node {
  name: "Momentum/value"
  op: "Const"
  input: "^Momentum/update"
  input: "^batch_normalization/AssignMovingAvg"
  input: "^batch_normalization/AssignMovingAvg_1"
  input: "^batch_normalization_1/AssignMovingAvg"
  input: "^batch_normalization_1/AssignMovingAvg_1"
  input: "^batch_normalization_10/AssignMovingAvg"
  input: "^batch_normalization_10/AssignMovingAvg_1"
  input: "^batch_normalization_11/AssignMovingAvg"
  input: "^batch_normalization_11/AssignMovingAvg_1"
  input: "^batch_normalization_12/AssignMovingAvg"
  input: "^batch_normalization_12/AssignMovingAvg_1"
  input: "^batch_normalization_13/AssignMovingAvg"
  input: "^batch_normalization_13/AssignMovingAvg_1"
  input: "^batch_normalization_14/AssignMovingAvg"
  input: "^batch_normalization_14/AssignMovingAvg_1"
  input: "^batch_normalization_15/AssignMovingAvg"
  input: "^batch_normalization_15/AssignMovingAvg_1"
  input: "^batch_normalization_16/AssignMovingAvg"
  input: "^batch_normalization_16/AssignMovingAvg_1"
  input: "^batch_normalization_17/AssignMovingAvg"
  input: "^batch_normalization_17/AssignMovingAvg_1"
  input: "^batch_normalization_18/AssignMovingAvg"
  input: "^batch_normalization_18/AssignMovingAvg_1"
  input: "^batch_normalization_19/AssignMovingAvg"
  input: "^batch_normalization_19/AssignMovingAvg_1"
  input: "^batch_normalization_2/AssignMovingAvg"
  input: "^batch_normalization_2/AssignMovingAvg_1"
  input: "^batch_normalization_20/AssignMovingAvg"
  input: "^batch_normalization_20/AssignMovingAvg_1"
  input: "^batch_normalization_21/AssignMovingAvg"
  input: "^batch_normalization_21/AssignMovingAvg_1"
  input: "^batch_normalization_22/AssignMovingAvg"
  input: "^batch_normalization_22/AssignMovingAvg_1"
  input: "^batch_normalization_23/AssignMovingAvg"
  input: "^batch_normalization_23/AssignMovingAvg_1"
  input: "^batch_normalization_24/AssignMovingAvg"
  input: "^batch_normalization_24/AssignMovingAvg_1"
  input: "^batch_normalization_25/AssignMovingAvg"
  input: "^batch_normalization_25/AssignMovingAvg_1"
  input: "^batch_normalization_26/AssignMovingAvg"
  input: "^batch_normalization_26/AssignMovingAvg_1"
  input: "^batch_normalization_27/AssignMovingAvg"
  input: "^batch_normalization_27/AssignMovingAvg_1"
  input: "^batch_normalization_28/AssignMovingAvg"
  input: "^batch_normalization_28/AssignMovingAvg_1"
  input: "^batch_normalization_29/AssignMovingAvg"
  input: "^batch_normalization_29/AssignMovingAvg_1"
  input: "^batch_normalization_3/AssignMovingAvg"
  input: "^batch_normalization_3/AssignMovingAvg_1"
  input: "^batch_normalization_30/AssignMovingAvg"
  input: "^batch_normalization_30/AssignMovingAvg_1"
  input: "^batch_normalization_4/AssignMovingAvg"
  input: "^batch_normalization_4/AssignMovingAvg_1"
  input: "^batch_normalization_5/AssignMovingAvg"
  input: "^batch_normalization_5/AssignMovingAvg_1"
  input: "^batch_normalization_6/AssignMovingAvg"
  input: "^batch_normalization_6/AssignMovingAvg_1"
  input: "^batch_normalization_7/AssignMovingAvg"
  input: "^batch_normalization_7/AssignMovingAvg_1"
  input: "^batch_normalization_8/AssignMovingAvg"
  input: "^batch_normalization_8/AssignMovingAvg_1"
  input: "^batch_normalization_9/AssignMovingAvg"
  input: "^batch_normalization_9/AssignMovingAvg_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Momentum"
  op: "AssignAdd"
  input: "global_step"
  input: "Momentum/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^batch_normalization/beta/Assign"
  input: "^batch_normalization/beta/Momentum/Assign"
  input: "^batch_normalization/gamma/Assign"
  input: "^batch_normalization/gamma/Momentum/Assign"
  input: "^batch_normalization/moving_mean/Assign"
  input: "^batch_normalization/moving_variance/Assign"
  input: "^batch_normalization_1/beta/Assign"
  input: "^batch_normalization_1/beta/Momentum/Assign"
  input: "^batch_normalization_1/gamma/Assign"
  input: "^batch_normalization_1/gamma/Momentum/Assign"
  input: "^batch_normalization_1/moving_mean/Assign"
  input: "^batch_normalization_1/moving_variance/Assign"
  input: "^batch_normalization_10/beta/Assign"
  input: "^batch_normalization_10/beta/Momentum/Assign"
  input: "^batch_normalization_10/gamma/Assign"
  input: "^batch_normalization_10/gamma/Momentum/Assign"
  input: "^batch_normalization_10/moving_mean/Assign"
  input: "^batch_normalization_10/moving_variance/Assign"
  input: "^batch_normalization_11/beta/Assign"
  input: "^batch_normalization_11/beta/Momentum/Assign"
  input: "^batch_normalization_11/gamma/Assign"
  input: "^batch_normalization_11/gamma/Momentum/Assign"
  input: "^batch_normalization_11/moving_mean/Assign"
  input: "^batch_normalization_11/moving_variance/Assign"
  input: "^batch_normalization_12/beta/Assign"
  input: "^batch_normalization_12/beta/Momentum/Assign"
  input: "^batch_normalization_12/gamma/Assign"
  input: "^batch_normalization_12/gamma/Momentum/Assign"
  input: "^batch_normalization_12/moving_mean/Assign"
  input: "^batch_normalization_12/moving_variance/Assign"
  input: "^batch_normalization_13/beta/Assign"
  input: "^batch_normalization_13/beta/Momentum/Assign"
  input: "^batch_normalization_13/gamma/Assign"
  input: "^batch_normalization_13/gamma/Momentum/Assign"
  input: "^batch_normalization_13/moving_mean/Assign"
  input: "^batch_normalization_13/moving_variance/Assign"
  input: "^batch_normalization_14/beta/Assign"
  input: "^batch_normalization_14/beta/Momentum/Assign"
  input: "^batch_normalization_14/gamma/Assign"
  input: "^batch_normalization_14/gamma/Momentum/Assign"
  input: "^batch_normalization_14/moving_mean/Assign"
  input: "^batch_normalization_14/moving_variance/Assign"
  input: "^batch_normalization_15/beta/Assign"
  input: "^batch_normalization_15/beta/Momentum/Assign"
  input: "^batch_normalization_15/gamma/Assign"
  input: "^batch_normalization_15/gamma/Momentum/Assign"
  input: "^batch_normalization_15/moving_mean/Assign"
  input: "^batch_normalization_15/moving_variance/Assign"
  input: "^batch_normalization_16/beta/Assign"
  input: "^batch_normalization_16/beta/Momentum/Assign"
  input: "^batch_normalization_16/gamma/Assign"
  input: "^batch_normalization_16/gamma/Momentum/Assign"
  input: "^batch_normalization_16/moving_mean/Assign"
  input: "^batch_normalization_16/moving_variance/Assign"
  input: "^batch_normalization_17/beta/Assign"
  input: "^batch_normalization_17/beta/Momentum/Assign"
  input: "^batch_normalization_17/gamma/Assign"
  input: "^batch_normalization_17/gamma/Momentum/Assign"
  input: "^batch_normalization_17/moving_mean/Assign"
  input: "^batch_normalization_17/moving_variance/Assign"
  input: "^batch_normalization_18/beta/Assign"
  input: "^batch_normalization_18/beta/Momentum/Assign"
  input: "^batch_normalization_18/gamma/Assign"
  input: "^batch_normalization_18/gamma/Momentum/Assign"
  input: "^batch_normalization_18/moving_mean/Assign"
  input: "^batch_normalization_18/moving_variance/Assign"
  input: "^batch_normalization_19/beta/Assign"
  input: "^batch_normalization_19/beta/Momentum/Assign"
  input: "^batch_normalization_19/gamma/Assign"
  input: "^batch_normalization_19/gamma/Momentum/Assign"
  input: "^batch_normalization_19/moving_mean/Assign"
  input: "^batch_normalization_19/moving_variance/Assign"
  input: "^batch_normalization_2/beta/Assign"
  input: "^batch_normalization_2/beta/Momentum/Assign"
  input: "^batch_normalization_2/gamma/Assign"
  input: "^batch_normalization_2/gamma/Momentum/Assign"
  input: "^batch_normalization_2/moving_mean/Assign"
  input: "^batch_normalization_2/moving_variance/Assign"
  input: "^batch_normalization_20/beta/Assign"
  input: "^batch_normalization_20/beta/Momentum/Assign"
  input: "^batch_normalization_20/gamma/Assign"
  input: "^batch_normalization_20/gamma/Momentum/Assign"
  input: "^batch_normalization_20/moving_mean/Assign"
  input: "^batch_normalization_20/moving_variance/Assign"
  input: "^batch_normalization_21/beta/Assign"
  input: "^batch_normalization_21/beta/Momentum/Assign"
  input: "^batch_normalization_21/gamma/Assign"
  input: "^batch_normalization_21/gamma/Momentum/Assign"
  input: "^batch_normalization_21/moving_mean/Assign"
  input: "^batch_normalization_21/moving_variance/Assign"
  input: "^batch_normalization_22/beta/Assign"
  input: "^batch_normalization_22/beta/Momentum/Assign"
  input: "^batch_normalization_22/gamma/Assign"
  input: "^batch_normalization_22/gamma/Momentum/Assign"
  input: "^batch_normalization_22/moving_mean/Assign"
  input: "^batch_normalization_22/moving_variance/Assign"
  input: "^batch_normalization_23/beta/Assign"
  input: "^batch_normalization_23/beta/Momentum/Assign"
  input: "^batch_normalization_23/gamma/Assign"
  input: "^batch_normalization_23/gamma/Momentum/Assign"
  input: "^batch_normalization_23/moving_mean/Assign"
  input: "^batch_normalization_23/moving_variance/Assign"
  input: "^batch_normalization_24/beta/Assign"
  input: "^batch_normalization_24/beta/Momentum/Assign"
  input: "^batch_normalization_24/gamma/Assign"
  input: "^batch_normalization_24/gamma/Momentum/Assign"
  input: "^batch_normalization_24/moving_mean/Assign"
  input: "^batch_normalization_24/moving_variance/Assign"
  input: "^batch_normalization_25/beta/Assign"
  input: "^batch_normalization_25/beta/Momentum/Assign"
  input: "^batch_normalization_25/gamma/Assign"
  input: "^batch_normalization_25/gamma/Momentum/Assign"
  input: "^batch_normalization_25/moving_mean/Assign"
  input: "^batch_normalization_25/moving_variance/Assign"
  input: "^batch_normalization_26/beta/Assign"
  input: "^batch_normalization_26/beta/Momentum/Assign"
  input: "^batch_normalization_26/gamma/Assign"
  input: "^batch_normalization_26/gamma/Momentum/Assign"
  input: "^batch_normalization_26/moving_mean/Assign"
  input: "^batch_normalization_26/moving_variance/Assign"
  input: "^batch_normalization_27/beta/Assign"
  input: "^batch_normalization_27/beta/Momentum/Assign"
  input: "^batch_normalization_27/gamma/Assign"
  input: "^batch_normalization_27/gamma/Momentum/Assign"
  input: "^batch_normalization_27/moving_mean/Assign"
  input: "^batch_normalization_27/moving_variance/Assign"
  input: "^batch_normalization_28/beta/Assign"
  input: "^batch_normalization_28/beta/Momentum/Assign"
  input: "^batch_normalization_28/gamma/Assign"
  input: "^batch_normalization_28/gamma/Momentum/Assign"
  input: "^batch_normalization_28/moving_mean/Assign"
  input: "^batch_normalization_28/moving_variance/Assign"
  input: "^batch_normalization_29/beta/Assign"
  input: "^batch_normalization_29/beta/Momentum/Assign"
  input: "^batch_normalization_29/gamma/Assign"
  input: "^batch_normalization_29/gamma/Momentum/Assign"
  input: "^batch_normalization_29/moving_mean/Assign"
  input: "^batch_normalization_29/moving_variance/Assign"
  input: "^batch_normalization_3/beta/Assign"
  input: "^batch_normalization_3/beta/Momentum/Assign"
  input: "^batch_normalization_3/gamma/Assign"
  input: "^batch_normalization_3/gamma/Momentum/Assign"
  input: "^batch_normalization_3/moving_mean/Assign"
  input: "^batch_normalization_3/moving_variance/Assign"
  input: "^batch_normalization_30/beta/Assign"
  input: "^batch_normalization_30/beta/Momentum/Assign"
  input: "^batch_normalization_30/gamma/Assign"
  input: "^batch_normalization_30/gamma/Momentum/Assign"
  input: "^batch_normalization_30/moving_mean/Assign"
  input: "^batch_normalization_30/moving_variance/Assign"
  input: "^batch_normalization_4/beta/Assign"
  input: "^batch_normalization_4/beta/Momentum/Assign"
  input: "^batch_normalization_4/gamma/Assign"
  input: "^batch_normalization_4/gamma/Momentum/Assign"
  input: "^batch_normalization_4/moving_mean/Assign"
  input: "^batch_normalization_4/moving_variance/Assign"
  input: "^batch_normalization_5/beta/Assign"
  input: "^batch_normalization_5/beta/Momentum/Assign"
  input: "^batch_normalization_5/gamma/Assign"
  input: "^batch_normalization_5/gamma/Momentum/Assign"
  input: "^batch_normalization_5/moving_mean/Assign"
  input: "^batch_normalization_5/moving_variance/Assign"
  input: "^batch_normalization_6/beta/Assign"
  input: "^batch_normalization_6/beta/Momentum/Assign"
  input: "^batch_normalization_6/gamma/Assign"
  input: "^batch_normalization_6/gamma/Momentum/Assign"
  input: "^batch_normalization_6/moving_mean/Assign"
  input: "^batch_normalization_6/moving_variance/Assign"
  input: "^batch_normalization_7/beta/Assign"
  input: "^batch_normalization_7/beta/Momentum/Assign"
  input: "^batch_normalization_7/gamma/Assign"
  input: "^batch_normalization_7/gamma/Momentum/Assign"
  input: "^batch_normalization_7/moving_mean/Assign"
  input: "^batch_normalization_7/moving_variance/Assign"
  input: "^batch_normalization_8/beta/Assign"
  input: "^batch_normalization_8/beta/Momentum/Assign"
  input: "^batch_normalization_8/gamma/Assign"
  input: "^batch_normalization_8/gamma/Momentum/Assign"
  input: "^batch_normalization_8/moving_mean/Assign"
  input: "^batch_normalization_8/moving_variance/Assign"
  input: "^batch_normalization_9/beta/Assign"
  input: "^batch_normalization_9/beta/Momentum/Assign"
  input: "^batch_normalization_9/gamma/Assign"
  input: "^batch_normalization_9/gamma/Momentum/Assign"
  input: "^batch_normalization_9/moving_mean/Assign"
  input: "^batch_normalization_9/moving_variance/Assign"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d/kernel/Momentum/Assign"
  input: "^conv2d_1/kernel/Assign"
  input: "^conv2d_1/kernel/Momentum/Assign"
  input: "^conv2d_10/kernel/Assign"
  input: "^conv2d_10/kernel/Momentum/Assign"
  input: "^conv2d_11/kernel/Assign"
  input: "^conv2d_11/kernel/Momentum/Assign"
  input: "^conv2d_12/kernel/Assign"
  input: "^conv2d_12/kernel/Momentum/Assign"
  input: "^conv2d_13/kernel/Assign"
  input: "^conv2d_13/kernel/Momentum/Assign"
  input: "^conv2d_14/kernel/Assign"
  input: "^conv2d_14/kernel/Momentum/Assign"
  input: "^conv2d_15/kernel/Assign"
  input: "^conv2d_15/kernel/Momentum/Assign"
  input: "^conv2d_16/kernel/Assign"
  input: "^conv2d_16/kernel/Momentum/Assign"
  input: "^conv2d_17/kernel/Assign"
  input: "^conv2d_17/kernel/Momentum/Assign"
  input: "^conv2d_18/kernel/Assign"
  input: "^conv2d_18/kernel/Momentum/Assign"
  input: "^conv2d_19/kernel/Assign"
  input: "^conv2d_19/kernel/Momentum/Assign"
  input: "^conv2d_2/kernel/Assign"
  input: "^conv2d_2/kernel/Momentum/Assign"
  input: "^conv2d_20/kernel/Assign"
  input: "^conv2d_20/kernel/Momentum/Assign"
  input: "^conv2d_21/kernel/Assign"
  input: "^conv2d_21/kernel/Momentum/Assign"
  input: "^conv2d_22/kernel/Assign"
  input: "^conv2d_22/kernel/Momentum/Assign"
  input: "^conv2d_23/kernel/Assign"
  input: "^conv2d_23/kernel/Momentum/Assign"
  input: "^conv2d_24/kernel/Assign"
  input: "^conv2d_24/kernel/Momentum/Assign"
  input: "^conv2d_25/kernel/Assign"
  input: "^conv2d_25/kernel/Momentum/Assign"
  input: "^conv2d_26/kernel/Assign"
  input: "^conv2d_26/kernel/Momentum/Assign"
  input: "^conv2d_27/kernel/Assign"
  input: "^conv2d_27/kernel/Momentum/Assign"
  input: "^conv2d_28/kernel/Assign"
  input: "^conv2d_28/kernel/Momentum/Assign"
  input: "^conv2d_29/kernel/Assign"
  input: "^conv2d_29/kernel/Momentum/Assign"
  input: "^conv2d_3/kernel/Assign"
  input: "^conv2d_3/kernel/Momentum/Assign"
  input: "^conv2d_30/kernel/Assign"
  input: "^conv2d_30/kernel/Momentum/Assign"
  input: "^conv2d_31/kernel/Assign"
  input: "^conv2d_31/kernel/Momentum/Assign"
  input: "^conv2d_32/kernel/Assign"
  input: "^conv2d_32/kernel/Momentum/Assign"
  input: "^conv2d_33/kernel/Assign"
  input: "^conv2d_33/kernel/Momentum/Assign"
  input: "^conv2d_4/kernel/Assign"
  input: "^conv2d_4/kernel/Momentum/Assign"
  input: "^conv2d_5/kernel/Assign"
  input: "^conv2d_5/kernel/Momentum/Assign"
  input: "^conv2d_6/kernel/Assign"
  input: "^conv2d_6/kernel/Momentum/Assign"
  input: "^conv2d_7/kernel/Assign"
  input: "^conv2d_7/kernel/Momentum/Assign"
  input: "^conv2d_8/kernel/Assign"
  input: "^conv2d_8/kernel/Momentum/Assign"
  input: "^conv2d_9/kernel/Assign"
  input: "^conv2d_9/kernel/Momentum/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/bias/Momentum/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense/kernel/Momentum/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv2d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "batch_normalization/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "batch_normalization/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "batch_normalization/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "batch_normalization/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv2d_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv2d_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv2d_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv2d_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv2d_14/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv2d_15/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "conv2d_16/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "conv2d_17/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv2d_18/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv2d_19/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv2d_20/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv2d_21/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv2d_22/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv2d_23/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv2d_24/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv2d_25/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv2d_26/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "conv2d_27/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "conv2d_28/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv2d_29/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "conv2d_30/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv2d_31/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv2d_32/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "conv2d_33/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "conv2d/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "batch_normalization/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "batch_normalization/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv2d_2/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv2d_3/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "conv2d_4/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv2d_5/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "conv2d_6/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "conv2d_7/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv2d_8/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "conv2d_9/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv2d_10/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv2d_11/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "conv2d_12/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "conv2d_13/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv2d_14/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "conv2d_15/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv2d_16/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv2d_17/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "conv2d_18/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv2d_19/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "conv2d_20/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "conv2d_21/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv2d_22/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "conv2d_23/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "conv2d_24/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "conv2d_25/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "conv2d_26/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "conv2d_27/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "conv2d_28/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "conv2d_29/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "conv2d_30/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "conv2d_31/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "conv2d_32/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "conv2d_33/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "dense/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "dense/bias/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  input: "report_uninitialized_variables/IsVariableInitialized_177"
  input: "report_uninitialized_variables/IsVariableInitialized_178"
  input: "report_uninitialized_variables/IsVariableInitialized_179"
  input: "report_uninitialized_variables/IsVariableInitialized_180"
  input: "report_uninitialized_variables/IsVariableInitialized_181"
  input: "report_uninitialized_variables/IsVariableInitialized_182"
  input: "report_uninitialized_variables/IsVariableInitialized_183"
  input: "report_uninitialized_variables/IsVariableInitialized_184"
  input: "report_uninitialized_variables/IsVariableInitialized_185"
  input: "report_uninitialized_variables/IsVariableInitialized_186"
  input: "report_uninitialized_variables/IsVariableInitialized_187"
  input: "report_uninitialized_variables/IsVariableInitialized_188"
  input: "report_uninitialized_variables/IsVariableInitialized_189"
  input: "report_uninitialized_variables/IsVariableInitialized_190"
  input: "report_uninitialized_variables/IsVariableInitialized_191"
  input: "report_uninitialized_variables/IsVariableInitialized_192"
  input: "report_uninitialized_variables/IsVariableInitialized_193"
  input: "report_uninitialized_variables/IsVariableInitialized_194"
  input: "report_uninitialized_variables/IsVariableInitialized_195"
  input: "report_uninitialized_variables/IsVariableInitialized_196"
  input: "report_uninitialized_variables/IsVariableInitialized_197"
  input: "report_uninitialized_variables/IsVariableInitialized_198"
  input: "report_uninitialized_variables/IsVariableInitialized_199"
  input: "report_uninitialized_variables/IsVariableInitialized_200"
  input: "report_uninitialized_variables/IsVariableInitialized_201"
  input: "report_uninitialized_variables/IsVariableInitialized_202"
  input: "report_uninitialized_variables/IsVariableInitialized_203"
  input: "report_uninitialized_variables/IsVariableInitialized_204"
  input: "report_uninitialized_variables/IsVariableInitialized_205"
  input: "report_uninitialized_variables/IsVariableInitialized_206"
  input: "report_uninitialized_variables/IsVariableInitialized_207"
  input: "report_uninitialized_variables/IsVariableInitialized_208"
  input: "report_uninitialized_variables/IsVariableInitialized_209"
  input: "report_uninitialized_variables/IsVariableInitialized_210"
  input: "report_uninitialized_variables/IsVariableInitialized_211"
  input: "report_uninitialized_variables/IsVariableInitialized_212"
  input: "report_uninitialized_variables/IsVariableInitialized_213"
  input: "report_uninitialized_variables/IsVariableInitialized_214"
  input: "report_uninitialized_variables/IsVariableInitialized_215"
  input: "report_uninitialized_variables/IsVariableInitialized_216"
  input: "report_uninitialized_variables/IsVariableInitialized_217"
  input: "report_uninitialized_variables/IsVariableInitialized_218"
  input: "report_uninitialized_variables/IsVariableInitialized_219"
  input: "report_uninitialized_variables/IsVariableInitialized_220"
  input: "report_uninitialized_variables/IsVariableInitialized_221"
  input: "report_uninitialized_variables/IsVariableInitialized_222"
  input: "report_uninitialized_variables/IsVariableInitialized_223"
  input: "report_uninitialized_variables/IsVariableInitialized_224"
  input: "report_uninitialized_variables/IsVariableInitialized_225"
  input: "report_uninitialized_variables/IsVariableInitialized_226"
  input: "report_uninitialized_variables/IsVariableInitialized_227"
  input: "report_uninitialized_variables/IsVariableInitialized_228"
  input: "report_uninitialized_variables/IsVariableInitialized_229"
  input: "report_uninitialized_variables/IsVariableInitialized_230"
  input: "report_uninitialized_variables/IsVariableInitialized_231"
  input: "report_uninitialized_variables/IsVariableInitialized_232"
  input: "report_uninitialized_variables/IsVariableInitialized_233"
  input: "report_uninitialized_variables/IsVariableInitialized_234"
  input: "report_uninitialized_variables/IsVariableInitialized_235"
  input: "report_uninitialized_variables/IsVariableInitialized_236"
  input: "report_uninitialized_variables/IsVariableInitialized_237"
  input: "report_uninitialized_variables/IsVariableInitialized_238"
  input: "report_uninitialized_variables/IsVariableInitialized_239"
  input: "report_uninitialized_variables/IsVariableInitialized_240"
  input: "report_uninitialized_variables/IsVariableInitialized_241"
  input: "report_uninitialized_variables/IsVariableInitialized_242"
  input: "report_uninitialized_variables/IsVariableInitialized_243"
  input: "report_uninitialized_variables/IsVariableInitialized_244"
  input: "report_uninitialized_variables/IsVariableInitialized_245"
  input: "report_uninitialized_variables/IsVariableInitialized_246"
  input: "report_uninitialized_variables/IsVariableInitialized_247"
  input: "report_uninitialized_variables/IsVariableInitialized_248"
  input: "report_uninitialized_variables/IsVariableInitialized_249"
  input: "report_uninitialized_variables/IsVariableInitialized_250"
  input: "report_uninitialized_variables/IsVariableInitialized_251"
  input: "report_uninitialized_variables/IsVariableInitialized_252"
  input: "report_uninitialized_variables/IsVariableInitialized_253"
  input: "report_uninitialized_variables/IsVariableInitialized_254"
  input: "report_uninitialized_variables/IsVariableInitialized_255"
  input: "report_uninitialized_variables/IsVariableInitialized_256"
  input: "report_uninitialized_variables/IsVariableInitialized_257"
  input: "report_uninitialized_variables/IsVariableInitialized_258"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 259
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: "global_step"
        string_val: "conv2d/kernel"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_2/kernel"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "conv2d_3/kernel"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "conv2d_4/kernel"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "conv2d_5/kernel"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "conv2d_6/kernel"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "conv2d_7/kernel"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "conv2d_8/kernel"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "conv2d_9/kernel"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "conv2d_10/kernel"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "conv2d_11/kernel"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/kernel"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "conv2d_14/kernel"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "conv2d_15/kernel"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "conv2d_16/kernel"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "conv2d_17/kernel"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "conv2d_18/kernel"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "conv2d_19/kernel"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "conv2d_20/kernel"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "conv2d_21/kernel"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "conv2d_22/kernel"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_24/kernel"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "conv2d_25/kernel"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "conv2d_26/kernel"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "conv2d_27/kernel"
        string_val: "batch_normalization_24/gamma"
        string_val: "batch_normalization_24/beta"
        string_val: "batch_normalization_24/moving_mean"
        string_val: "batch_normalization_24/moving_variance"
        string_val: "conv2d_28/kernel"
        string_val: "batch_normalization_25/gamma"
        string_val: "batch_normalization_25/beta"
        string_val: "batch_normalization_25/moving_mean"
        string_val: "batch_normalization_25/moving_variance"
        string_val: "conv2d_29/kernel"
        string_val: "batch_normalization_26/gamma"
        string_val: "batch_normalization_26/beta"
        string_val: "batch_normalization_26/moving_mean"
        string_val: "batch_normalization_26/moving_variance"
        string_val: "conv2d_30/kernel"
        string_val: "batch_normalization_27/gamma"
        string_val: "batch_normalization_27/beta"
        string_val: "batch_normalization_27/moving_mean"
        string_val: "batch_normalization_27/moving_variance"
        string_val: "conv2d_31/kernel"
        string_val: "batch_normalization_28/gamma"
        string_val: "batch_normalization_28/beta"
        string_val: "batch_normalization_28/moving_mean"
        string_val: "batch_normalization_28/moving_variance"
        string_val: "conv2d_32/kernel"
        string_val: "batch_normalization_29/gamma"
        string_val: "batch_normalization_29/beta"
        string_val: "batch_normalization_29/moving_mean"
        string_val: "batch_normalization_29/moving_variance"
        string_val: "conv2d_33/kernel"
        string_val: "batch_normalization_30/gamma"
        string_val: "batch_normalization_30/beta"
        string_val: "batch_normalization_30/moving_mean"
        string_val: "batch_normalization_30/moving_variance"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "conv2d/kernel/Momentum"
        string_val: "batch_normalization/gamma/Momentum"
        string_val: "batch_normalization/beta/Momentum"
        string_val: "conv2d_1/kernel/Momentum"
        string_val: "conv2d_2/kernel/Momentum"
        string_val: "batch_normalization_1/gamma/Momentum"
        string_val: "batch_normalization_1/beta/Momentum"
        string_val: "conv2d_3/kernel/Momentum"
        string_val: "batch_normalization_2/gamma/Momentum"
        string_val: "batch_normalization_2/beta/Momentum"
        string_val: "conv2d_4/kernel/Momentum"
        string_val: "batch_normalization_3/gamma/Momentum"
        string_val: "batch_normalization_3/beta/Momentum"
        string_val: "conv2d_5/kernel/Momentum"
        string_val: "batch_normalization_4/gamma/Momentum"
        string_val: "batch_normalization_4/beta/Momentum"
        string_val: "conv2d_6/kernel/Momentum"
        string_val: "batch_normalization_5/gamma/Momentum"
        string_val: "batch_normalization_5/beta/Momentum"
        string_val: "conv2d_7/kernel/Momentum"
        string_val: "batch_normalization_6/gamma/Momentum"
        string_val: "batch_normalization_6/beta/Momentum"
        string_val: "conv2d_8/kernel/Momentum"
        string_val: "batch_normalization_7/gamma/Momentum"
        string_val: "batch_normalization_7/beta/Momentum"
        string_val: "conv2d_9/kernel/Momentum"
        string_val: "batch_normalization_8/gamma/Momentum"
        string_val: "batch_normalization_8/beta/Momentum"
        string_val: "conv2d_10/kernel/Momentum"
        string_val: "batch_normalization_9/gamma/Momentum"
        string_val: "batch_normalization_9/beta/Momentum"
        string_val: "conv2d_11/kernel/Momentum"
        string_val: "batch_normalization_10/gamma/Momentum"
        string_val: "batch_normalization_10/beta/Momentum"
        string_val: "conv2d_12/kernel/Momentum"
        string_val: "conv2d_13/kernel/Momentum"
        string_val: "batch_normalization_11/gamma/Momentum"
        string_val: "batch_normalization_11/beta/Momentum"
        string_val: "conv2d_14/kernel/Momentum"
        string_val: "batch_normalization_12/gamma/Momentum"
        string_val: "batch_normalization_12/beta/Momentum"
        string_val: "conv2d_15/kernel/Momentum"
        string_val: "batch_normalization_13/gamma/Momentum"
        string_val: "batch_normalization_13/beta/Momentum"
        string_val: "conv2d_16/kernel/Momentum"
        string_val: "batch_normalization_14/gamma/Momentum"
        string_val: "batch_normalization_14/beta/Momentum"
        string_val: "conv2d_17/kernel/Momentum"
        string_val: "batch_normalization_15/gamma/Momentum"
        string_val: "batch_normalization_15/beta/Momentum"
        string_val: "conv2d_18/kernel/Momentum"
        string_val: "batch_normalization_16/gamma/Momentum"
        string_val: "batch_normalization_16/beta/Momentum"
        string_val: "conv2d_19/kernel/Momentum"
        string_val: "batch_normalization_17/gamma/Momentum"
        string_val: "batch_normalization_17/beta/Momentum"
        string_val: "conv2d_20/kernel/Momentum"
        string_val: "batch_normalization_18/gamma/Momentum"
        string_val: "batch_normalization_18/beta/Momentum"
        string_val: "conv2d_21/kernel/Momentum"
        string_val: "batch_normalization_19/gamma/Momentum"
        string_val: "batch_normalization_19/beta/Momentum"
        string_val: "conv2d_22/kernel/Momentum"
        string_val: "batch_normalization_20/gamma/Momentum"
        string_val: "batch_normalization_20/beta/Momentum"
        string_val: "conv2d_23/kernel/Momentum"
        string_val: "conv2d_24/kernel/Momentum"
        string_val: "batch_normalization_21/gamma/Momentum"
        string_val: "batch_normalization_21/beta/Momentum"
        string_val: "conv2d_25/kernel/Momentum"
        string_val: "batch_normalization_22/gamma/Momentum"
        string_val: "batch_normalization_22/beta/Momentum"
        string_val: "conv2d_26/kernel/Momentum"
        string_val: "batch_normalization_23/gamma/Momentum"
        string_val: "batch_normalization_23/beta/Momentum"
        string_val: "conv2d_27/kernel/Momentum"
        string_val: "batch_normalization_24/gamma/Momentum"
        string_val: "batch_normalization_24/beta/Momentum"
        string_val: "conv2d_28/kernel/Momentum"
        string_val: "batch_normalization_25/gamma/Momentum"
        string_val: "batch_normalization_25/beta/Momentum"
        string_val: "conv2d_29/kernel/Momentum"
        string_val: "batch_normalization_26/gamma/Momentum"
        string_val: "batch_normalization_26/beta/Momentum"
        string_val: "conv2d_30/kernel/Momentum"
        string_val: "batch_normalization_27/gamma/Momentum"
        string_val: "batch_normalization_27/beta/Momentum"
        string_val: "conv2d_31/kernel/Momentum"
        string_val: "batch_normalization_28/gamma/Momentum"
        string_val: "batch_normalization_28/beta/Momentum"
        string_val: "conv2d_32/kernel/Momentum"
        string_val: "batch_normalization_29/gamma/Momentum"
        string_val: "batch_normalization_29/beta/Momentum"
        string_val: "conv2d_33/kernel/Momentum"
        string_val: "batch_normalization_30/gamma/Momentum"
        string_val: "batch_normalization_30/beta/Momentum"
        string_val: "dense/kernel/Momentum"
        string_val: "dense/bias/Momentum"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv2d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "batch_normalization/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "batch_normalization/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "batch_normalization/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "batch_normalization/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv2d_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv2d_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv2d_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv2d_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv2d_14/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv2d_15/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "conv2d_16/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "conv2d_17/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv2d_18/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv2d_19/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv2d_20/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv2d_21/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv2d_22/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv2d_23/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv2d_24/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv2d_25/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv2d_26/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "conv2d_27/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "conv2d_28/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv2d_29/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "conv2d_30/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv2d_31/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv2d_32/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "conv2d_33/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "conv2d/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "batch_normalization/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "batch_normalization/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "conv2d_1/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv2d_2/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "batch_normalization_1/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv2d_3/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "batch_normalization_2/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "conv2d_4/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "batch_normalization_3/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv2d_5/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "batch_normalization_4/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "conv2d_6/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "batch_normalization_5/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "conv2d_7/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "batch_normalization_6/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv2d_8/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "batch_normalization_7/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "conv2d_9/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "batch_normalization_8/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv2d_10/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "batch_normalization_9/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv2d_11/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "batch_normalization_10/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "conv2d_12/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "conv2d_13/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "batch_normalization_11/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv2d_14/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "batch_normalization_12/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "conv2d_15/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "batch_normalization_13/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv2d_16/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "batch_normalization_14/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv2d_17/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "batch_normalization_15/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "conv2d_18/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "batch_normalization_16/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv2d_19/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "batch_normalization_17/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "conv2d_20/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "batch_normalization_18/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "conv2d_21/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "batch_normalization_19/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv2d_22/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "batch_normalization_20/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "conv2d_23/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "conv2d_24/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "batch_normalization_21/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "conv2d_25/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "batch_normalization_22/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "conv2d_26/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "batch_normalization_23/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "conv2d_27/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "batch_normalization_24/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "conv2d_28/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "batch_normalization_25/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "conv2d_29/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "batch_normalization_26/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "conv2d_30/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "batch_normalization_27/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "conv2d_31/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "batch_normalization_28/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "conv2d_32/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "batch_normalization_29/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "conv2d_33/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/gamma/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "batch_normalization_30/beta/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "dense/kernel/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "dense/bias/Momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  input: "report_uninitialized_variables_1/IsVariableInitialized_86"
  input: "report_uninitialized_variables_1/IsVariableInitialized_87"
  input: "report_uninitialized_variables_1/IsVariableInitialized_88"
  input: "report_uninitialized_variables_1/IsVariableInitialized_89"
  input: "report_uninitialized_variables_1/IsVariableInitialized_90"
  input: "report_uninitialized_variables_1/IsVariableInitialized_91"
  input: "report_uninitialized_variables_1/IsVariableInitialized_92"
  input: "report_uninitialized_variables_1/IsVariableInitialized_93"
  input: "report_uninitialized_variables_1/IsVariableInitialized_94"
  input: "report_uninitialized_variables_1/IsVariableInitialized_95"
  input: "report_uninitialized_variables_1/IsVariableInitialized_96"
  input: "report_uninitialized_variables_1/IsVariableInitialized_97"
  input: "report_uninitialized_variables_1/IsVariableInitialized_98"
  input: "report_uninitialized_variables_1/IsVariableInitialized_99"
  input: "report_uninitialized_variables_1/IsVariableInitialized_100"
  input: "report_uninitialized_variables_1/IsVariableInitialized_101"
  input: "report_uninitialized_variables_1/IsVariableInitialized_102"
  input: "report_uninitialized_variables_1/IsVariableInitialized_103"
  input: "report_uninitialized_variables_1/IsVariableInitialized_104"
  input: "report_uninitialized_variables_1/IsVariableInitialized_105"
  input: "report_uninitialized_variables_1/IsVariableInitialized_106"
  input: "report_uninitialized_variables_1/IsVariableInitialized_107"
  input: "report_uninitialized_variables_1/IsVariableInitialized_108"
  input: "report_uninitialized_variables_1/IsVariableInitialized_109"
  input: "report_uninitialized_variables_1/IsVariableInitialized_110"
  input: "report_uninitialized_variables_1/IsVariableInitialized_111"
  input: "report_uninitialized_variables_1/IsVariableInitialized_112"
  input: "report_uninitialized_variables_1/IsVariableInitialized_113"
  input: "report_uninitialized_variables_1/IsVariableInitialized_114"
  input: "report_uninitialized_variables_1/IsVariableInitialized_115"
  input: "report_uninitialized_variables_1/IsVariableInitialized_116"
  input: "report_uninitialized_variables_1/IsVariableInitialized_117"
  input: "report_uninitialized_variables_1/IsVariableInitialized_118"
  input: "report_uninitialized_variables_1/IsVariableInitialized_119"
  input: "report_uninitialized_variables_1/IsVariableInitialized_120"
  input: "report_uninitialized_variables_1/IsVariableInitialized_121"
  input: "report_uninitialized_variables_1/IsVariableInitialized_122"
  input: "report_uninitialized_variables_1/IsVariableInitialized_123"
  input: "report_uninitialized_variables_1/IsVariableInitialized_124"
  input: "report_uninitialized_variables_1/IsVariableInitialized_125"
  input: "report_uninitialized_variables_1/IsVariableInitialized_126"
  input: "report_uninitialized_variables_1/IsVariableInitialized_127"
  input: "report_uninitialized_variables_1/IsVariableInitialized_128"
  input: "report_uninitialized_variables_1/IsVariableInitialized_129"
  input: "report_uninitialized_variables_1/IsVariableInitialized_130"
  input: "report_uninitialized_variables_1/IsVariableInitialized_131"
  input: "report_uninitialized_variables_1/IsVariableInitialized_132"
  input: "report_uninitialized_variables_1/IsVariableInitialized_133"
  input: "report_uninitialized_variables_1/IsVariableInitialized_134"
  input: "report_uninitialized_variables_1/IsVariableInitialized_135"
  input: "report_uninitialized_variables_1/IsVariableInitialized_136"
  input: "report_uninitialized_variables_1/IsVariableInitialized_137"
  input: "report_uninitialized_variables_1/IsVariableInitialized_138"
  input: "report_uninitialized_variables_1/IsVariableInitialized_139"
  input: "report_uninitialized_variables_1/IsVariableInitialized_140"
  input: "report_uninitialized_variables_1/IsVariableInitialized_141"
  input: "report_uninitialized_variables_1/IsVariableInitialized_142"
  input: "report_uninitialized_variables_1/IsVariableInitialized_143"
  input: "report_uninitialized_variables_1/IsVariableInitialized_144"
  input: "report_uninitialized_variables_1/IsVariableInitialized_145"
  input: "report_uninitialized_variables_1/IsVariableInitialized_146"
  input: "report_uninitialized_variables_1/IsVariableInitialized_147"
  input: "report_uninitialized_variables_1/IsVariableInitialized_148"
  input: "report_uninitialized_variables_1/IsVariableInitialized_149"
  input: "report_uninitialized_variables_1/IsVariableInitialized_150"
  input: "report_uninitialized_variables_1/IsVariableInitialized_151"
  input: "report_uninitialized_variables_1/IsVariableInitialized_152"
  input: "report_uninitialized_variables_1/IsVariableInitialized_153"
  input: "report_uninitialized_variables_1/IsVariableInitialized_154"
  input: "report_uninitialized_variables_1/IsVariableInitialized_155"
  input: "report_uninitialized_variables_1/IsVariableInitialized_156"
  input: "report_uninitialized_variables_1/IsVariableInitialized_157"
  input: "report_uninitialized_variables_1/IsVariableInitialized_158"
  input: "report_uninitialized_variables_1/IsVariableInitialized_159"
  input: "report_uninitialized_variables_1/IsVariableInitialized_160"
  input: "report_uninitialized_variables_1/IsVariableInitialized_161"
  input: "report_uninitialized_variables_1/IsVariableInitialized_162"
  input: "report_uninitialized_variables_1/IsVariableInitialized_163"
  input: "report_uninitialized_variables_1/IsVariableInitialized_164"
  input: "report_uninitialized_variables_1/IsVariableInitialized_165"
  input: "report_uninitialized_variables_1/IsVariableInitialized_166"
  input: "report_uninitialized_variables_1/IsVariableInitialized_167"
  input: "report_uninitialized_variables_1/IsVariableInitialized_168"
  input: "report_uninitialized_variables_1/IsVariableInitialized_169"
  input: "report_uninitialized_variables_1/IsVariableInitialized_170"
  input: "report_uninitialized_variables_1/IsVariableInitialized_171"
  input: "report_uninitialized_variables_1/IsVariableInitialized_172"
  input: "report_uninitialized_variables_1/IsVariableInitialized_173"
  input: "report_uninitialized_variables_1/IsVariableInitialized_174"
  input: "report_uninitialized_variables_1/IsVariableInitialized_175"
  input: "report_uninitialized_variables_1/IsVariableInitialized_176"
  input: "report_uninitialized_variables_1/IsVariableInitialized_177"
  input: "report_uninitialized_variables_1/IsVariableInitialized_178"
  input: "report_uninitialized_variables_1/IsVariableInitialized_179"
  input: "report_uninitialized_variables_1/IsVariableInitialized_180"
  input: "report_uninitialized_variables_1/IsVariableInitialized_181"
  input: "report_uninitialized_variables_1/IsVariableInitialized_182"
  input: "report_uninitialized_variables_1/IsVariableInitialized_183"
  input: "report_uninitialized_variables_1/IsVariableInitialized_184"
  input: "report_uninitialized_variables_1/IsVariableInitialized_185"
  input: "report_uninitialized_variables_1/IsVariableInitialized_186"
  input: "report_uninitialized_variables_1/IsVariableInitialized_187"
  input: "report_uninitialized_variables_1/IsVariableInitialized_188"
  input: "report_uninitialized_variables_1/IsVariableInitialized_189"
  input: "report_uninitialized_variables_1/IsVariableInitialized_190"
  input: "report_uninitialized_variables_1/IsVariableInitialized_191"
  input: "report_uninitialized_variables_1/IsVariableInitialized_192"
  input: "report_uninitialized_variables_1/IsVariableInitialized_193"
  input: "report_uninitialized_variables_1/IsVariableInitialized_194"
  input: "report_uninitialized_variables_1/IsVariableInitialized_195"
  input: "report_uninitialized_variables_1/IsVariableInitialized_196"
  input: "report_uninitialized_variables_1/IsVariableInitialized_197"
  input: "report_uninitialized_variables_1/IsVariableInitialized_198"
  input: "report_uninitialized_variables_1/IsVariableInitialized_199"
  input: "report_uninitialized_variables_1/IsVariableInitialized_200"
  input: "report_uninitialized_variables_1/IsVariableInitialized_201"
  input: "report_uninitialized_variables_1/IsVariableInitialized_202"
  input: "report_uninitialized_variables_1/IsVariableInitialized_203"
  input: "report_uninitialized_variables_1/IsVariableInitialized_204"
  input: "report_uninitialized_variables_1/IsVariableInitialized_205"
  input: "report_uninitialized_variables_1/IsVariableInitialized_206"
  input: "report_uninitialized_variables_1/IsVariableInitialized_207"
  input: "report_uninitialized_variables_1/IsVariableInitialized_208"
  input: "report_uninitialized_variables_1/IsVariableInitialized_209"
  input: "report_uninitialized_variables_1/IsVariableInitialized_210"
  input: "report_uninitialized_variables_1/IsVariableInitialized_211"
  input: "report_uninitialized_variables_1/IsVariableInitialized_212"
  input: "report_uninitialized_variables_1/IsVariableInitialized_213"
  input: "report_uninitialized_variables_1/IsVariableInitialized_214"
  input: "report_uninitialized_variables_1/IsVariableInitialized_215"
  input: "report_uninitialized_variables_1/IsVariableInitialized_216"
  input: "report_uninitialized_variables_1/IsVariableInitialized_217"
  input: "report_uninitialized_variables_1/IsVariableInitialized_218"
  input: "report_uninitialized_variables_1/IsVariableInitialized_219"
  input: "report_uninitialized_variables_1/IsVariableInitialized_220"
  input: "report_uninitialized_variables_1/IsVariableInitialized_221"
  input: "report_uninitialized_variables_1/IsVariableInitialized_222"
  input: "report_uninitialized_variables_1/IsVariableInitialized_223"
  input: "report_uninitialized_variables_1/IsVariableInitialized_224"
  input: "report_uninitialized_variables_1/IsVariableInitialized_225"
  input: "report_uninitialized_variables_1/IsVariableInitialized_226"
  input: "report_uninitialized_variables_1/IsVariableInitialized_227"
  input: "report_uninitialized_variables_1/IsVariableInitialized_228"
  input: "report_uninitialized_variables_1/IsVariableInitialized_229"
  input: "report_uninitialized_variables_1/IsVariableInitialized_230"
  input: "report_uninitialized_variables_1/IsVariableInitialized_231"
  input: "report_uninitialized_variables_1/IsVariableInitialized_232"
  input: "report_uninitialized_variables_1/IsVariableInitialized_233"
  input: "report_uninitialized_variables_1/IsVariableInitialized_234"
  input: "report_uninitialized_variables_1/IsVariableInitialized_235"
  input: "report_uninitialized_variables_1/IsVariableInitialized_236"
  input: "report_uninitialized_variables_1/IsVariableInitialized_237"
  input: "report_uninitialized_variables_1/IsVariableInitialized_238"
  input: "report_uninitialized_variables_1/IsVariableInitialized_239"
  input: "report_uninitialized_variables_1/IsVariableInitialized_240"
  input: "report_uninitialized_variables_1/IsVariableInitialized_241"
  input: "report_uninitialized_variables_1/IsVariableInitialized_242"
  input: "report_uninitialized_variables_1/IsVariableInitialized_243"
  input: "report_uninitialized_variables_1/IsVariableInitialized_244"
  input: "report_uninitialized_variables_1/IsVariableInitialized_245"
  input: "report_uninitialized_variables_1/IsVariableInitialized_246"
  input: "report_uninitialized_variables_1/IsVariableInitialized_247"
  input: "report_uninitialized_variables_1/IsVariableInitialized_248"
  input: "report_uninitialized_variables_1/IsVariableInitialized_249"
  input: "report_uninitialized_variables_1/IsVariableInitialized_250"
  input: "report_uninitialized_variables_1/IsVariableInitialized_251"
  input: "report_uninitialized_variables_1/IsVariableInitialized_252"
  input: "report_uninitialized_variables_1/IsVariableInitialized_253"
  input: "report_uninitialized_variables_1/IsVariableInitialized_254"
  input: "report_uninitialized_variables_1/IsVariableInitialized_255"
  input: "report_uninitialized_variables_1/IsVariableInitialized_256"
  input: "report_uninitialized_variables_1/IsVariableInitialized_257"
  input: "report_uninitialized_variables_1/IsVariableInitialized_258"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 259
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: "global_step"
        string_val: "conv2d/kernel"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_2/kernel"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "conv2d_3/kernel"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "conv2d_4/kernel"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "conv2d_5/kernel"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "conv2d_6/kernel"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "conv2d_7/kernel"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "conv2d_8/kernel"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "conv2d_9/kernel"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "conv2d_10/kernel"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "conv2d_11/kernel"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/kernel"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "conv2d_14/kernel"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "conv2d_15/kernel"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "conv2d_16/kernel"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "conv2d_17/kernel"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "conv2d_18/kernel"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "conv2d_19/kernel"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "conv2d_20/kernel"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "conv2d_21/kernel"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "conv2d_22/kernel"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_24/kernel"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "conv2d_25/kernel"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "conv2d_26/kernel"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "conv2d_27/kernel"
        string_val: "batch_normalization_24/gamma"
        string_val: "batch_normalization_24/beta"
        string_val: "batch_normalization_24/moving_mean"
        string_val: "batch_normalization_24/moving_variance"
        string_val: "conv2d_28/kernel"
        string_val: "batch_normalization_25/gamma"
        string_val: "batch_normalization_25/beta"
        string_val: "batch_normalization_25/moving_mean"
        string_val: "batch_normalization_25/moving_variance"
        string_val: "conv2d_29/kernel"
        string_val: "batch_normalization_26/gamma"
        string_val: "batch_normalization_26/beta"
        string_val: "batch_normalization_26/moving_mean"
        string_val: "batch_normalization_26/moving_variance"
        string_val: "conv2d_30/kernel"
        string_val: "batch_normalization_27/gamma"
        string_val: "batch_normalization_27/beta"
        string_val: "batch_normalization_27/moving_mean"
        string_val: "batch_normalization_27/moving_variance"
        string_val: "conv2d_31/kernel"
        string_val: "batch_normalization_28/gamma"
        string_val: "batch_normalization_28/beta"
        string_val: "batch_normalization_28/moving_mean"
        string_val: "batch_normalization_28/moving_variance"
        string_val: "conv2d_32/kernel"
        string_val: "batch_normalization_29/gamma"
        string_val: "batch_normalization_29/beta"
        string_val: "batch_normalization_29/moving_mean"
        string_val: "batch_normalization_29/moving_variance"
        string_val: "conv2d_33/kernel"
        string_val: "batch_normalization_30/gamma"
        string_val: "batch_normalization_30/beta"
        string_val: "batch_normalization_30/moving_mean"
        string_val: "batch_normalization_30/moving_variance"
        string_val: "dense/kernel"
        string_val: "dense/bias"
        string_val: "conv2d/kernel/Momentum"
        string_val: "batch_normalization/gamma/Momentum"
        string_val: "batch_normalization/beta/Momentum"
        string_val: "conv2d_1/kernel/Momentum"
        string_val: "conv2d_2/kernel/Momentum"
        string_val: "batch_normalization_1/gamma/Momentum"
        string_val: "batch_normalization_1/beta/Momentum"
        string_val: "conv2d_3/kernel/Momentum"
        string_val: "batch_normalization_2/gamma/Momentum"
        string_val: "batch_normalization_2/beta/Momentum"
        string_val: "conv2d_4/kernel/Momentum"
        string_val: "batch_normalization_3/gamma/Momentum"
        string_val: "batch_normalization_3/beta/Momentum"
        string_val: "conv2d_5/kernel/Momentum"
        string_val: "batch_normalization_4/gamma/Momentum"
        string_val: "batch_normalization_4/beta/Momentum"
        string_val: "conv2d_6/kernel/Momentum"
        string_val: "batch_normalization_5/gamma/Momentum"
        string_val: "batch_normalization_5/beta/Momentum"
        string_val: "conv2d_7/kernel/Momentum"
        string_val: "batch_normalization_6/gamma/Momentum"
        string_val: "batch_normalization_6/beta/Momentum"
        string_val: "conv2d_8/kernel/Momentum"
        string_val: "batch_normalization_7/gamma/Momentum"
        string_val: "batch_normalization_7/beta/Momentum"
        string_val: "conv2d_9/kernel/Momentum"
        string_val: "batch_normalization_8/gamma/Momentum"
        string_val: "batch_normalization_8/beta/Momentum"
        string_val: "conv2d_10/kernel/Momentum"
        string_val: "batch_normalization_9/gamma/Momentum"
        string_val: "batch_normalization_9/beta/Momentum"
        string_val: "conv2d_11/kernel/Momentum"
        string_val: "batch_normalization_10/gamma/Momentum"
        string_val: "batch_normalization_10/beta/Momentum"
        string_val: "conv2d_12/kernel/Momentum"
        string_val: "conv2d_13/kernel/Momentum"
        string_val: "batch_normalization_11/gamma/Momentum"
        string_val: "batch_normalization_11/beta/Momentum"
        string_val: "conv2d_14/kernel/Momentum"
        string_val: "batch_normalization_12/gamma/Momentum"
        string_val: "batch_normalization_12/beta/Momentum"
        string_val: "conv2d_15/kernel/Momentum"
        string_val: "batch_normalization_13/gamma/Momentum"
        string_val: "batch_normalization_13/beta/Momentum"
        string_val: "conv2d_16/kernel/Momentum"
        string_val: "batch_normalization_14/gamma/Momentum"
        string_val: "batch_normalization_14/beta/Momentum"
        string_val: "conv2d_17/kernel/Momentum"
        string_val: "batch_normalization_15/gamma/Momentum"
        string_val: "batch_normalization_15/beta/Momentum"
        string_val: "conv2d_18/kernel/Momentum"
        string_val: "batch_normalization_16/gamma/Momentum"
        string_val: "batch_normalization_16/beta/Momentum"
        string_val: "conv2d_19/kernel/Momentum"
        string_val: "batch_normalization_17/gamma/Momentum"
        string_val: "batch_normalization_17/beta/Momentum"
        string_val: "conv2d_20/kernel/Momentum"
        string_val: "batch_normalization_18/gamma/Momentum"
        string_val: "batch_normalization_18/beta/Momentum"
        string_val: "conv2d_21/kernel/Momentum"
        string_val: "batch_normalization_19/gamma/Momentum"
        string_val: "batch_normalization_19/beta/Momentum"
        string_val: "conv2d_22/kernel/Momentum"
        string_val: "batch_normalization_20/gamma/Momentum"
        string_val: "batch_normalization_20/beta/Momentum"
        string_val: "conv2d_23/kernel/Momentum"
        string_val: "conv2d_24/kernel/Momentum"
        string_val: "batch_normalization_21/gamma/Momentum"
        string_val: "batch_normalization_21/beta/Momentum"
        string_val: "conv2d_25/kernel/Momentum"
        string_val: "batch_normalization_22/gamma/Momentum"
        string_val: "batch_normalization_22/beta/Momentum"
        string_val: "conv2d_26/kernel/Momentum"
        string_val: "batch_normalization_23/gamma/Momentum"
        string_val: "batch_normalization_23/beta/Momentum"
        string_val: "conv2d_27/kernel/Momentum"
        string_val: "batch_normalization_24/gamma/Momentum"
        string_val: "batch_normalization_24/beta/Momentum"
        string_val: "conv2d_28/kernel/Momentum"
        string_val: "batch_normalization_25/gamma/Momentum"
        string_val: "batch_normalization_25/beta/Momentum"
        string_val: "conv2d_29/kernel/Momentum"
        string_val: "batch_normalization_26/gamma/Momentum"
        string_val: "batch_normalization_26/beta/Momentum"
        string_val: "conv2d_30/kernel/Momentum"
        string_val: "batch_normalization_27/gamma/Momentum"
        string_val: "batch_normalization_27/beta/Momentum"
        string_val: "conv2d_31/kernel/Momentum"
        string_val: "batch_normalization_28/gamma/Momentum"
        string_val: "batch_normalization_28/beta/Momentum"
        string_val: "conv2d_32/kernel/Momentum"
        string_val: "batch_normalization_29/gamma/Momentum"
        string_val: "batch_normalization_29/beta/Momentum"
        string_val: "conv2d_33/kernel/Momentum"
        string_val: "batch_normalization_30/gamma/Momentum"
        string_val: "batch_normalization_30/beta/Momentum"
        string_val: "dense/kernel/Momentum"
        string_val: "dense/bias/Momentum"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 259
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "images"
  input: "cross_entropy_1"
  input: "learning_rate_1"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_f445a71fd76f4e0bbd899780c9bb29aa/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/Momentum"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/Momentum"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/Momentum"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/Momentum"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/beta/Momentum"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/gamma/Momentum"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/beta/Momentum"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/gamma/Momentum"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/beta/Momentum"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/gamma/Momentum"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/beta/Momentum"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/gamma/Momentum"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/beta/Momentum"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/gamma/Momentum"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/beta/Momentum"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/gamma/Momentum"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/beta/Momentum"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/gamma/Momentum"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/beta/Momentum"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/gamma/Momentum"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/beta/Momentum"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/gamma/Momentum"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/beta/Momentum"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/gamma/Momentum"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/Momentum"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/Momentum"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/beta/Momentum"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/gamma/Momentum"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/beta/Momentum"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/gamma/Momentum"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/beta/Momentum"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/gamma/Momentum"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/beta/Momentum"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/gamma/Momentum"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "batch_normalization_24/beta"
        string_val: "batch_normalization_24/beta/Momentum"
        string_val: "batch_normalization_24/gamma"
        string_val: "batch_normalization_24/gamma/Momentum"
        string_val: "batch_normalization_24/moving_mean"
        string_val: "batch_normalization_24/moving_variance"
        string_val: "batch_normalization_25/beta"
        string_val: "batch_normalization_25/beta/Momentum"
        string_val: "batch_normalization_25/gamma"
        string_val: "batch_normalization_25/gamma/Momentum"
        string_val: "batch_normalization_25/moving_mean"
        string_val: "batch_normalization_25/moving_variance"
        string_val: "batch_normalization_26/beta"
        string_val: "batch_normalization_26/beta/Momentum"
        string_val: "batch_normalization_26/gamma"
        string_val: "batch_normalization_26/gamma/Momentum"
        string_val: "batch_normalization_26/moving_mean"
        string_val: "batch_normalization_26/moving_variance"
        string_val: "batch_normalization_27/beta"
        string_val: "batch_normalization_27/beta/Momentum"
        string_val: "batch_normalization_27/gamma"
        string_val: "batch_normalization_27/gamma/Momentum"
        string_val: "batch_normalization_27/moving_mean"
        string_val: "batch_normalization_27/moving_variance"
        string_val: "batch_normalization_28/beta"
        string_val: "batch_normalization_28/beta/Momentum"
        string_val: "batch_normalization_28/gamma"
        string_val: "batch_normalization_28/gamma/Momentum"
        string_val: "batch_normalization_28/moving_mean"
        string_val: "batch_normalization_28/moving_variance"
        string_val: "batch_normalization_29/beta"
        string_val: "batch_normalization_29/beta/Momentum"
        string_val: "batch_normalization_29/gamma"
        string_val: "batch_normalization_29/gamma/Momentum"
        string_val: "batch_normalization_29/moving_mean"
        string_val: "batch_normalization_29/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/Momentum"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/Momentum"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_30/beta"
        string_val: "batch_normalization_30/beta/Momentum"
        string_val: "batch_normalization_30/gamma"
        string_val: "batch_normalization_30/gamma/Momentum"
        string_val: "batch_normalization_30/moving_mean"
        string_val: "batch_normalization_30/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/Momentum"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/Momentum"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/beta/Momentum"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/gamma/Momentum"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/beta/Momentum"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/gamma/Momentum"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/beta/Momentum"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/gamma/Momentum"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/beta/Momentum"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/gamma/Momentum"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/beta/Momentum"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/gamma/Momentum"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "conv2d/kernel"
        string_val: "conv2d/kernel/Momentum"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_1/kernel/Momentum"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_10/kernel/Momentum"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_11/kernel/Momentum"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_12/kernel/Momentum"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_13/kernel/Momentum"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_14/kernel/Momentum"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_15/kernel/Momentum"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_16/kernel/Momentum"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_17/kernel/Momentum"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_18/kernel/Momentum"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_19/kernel/Momentum"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_2/kernel/Momentum"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_20/kernel/Momentum"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_21/kernel/Momentum"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_22/kernel/Momentum"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_23/kernel/Momentum"
        string_val: "conv2d_24/kernel"
        string_val: "conv2d_24/kernel/Momentum"
        string_val: "conv2d_25/kernel"
        string_val: "conv2d_25/kernel/Momentum"
        string_val: "conv2d_26/kernel"
        string_val: "conv2d_26/kernel/Momentum"
        string_val: "conv2d_27/kernel"
        string_val: "conv2d_27/kernel/Momentum"
        string_val: "conv2d_28/kernel"
        string_val: "conv2d_28/kernel/Momentum"
        string_val: "conv2d_29/kernel"
        string_val: "conv2d_29/kernel/Momentum"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_3/kernel/Momentum"
        string_val: "conv2d_30/kernel"
        string_val: "conv2d_30/kernel/Momentum"
        string_val: "conv2d_31/kernel"
        string_val: "conv2d_31/kernel/Momentum"
        string_val: "conv2d_32/kernel"
        string_val: "conv2d_32/kernel/Momentum"
        string_val: "conv2d_33/kernel"
        string_val: "conv2d_33/kernel/Momentum"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_4/kernel/Momentum"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_5/kernel/Momentum"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_6/kernel/Momentum"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_7/kernel/Momentum"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_8/kernel/Momentum"
        string_val: "conv2d_9/kernel"
        string_val: "conv2d_9/kernel/Momentum"
        string_val: "dense/bias"
        string_val: "dense/bias/Momentum"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Momentum"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "batch_normalization/beta"
  input: "batch_normalization/beta/Momentum"
  input: "batch_normalization/gamma"
  input: "batch_normalization/gamma/Momentum"
  input: "batch_normalization/moving_mean"
  input: "batch_normalization/moving_variance"
  input: "batch_normalization_1/beta"
  input: "batch_normalization_1/beta/Momentum"
  input: "batch_normalization_1/gamma"
  input: "batch_normalization_1/gamma/Momentum"
  input: "batch_normalization_1/moving_mean"
  input: "batch_normalization_1/moving_variance"
  input: "batch_normalization_10/beta"
  input: "batch_normalization_10/beta/Momentum"
  input: "batch_normalization_10/gamma"
  input: "batch_normalization_10/gamma/Momentum"
  input: "batch_normalization_10/moving_mean"
  input: "batch_normalization_10/moving_variance"
  input: "batch_normalization_11/beta"
  input: "batch_normalization_11/beta/Momentum"
  input: "batch_normalization_11/gamma"
  input: "batch_normalization_11/gamma/Momentum"
  input: "batch_normalization_11/moving_mean"
  input: "batch_normalization_11/moving_variance"
  input: "batch_normalization_12/beta"
  input: "batch_normalization_12/beta/Momentum"
  input: "batch_normalization_12/gamma"
  input: "batch_normalization_12/gamma/Momentum"
  input: "batch_normalization_12/moving_mean"
  input: "batch_normalization_12/moving_variance"
  input: "batch_normalization_13/beta"
  input: "batch_normalization_13/beta/Momentum"
  input: "batch_normalization_13/gamma"
  input: "batch_normalization_13/gamma/Momentum"
  input: "batch_normalization_13/moving_mean"
  input: "batch_normalization_13/moving_variance"
  input: "batch_normalization_14/beta"
  input: "batch_normalization_14/beta/Momentum"
  input: "batch_normalization_14/gamma"
  input: "batch_normalization_14/gamma/Momentum"
  input: "batch_normalization_14/moving_mean"
  input: "batch_normalization_14/moving_variance"
  input: "batch_normalization_15/beta"
  input: "batch_normalization_15/beta/Momentum"
  input: "batch_normalization_15/gamma"
  input: "batch_normalization_15/gamma/Momentum"
  input: "batch_normalization_15/moving_mean"
  input: "batch_normalization_15/moving_variance"
  input: "batch_normalization_16/beta"
  input: "batch_normalization_16/beta/Momentum"
  input: "batch_normalization_16/gamma"
  input: "batch_normalization_16/gamma/Momentum"
  input: "batch_normalization_16/moving_mean"
  input: "batch_normalization_16/moving_variance"
  input: "batch_normalization_17/beta"
  input: "batch_normalization_17/beta/Momentum"
  input: "batch_normalization_17/gamma"
  input: "batch_normalization_17/gamma/Momentum"
  input: "batch_normalization_17/moving_mean"
  input: "batch_normalization_17/moving_variance"
  input: "batch_normalization_18/beta"
  input: "batch_normalization_18/beta/Momentum"
  input: "batch_normalization_18/gamma"
  input: "batch_normalization_18/gamma/Momentum"
  input: "batch_normalization_18/moving_mean"
  input: "batch_normalization_18/moving_variance"
  input: "batch_normalization_19/beta"
  input: "batch_normalization_19/beta/Momentum"
  input: "batch_normalization_19/gamma"
  input: "batch_normalization_19/gamma/Momentum"
  input: "batch_normalization_19/moving_mean"
  input: "batch_normalization_19/moving_variance"
  input: "batch_normalization_2/beta"
  input: "batch_normalization_2/beta/Momentum"
  input: "batch_normalization_2/gamma"
  input: "batch_normalization_2/gamma/Momentum"
  input: "batch_normalization_2/moving_mean"
  input: "batch_normalization_2/moving_variance"
  input: "batch_normalization_20/beta"
  input: "batch_normalization_20/beta/Momentum"
  input: "batch_normalization_20/gamma"
  input: "batch_normalization_20/gamma/Momentum"
  input: "batch_normalization_20/moving_mean"
  input: "batch_normalization_20/moving_variance"
  input: "batch_normalization_21/beta"
  input: "batch_normalization_21/beta/Momentum"
  input: "batch_normalization_21/gamma"
  input: "batch_normalization_21/gamma/Momentum"
  input: "batch_normalization_21/moving_mean"
  input: "batch_normalization_21/moving_variance"
  input: "batch_normalization_22/beta"
  input: "batch_normalization_22/beta/Momentum"
  input: "batch_normalization_22/gamma"
  input: "batch_normalization_22/gamma/Momentum"
  input: "batch_normalization_22/moving_mean"
  input: "batch_normalization_22/moving_variance"
  input: "batch_normalization_23/beta"
  input: "batch_normalization_23/beta/Momentum"
  input: "batch_normalization_23/gamma"
  input: "batch_normalization_23/gamma/Momentum"
  input: "batch_normalization_23/moving_mean"
  input: "batch_normalization_23/moving_variance"
  input: "batch_normalization_24/beta"
  input: "batch_normalization_24/beta/Momentum"
  input: "batch_normalization_24/gamma"
  input: "batch_normalization_24/gamma/Momentum"
  input: "batch_normalization_24/moving_mean"
  input: "batch_normalization_24/moving_variance"
  input: "batch_normalization_25/beta"
  input: "batch_normalization_25/beta/Momentum"
  input: "batch_normalization_25/gamma"
  input: "batch_normalization_25/gamma/Momentum"
  input: "batch_normalization_25/moving_mean"
  input: "batch_normalization_25/moving_variance"
  input: "batch_normalization_26/beta"
  input: "batch_normalization_26/beta/Momentum"
  input: "batch_normalization_26/gamma"
  input: "batch_normalization_26/gamma/Momentum"
  input: "batch_normalization_26/moving_mean"
  input: "batch_normalization_26/moving_variance"
  input: "batch_normalization_27/beta"
  input: "batch_normalization_27/beta/Momentum"
  input: "batch_normalization_27/gamma"
  input: "batch_normalization_27/gamma/Momentum"
  input: "batch_normalization_27/moving_mean"
  input: "batch_normalization_27/moving_variance"
  input: "batch_normalization_28/beta"
  input: "batch_normalization_28/beta/Momentum"
  input: "batch_normalization_28/gamma"
  input: "batch_normalization_28/gamma/Momentum"
  input: "batch_normalization_28/moving_mean"
  input: "batch_normalization_28/moving_variance"
  input: "batch_normalization_29/beta"
  input: "batch_normalization_29/beta/Momentum"
  input: "batch_normalization_29/gamma"
  input: "batch_normalization_29/gamma/Momentum"
  input: "batch_normalization_29/moving_mean"
  input: "batch_normalization_29/moving_variance"
  input: "batch_normalization_3/beta"
  input: "batch_normalization_3/beta/Momentum"
  input: "batch_normalization_3/gamma"
  input: "batch_normalization_3/gamma/Momentum"
  input: "batch_normalization_3/moving_mean"
  input: "batch_normalization_3/moving_variance"
  input: "batch_normalization_30/beta"
  input: "batch_normalization_30/beta/Momentum"
  input: "batch_normalization_30/gamma"
  input: "batch_normalization_30/gamma/Momentum"
  input: "batch_normalization_30/moving_mean"
  input: "batch_normalization_30/moving_variance"
  input: "batch_normalization_4/beta"
  input: "batch_normalization_4/beta/Momentum"
  input: "batch_normalization_4/gamma"
  input: "batch_normalization_4/gamma/Momentum"
  input: "batch_normalization_4/moving_mean"
  input: "batch_normalization_4/moving_variance"
  input: "batch_normalization_5/beta"
  input: "batch_normalization_5/beta/Momentum"
  input: "batch_normalization_5/gamma"
  input: "batch_normalization_5/gamma/Momentum"
  input: "batch_normalization_5/moving_mean"
  input: "batch_normalization_5/moving_variance"
  input: "batch_normalization_6/beta"
  input: "batch_normalization_6/beta/Momentum"
  input: "batch_normalization_6/gamma"
  input: "batch_normalization_6/gamma/Momentum"
  input: "batch_normalization_6/moving_mean"
  input: "batch_normalization_6/moving_variance"
  input: "batch_normalization_7/beta"
  input: "batch_normalization_7/beta/Momentum"
  input: "batch_normalization_7/gamma"
  input: "batch_normalization_7/gamma/Momentum"
  input: "batch_normalization_7/moving_mean"
  input: "batch_normalization_7/moving_variance"
  input: "batch_normalization_8/beta"
  input: "batch_normalization_8/beta/Momentum"
  input: "batch_normalization_8/gamma"
  input: "batch_normalization_8/gamma/Momentum"
  input: "batch_normalization_8/moving_mean"
  input: "batch_normalization_8/moving_variance"
  input: "batch_normalization_9/beta"
  input: "batch_normalization_9/beta/Momentum"
  input: "batch_normalization_9/gamma"
  input: "batch_normalization_9/gamma/Momentum"
  input: "batch_normalization_9/moving_mean"
  input: "batch_normalization_9/moving_variance"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Momentum"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Momentum"
  input: "conv2d_10/kernel"
  input: "conv2d_10/kernel/Momentum"
  input: "conv2d_11/kernel"
  input: "conv2d_11/kernel/Momentum"
  input: "conv2d_12/kernel"
  input: "conv2d_12/kernel/Momentum"
  input: "conv2d_13/kernel"
  input: "conv2d_13/kernel/Momentum"
  input: "conv2d_14/kernel"
  input: "conv2d_14/kernel/Momentum"
  input: "conv2d_15/kernel"
  input: "conv2d_15/kernel/Momentum"
  input: "conv2d_16/kernel"
  input: "conv2d_16/kernel/Momentum"
  input: "conv2d_17/kernel"
  input: "conv2d_17/kernel/Momentum"
  input: "conv2d_18/kernel"
  input: "conv2d_18/kernel/Momentum"
  input: "conv2d_19/kernel"
  input: "conv2d_19/kernel/Momentum"
  input: "conv2d_2/kernel"
  input: "conv2d_2/kernel/Momentum"
  input: "conv2d_20/kernel"
  input: "conv2d_20/kernel/Momentum"
  input: "conv2d_21/kernel"
  input: "conv2d_21/kernel/Momentum"
  input: "conv2d_22/kernel"
  input: "conv2d_22/kernel/Momentum"
  input: "conv2d_23/kernel"
  input: "conv2d_23/kernel/Momentum"
  input: "conv2d_24/kernel"
  input: "conv2d_24/kernel/Momentum"
  input: "conv2d_25/kernel"
  input: "conv2d_25/kernel/Momentum"
  input: "conv2d_26/kernel"
  input: "conv2d_26/kernel/Momentum"
  input: "conv2d_27/kernel"
  input: "conv2d_27/kernel/Momentum"
  input: "conv2d_28/kernel"
  input: "conv2d_28/kernel/Momentum"
  input: "conv2d_29/kernel"
  input: "conv2d_29/kernel/Momentum"
  input: "conv2d_3/kernel"
  input: "conv2d_3/kernel/Momentum"
  input: "conv2d_30/kernel"
  input: "conv2d_30/kernel/Momentum"
  input: "conv2d_31/kernel"
  input: "conv2d_31/kernel/Momentum"
  input: "conv2d_32/kernel"
  input: "conv2d_32/kernel/Momentum"
  input: "conv2d_33/kernel"
  input: "conv2d_33/kernel/Momentum"
  input: "conv2d_4/kernel"
  input: "conv2d_4/kernel/Momentum"
  input: "conv2d_5/kernel"
  input: "conv2d_5/kernel/Momentum"
  input: "conv2d_6/kernel"
  input: "conv2d_6/kernel/Momentum"
  input: "conv2d_7/kernel"
  input: "conv2d_7/kernel/Momentum"
  input: "conv2d_8/kernel"
  input: "conv2d_8/kernel/Momentum"
  input: "conv2d_9/kernel"
  input: "conv2d_9/kernel/Momentum"
  input: "dense/bias"
  input: "dense/bias/Momentum"
  input: "dense/kernel"
  input: "dense/kernel/Momentum"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: "batch_normalization/beta"
        string_val: "batch_normalization/beta/Momentum"
        string_val: "batch_normalization/gamma"
        string_val: "batch_normalization/gamma/Momentum"
        string_val: "batch_normalization/moving_mean"
        string_val: "batch_normalization/moving_variance"
        string_val: "batch_normalization_1/beta"
        string_val: "batch_normalization_1/beta/Momentum"
        string_val: "batch_normalization_1/gamma"
        string_val: "batch_normalization_1/gamma/Momentum"
        string_val: "batch_normalization_1/moving_mean"
        string_val: "batch_normalization_1/moving_variance"
        string_val: "batch_normalization_10/beta"
        string_val: "batch_normalization_10/beta/Momentum"
        string_val: "batch_normalization_10/gamma"
        string_val: "batch_normalization_10/gamma/Momentum"
        string_val: "batch_normalization_10/moving_mean"
        string_val: "batch_normalization_10/moving_variance"
        string_val: "batch_normalization_11/beta"
        string_val: "batch_normalization_11/beta/Momentum"
        string_val: "batch_normalization_11/gamma"
        string_val: "batch_normalization_11/gamma/Momentum"
        string_val: "batch_normalization_11/moving_mean"
        string_val: "batch_normalization_11/moving_variance"
        string_val: "batch_normalization_12/beta"
        string_val: "batch_normalization_12/beta/Momentum"
        string_val: "batch_normalization_12/gamma"
        string_val: "batch_normalization_12/gamma/Momentum"
        string_val: "batch_normalization_12/moving_mean"
        string_val: "batch_normalization_12/moving_variance"
        string_val: "batch_normalization_13/beta"
        string_val: "batch_normalization_13/beta/Momentum"
        string_val: "batch_normalization_13/gamma"
        string_val: "batch_normalization_13/gamma/Momentum"
        string_val: "batch_normalization_13/moving_mean"
        string_val: "batch_normalization_13/moving_variance"
        string_val: "batch_normalization_14/beta"
        string_val: "batch_normalization_14/beta/Momentum"
        string_val: "batch_normalization_14/gamma"
        string_val: "batch_normalization_14/gamma/Momentum"
        string_val: "batch_normalization_14/moving_mean"
        string_val: "batch_normalization_14/moving_variance"
        string_val: "batch_normalization_15/beta"
        string_val: "batch_normalization_15/beta/Momentum"
        string_val: "batch_normalization_15/gamma"
        string_val: "batch_normalization_15/gamma/Momentum"
        string_val: "batch_normalization_15/moving_mean"
        string_val: "batch_normalization_15/moving_variance"
        string_val: "batch_normalization_16/beta"
        string_val: "batch_normalization_16/beta/Momentum"
        string_val: "batch_normalization_16/gamma"
        string_val: "batch_normalization_16/gamma/Momentum"
        string_val: "batch_normalization_16/moving_mean"
        string_val: "batch_normalization_16/moving_variance"
        string_val: "batch_normalization_17/beta"
        string_val: "batch_normalization_17/beta/Momentum"
        string_val: "batch_normalization_17/gamma"
        string_val: "batch_normalization_17/gamma/Momentum"
        string_val: "batch_normalization_17/moving_mean"
        string_val: "batch_normalization_17/moving_variance"
        string_val: "batch_normalization_18/beta"
        string_val: "batch_normalization_18/beta/Momentum"
        string_val: "batch_normalization_18/gamma"
        string_val: "batch_normalization_18/gamma/Momentum"
        string_val: "batch_normalization_18/moving_mean"
        string_val: "batch_normalization_18/moving_variance"
        string_val: "batch_normalization_19/beta"
        string_val: "batch_normalization_19/beta/Momentum"
        string_val: "batch_normalization_19/gamma"
        string_val: "batch_normalization_19/gamma/Momentum"
        string_val: "batch_normalization_19/moving_mean"
        string_val: "batch_normalization_19/moving_variance"
        string_val: "batch_normalization_2/beta"
        string_val: "batch_normalization_2/beta/Momentum"
        string_val: "batch_normalization_2/gamma"
        string_val: "batch_normalization_2/gamma/Momentum"
        string_val: "batch_normalization_2/moving_mean"
        string_val: "batch_normalization_2/moving_variance"
        string_val: "batch_normalization_20/beta"
        string_val: "batch_normalization_20/beta/Momentum"
        string_val: "batch_normalization_20/gamma"
        string_val: "batch_normalization_20/gamma/Momentum"
        string_val: "batch_normalization_20/moving_mean"
        string_val: "batch_normalization_20/moving_variance"
        string_val: "batch_normalization_21/beta"
        string_val: "batch_normalization_21/beta/Momentum"
        string_val: "batch_normalization_21/gamma"
        string_val: "batch_normalization_21/gamma/Momentum"
        string_val: "batch_normalization_21/moving_mean"
        string_val: "batch_normalization_21/moving_variance"
        string_val: "batch_normalization_22/beta"
        string_val: "batch_normalization_22/beta/Momentum"
        string_val: "batch_normalization_22/gamma"
        string_val: "batch_normalization_22/gamma/Momentum"
        string_val: "batch_normalization_22/moving_mean"
        string_val: "batch_normalization_22/moving_variance"
        string_val: "batch_normalization_23/beta"
        string_val: "batch_normalization_23/beta/Momentum"
        string_val: "batch_normalization_23/gamma"
        string_val: "batch_normalization_23/gamma/Momentum"
        string_val: "batch_normalization_23/moving_mean"
        string_val: "batch_normalization_23/moving_variance"
        string_val: "batch_normalization_24/beta"
        string_val: "batch_normalization_24/beta/Momentum"
        string_val: "batch_normalization_24/gamma"
        string_val: "batch_normalization_24/gamma/Momentum"
        string_val: "batch_normalization_24/moving_mean"
        string_val: "batch_normalization_24/moving_variance"
        string_val: "batch_normalization_25/beta"
        string_val: "batch_normalization_25/beta/Momentum"
        string_val: "batch_normalization_25/gamma"
        string_val: "batch_normalization_25/gamma/Momentum"
        string_val: "batch_normalization_25/moving_mean"
        string_val: "batch_normalization_25/moving_variance"
        string_val: "batch_normalization_26/beta"
        string_val: "batch_normalization_26/beta/Momentum"
        string_val: "batch_normalization_26/gamma"
        string_val: "batch_normalization_26/gamma/Momentum"
        string_val: "batch_normalization_26/moving_mean"
        string_val: "batch_normalization_26/moving_variance"
        string_val: "batch_normalization_27/beta"
        string_val: "batch_normalization_27/beta/Momentum"
        string_val: "batch_normalization_27/gamma"
        string_val: "batch_normalization_27/gamma/Momentum"
        string_val: "batch_normalization_27/moving_mean"
        string_val: "batch_normalization_27/moving_variance"
        string_val: "batch_normalization_28/beta"
        string_val: "batch_normalization_28/beta/Momentum"
        string_val: "batch_normalization_28/gamma"
        string_val: "batch_normalization_28/gamma/Momentum"
        string_val: "batch_normalization_28/moving_mean"
        string_val: "batch_normalization_28/moving_variance"
        string_val: "batch_normalization_29/beta"
        string_val: "batch_normalization_29/beta/Momentum"
        string_val: "batch_normalization_29/gamma"
        string_val: "batch_normalization_29/gamma/Momentum"
        string_val: "batch_normalization_29/moving_mean"
        string_val: "batch_normalization_29/moving_variance"
        string_val: "batch_normalization_3/beta"
        string_val: "batch_normalization_3/beta/Momentum"
        string_val: "batch_normalization_3/gamma"
        string_val: "batch_normalization_3/gamma/Momentum"
        string_val: "batch_normalization_3/moving_mean"
        string_val: "batch_normalization_3/moving_variance"
        string_val: "batch_normalization_30/beta"
        string_val: "batch_normalization_30/beta/Momentum"
        string_val: "batch_normalization_30/gamma"
        string_val: "batch_normalization_30/gamma/Momentum"
        string_val: "batch_normalization_30/moving_mean"
        string_val: "batch_normalization_30/moving_variance"
        string_val: "batch_normalization_4/beta"
        string_val: "batch_normalization_4/beta/Momentum"
        string_val: "batch_normalization_4/gamma"
        string_val: "batch_normalization_4/gamma/Momentum"
        string_val: "batch_normalization_4/moving_mean"
        string_val: "batch_normalization_4/moving_variance"
        string_val: "batch_normalization_5/beta"
        string_val: "batch_normalization_5/beta/Momentum"
        string_val: "batch_normalization_5/gamma"
        string_val: "batch_normalization_5/gamma/Momentum"
        string_val: "batch_normalization_5/moving_mean"
        string_val: "batch_normalization_5/moving_variance"
        string_val: "batch_normalization_6/beta"
        string_val: "batch_normalization_6/beta/Momentum"
        string_val: "batch_normalization_6/gamma"
        string_val: "batch_normalization_6/gamma/Momentum"
        string_val: "batch_normalization_6/moving_mean"
        string_val: "batch_normalization_6/moving_variance"
        string_val: "batch_normalization_7/beta"
        string_val: "batch_normalization_7/beta/Momentum"
        string_val: "batch_normalization_7/gamma"
        string_val: "batch_normalization_7/gamma/Momentum"
        string_val: "batch_normalization_7/moving_mean"
        string_val: "batch_normalization_7/moving_variance"
        string_val: "batch_normalization_8/beta"
        string_val: "batch_normalization_8/beta/Momentum"
        string_val: "batch_normalization_8/gamma"
        string_val: "batch_normalization_8/gamma/Momentum"
        string_val: "batch_normalization_8/moving_mean"
        string_val: "batch_normalization_8/moving_variance"
        string_val: "batch_normalization_9/beta"
        string_val: "batch_normalization_9/beta/Momentum"
        string_val: "batch_normalization_9/gamma"
        string_val: "batch_normalization_9/gamma/Momentum"
        string_val: "batch_normalization_9/moving_mean"
        string_val: "batch_normalization_9/moving_variance"
        string_val: "conv2d/kernel"
        string_val: "conv2d/kernel/Momentum"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_1/kernel/Momentum"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_10/kernel/Momentum"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_11/kernel/Momentum"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_12/kernel/Momentum"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_13/kernel/Momentum"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_14/kernel/Momentum"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_15/kernel/Momentum"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_16/kernel/Momentum"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_17/kernel/Momentum"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_18/kernel/Momentum"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_19/kernel/Momentum"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_2/kernel/Momentum"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_20/kernel/Momentum"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_21/kernel/Momentum"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_22/kernel/Momentum"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_23/kernel/Momentum"
        string_val: "conv2d_24/kernel"
        string_val: "conv2d_24/kernel/Momentum"
        string_val: "conv2d_25/kernel"
        string_val: "conv2d_25/kernel/Momentum"
        string_val: "conv2d_26/kernel"
        string_val: "conv2d_26/kernel/Momentum"
        string_val: "conv2d_27/kernel"
        string_val: "conv2d_27/kernel/Momentum"
        string_val: "conv2d_28/kernel"
        string_val: "conv2d_28/kernel/Momentum"
        string_val: "conv2d_29/kernel"
        string_val: "conv2d_29/kernel/Momentum"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_3/kernel/Momentum"
        string_val: "conv2d_30/kernel"
        string_val: "conv2d_30/kernel/Momentum"
        string_val: "conv2d_31/kernel"
        string_val: "conv2d_31/kernel/Momentum"
        string_val: "conv2d_32/kernel"
        string_val: "conv2d_32/kernel/Momentum"
        string_val: "conv2d_33/kernel"
        string_val: "conv2d_33/kernel/Momentum"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_4/kernel/Momentum"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_5/kernel/Momentum"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_6/kernel/Momentum"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_7/kernel/Momentum"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_8/kernel/Momentum"
        string_val: "conv2d_9/kernel"
        string_val: "conv2d_9/kernel/Momentum"
        string_val: "dense/bias"
        string_val: "dense/bias/Momentum"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Momentum"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 259
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 259
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "batch_normalization/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "batch_normalization/beta/Momentum"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "batch_normalization/gamma"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "batch_normalization/gamma/Momentum"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "batch_normalization/moving_mean"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "batch_normalization/moving_variance"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "batch_normalization_1/beta"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "batch_normalization_1/beta/Momentum"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "batch_normalization_1/gamma"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "batch_normalization_1/gamma/Momentum"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "batch_normalization_1/moving_mean"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "batch_normalization_1/moving_variance"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "batch_normalization_10/beta"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "batch_normalization_10/beta/Momentum"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "batch_normalization_10/gamma"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "batch_normalization_10/gamma/Momentum"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "batch_normalization_10/moving_mean"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "batch_normalization_10/moving_variance"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_10/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "batch_normalization_11/beta"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "batch_normalization_11/beta/Momentum"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "batch_normalization_11/gamma"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "batch_normalization_11/gamma/Momentum"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "batch_normalization_11/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "batch_normalization_11/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_11/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "batch_normalization_12/beta"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "batch_normalization_12/beta/Momentum"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "batch_normalization_12/gamma"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "batch_normalization_12/gamma/Momentum"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "batch_normalization_12/moving_mean"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "batch_normalization_12/moving_variance"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_12/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "batch_normalization_13/beta"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "batch_normalization_13/beta/Momentum"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "batch_normalization_13/gamma"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "batch_normalization_13/gamma/Momentum"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "batch_normalization_13/moving_mean"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "batch_normalization_13/moving_variance"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_13/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "batch_normalization_14/beta"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "batch_normalization_14/beta/Momentum"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "batch_normalization_14/gamma"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "batch_normalization_14/gamma/Momentum"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "batch_normalization_14/moving_mean"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "batch_normalization_14/moving_variance"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_14/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "batch_normalization_15/beta"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "batch_normalization_15/beta/Momentum"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "batch_normalization_15/gamma"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "batch_normalization_15/gamma/Momentum"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "batch_normalization_15/moving_mean"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "batch_normalization_15/moving_variance"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_15/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "batch_normalization_16/beta"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "batch_normalization_16/beta/Momentum"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "batch_normalization_16/gamma"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "batch_normalization_16/gamma/Momentum"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "batch_normalization_16/moving_mean"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "batch_normalization_16/moving_variance"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_16/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "batch_normalization_17/beta"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "batch_normalization_17/beta/Momentum"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "batch_normalization_17/gamma"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "batch_normalization_17/gamma/Momentum"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "batch_normalization_17/moving_mean"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "batch_normalization_17/moving_variance"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_17/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "batch_normalization_18/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "batch_normalization_18/beta/Momentum"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "batch_normalization_18/gamma"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "batch_normalization_18/gamma/Momentum"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "batch_normalization_18/moving_mean"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "batch_normalization_18/moving_variance"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_18/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "batch_normalization_19/beta"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "batch_normalization_19/beta/Momentum"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "batch_normalization_19/gamma"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "batch_normalization_19/gamma/Momentum"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "batch_normalization_19/moving_mean"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "batch_normalization_19/moving_variance"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_19/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "batch_normalization_2/beta"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "batch_normalization_2/beta/Momentum"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "batch_normalization_2/gamma"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "batch_normalization_2/gamma/Momentum"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "batch_normalization_2/moving_mean"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "batch_normalization_2/moving_variance"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "batch_normalization_20/beta"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "batch_normalization_20/beta/Momentum"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "batch_normalization_20/gamma"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "batch_normalization_20/gamma/Momentum"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "batch_normalization_20/moving_mean"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "batch_normalization_20/moving_variance"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_20/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "batch_normalization_21/beta"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "batch_normalization_21/beta/Momentum"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "batch_normalization_21/gamma"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "batch_normalization_21/gamma/Momentum"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "batch_normalization_21/moving_mean"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "batch_normalization_21/moving_variance"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_21/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "batch_normalization_22/beta"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "batch_normalization_22/beta/Momentum"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "batch_normalization_22/gamma"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "batch_normalization_22/gamma/Momentum"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "batch_normalization_22/moving_mean"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "batch_normalization_22/moving_variance"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_22/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "batch_normalization_23/beta"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "batch_normalization_23/beta/Momentum"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "batch_normalization_23/gamma"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "batch_normalization_23/gamma/Momentum"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "batch_normalization_23/moving_mean"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "batch_normalization_23/moving_variance"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_23/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "batch_normalization_24/beta"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "batch_normalization_24/beta/Momentum"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "batch_normalization_24/gamma"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "batch_normalization_24/gamma/Momentum"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "batch_normalization_24/moving_mean"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "batch_normalization_24/moving_variance"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_24/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "batch_normalization_25/beta"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "batch_normalization_25/beta/Momentum"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "batch_normalization_25/gamma"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "batch_normalization_25/gamma/Momentum"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "batch_normalization_25/moving_mean"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "batch_normalization_25/moving_variance"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_25/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "batch_normalization_26/beta"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "batch_normalization_26/beta/Momentum"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "batch_normalization_26/gamma"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "batch_normalization_26/gamma/Momentum"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "batch_normalization_26/moving_mean"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "batch_normalization_26/moving_variance"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_26/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "batch_normalization_27/beta"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "batch_normalization_27/beta/Momentum"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "batch_normalization_27/gamma"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "batch_normalization_27/gamma/Momentum"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "batch_normalization_27/moving_mean"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "batch_normalization_27/moving_variance"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_27/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "batch_normalization_28/beta"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "batch_normalization_28/beta/Momentum"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "batch_normalization_28/gamma"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "batch_normalization_28/gamma/Momentum"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "batch_normalization_28/moving_mean"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "batch_normalization_28/moving_variance"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_28/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "batch_normalization_29/beta"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "batch_normalization_29/beta/Momentum"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "batch_normalization_29/gamma"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "batch_normalization_29/gamma/Momentum"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "batch_normalization_29/moving_mean"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "batch_normalization_29/moving_variance"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_29/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "batch_normalization_3/beta"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "batch_normalization_3/beta/Momentum"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "batch_normalization_3/gamma"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "batch_normalization_3/gamma/Momentum"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "batch_normalization_3/moving_mean"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "batch_normalization_3/moving_variance"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_3/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "batch_normalization_30/beta"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "batch_normalization_30/beta/Momentum"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "batch_normalization_30/gamma"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "batch_normalization_30/gamma/Momentum"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "batch_normalization_30/moving_mean"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "batch_normalization_30/moving_variance"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_30/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "batch_normalization_4/beta"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "batch_normalization_4/beta/Momentum"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "batch_normalization_4/gamma"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "batch_normalization_4/gamma/Momentum"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "batch_normalization_4/moving_mean"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "batch_normalization_4/moving_variance"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_4/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "batch_normalization_5/beta"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "batch_normalization_5/beta/Momentum"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "batch_normalization_5/gamma"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "batch_normalization_5/gamma/Momentum"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "batch_normalization_5/moving_mean"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "batch_normalization_5/moving_variance"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_5/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "batch_normalization_6/beta"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "batch_normalization_6/beta/Momentum"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "batch_normalization_6/gamma"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "batch_normalization_6/gamma/Momentum"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "batch_normalization_6/moving_mean"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "batch_normalization_6/moving_variance"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_6/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "batch_normalization_7/beta"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "batch_normalization_7/beta/Momentum"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "batch_normalization_7/gamma"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "batch_normalization_7/gamma/Momentum"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "batch_normalization_7/moving_mean"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "batch_normalization_7/moving_variance"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_7/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "batch_normalization_8/beta"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "batch_normalization_8/beta/Momentum"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "batch_normalization_8/gamma"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "batch_normalization_8/gamma/Momentum"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "batch_normalization_8/moving_mean"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "batch_normalization_8/moving_variance"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_8/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "batch_normalization_9/beta"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "batch_normalization_9/beta/Momentum"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "batch_normalization_9/gamma"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "batch_normalization_9/gamma/Momentum"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "batch_normalization_9/moving_mean"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "batch_normalization_9/moving_variance"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@batch_normalization_9/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "conv2d/kernel"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "conv2d/kernel/Momentum"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "conv2d_1/kernel"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "conv2d_1/kernel/Momentum"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "conv2d_10/kernel"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "conv2d_10/kernel/Momentum"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "conv2d_11/kernel"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "conv2d_11/kernel/Momentum"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "conv2d_12/kernel"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "conv2d_12/kernel/Momentum"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "conv2d_13/kernel"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "conv2d_13/kernel/Momentum"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "conv2d_14/kernel"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "conv2d_14/kernel/Momentum"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "conv2d_15/kernel"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "conv2d_15/kernel/Momentum"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "conv2d_16/kernel"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "conv2d_16/kernel/Momentum"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "conv2d_17/kernel"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "conv2d_17/kernel/Momentum"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "conv2d_18/kernel"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "conv2d_18/kernel/Momentum"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "conv2d_19/kernel"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "conv2d_19/kernel/Momentum"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "conv2d_2/kernel"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "conv2d_2/kernel/Momentum"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "conv2d_20/kernel"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "conv2d_20/kernel/Momentum"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "conv2d_21/kernel"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "conv2d_21/kernel/Momentum"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "conv2d_22/kernel"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "conv2d_22/kernel/Momentum"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "conv2d_23/kernel"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "conv2d_23/kernel/Momentum"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "conv2d_24/kernel"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "conv2d_24/kernel/Momentum"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_24/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 32
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "conv2d_25/kernel"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "conv2d_25/kernel/Momentum"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_25/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "conv2d_26/kernel"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "conv2d_26/kernel/Momentum"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_26/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "conv2d_27/kernel"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "conv2d_27/kernel/Momentum"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_27/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "conv2d_28/kernel"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "conv2d_28/kernel/Momentum"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_28/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "conv2d_29/kernel"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "conv2d_29/kernel/Momentum"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_29/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "conv2d_3/kernel"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "conv2d_3/kernel/Momentum"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "conv2d_30/kernel"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "conv2d_30/kernel/Momentum"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_30/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "conv2d_31/kernel"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "conv2d_31/kernel/Momentum"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_31/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "conv2d_32/kernel"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "conv2d_32/kernel/Momentum"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_32/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "conv2d_33/kernel"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "conv2d_33/kernel/Momentum"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_33/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "conv2d_4/kernel"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "conv2d_4/kernel/Momentum"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "conv2d_5/kernel"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "conv2d_5/kernel/Momentum"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "conv2d_6/kernel"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "conv2d_6/kernel/Momentum"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "conv2d_7/kernel"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "conv2d_7/kernel/Momentum"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "conv2d_8/kernel"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "conv2d_8/kernel/Momentum"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "conv2d_9/kernel"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "conv2d_9/kernel/Momentum"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "dense/bias"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "dense/bias/Momentum"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "dense/kernel/Momentum"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "tf_map_func_OyxSeFxXjco"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "A wrapper for Defun that facilitates shape inference."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_map_func_48a2T2t7AXo"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "cast"
        type: DT_FLOAT
      }
      output_arg {
        name: "cast_1"
        type: DT_INT32
      }
      description: "A wrapper for Defun that facilitates shape inference."
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "image"
            s: "label"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "DecodeRaw"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\003\000\000\000 \000\000\000 \000\000\000"
          }
        }
      }
    }
    node_def {
      name: "Reshape"
      op: "Reshape"
      input: "DecodeRaw:output:0"
      input: "Reshape/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "transpose/perm"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "transpose"
      op: "Transpose"
      input: "Reshape:output:0"
      input: "transpose/perm:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "transpose:y:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
    }
    node_def {
      name: "Cast_1"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:1"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
    }
    ret {
      key: "cast"
      value: "Cast:y:0"
    }
    ret {
      key: "cast_1"
      value: "Cast_1:y:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_9HEwbnhZQXA"
      output_arg {
        name: "batchdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "/opt/ml/input/data/training/train.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames"
      op: "Reshape"
      input: "TensorSliceDataset/Const:output:0"
      input: "TensorSliceDataset/flat_filenames/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/flat_filenames:output:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_OyxSeFxXjco"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "FlatMapDataset:handle:0"
      input: "RepeatDataset/count:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "RepeatDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_map_func_48a2T2t7AXo"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 18003
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "ParallelMapDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "BatchDataset/batch_size"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "BatchDataset"
      op: "BatchDataset"
      input: "ShuffleDataset:handle:0"
      input: "BatchDataset/batch_size:output:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT32
          }
        }
      }
    }
    ret {
      key: "batchdataset"
      value: "BatchDataset:handle:0"
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
